{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA,wFAAsB;;;;;;;;;;;ACAT,WAAG,GAAG;IACjB,KAAK,EAAE,yBAAyB;IAChC,cAAc,EAAE,GAAG;CACpB,CAAC;;;;;;;;;;;ACHF,oDAA6C;AAC7C,mFAQoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,cAAc,CAAC;AAEjB,YAAI,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IACxC,QAAQ,EAAE;QACR,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,WAAW;QAC1B,IAAI,EAAE,wBAAc;QACpB,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,eAAe;KACzB;IACD,KAAK,EAAE;QACL,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,QAAQ;QACvB,IAAI,EAAE,qBAAW;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,6BAAmB;SACzB;QACD,OAAO,EAAE,YAAY;KACtB;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,SAAS;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,yBAAe;SACrB;QACD,OAAO,EAAE,4BAA4B;KACtC;IACD,cAAc,EAAE;QACd,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,kBAAkB;QACjC,IAAI,EAAE,8BAAoB;QAC1B,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,wBAAwB;KAClC;IACD,WAAW,EAAE;QACX,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,eAAe;QAC9B,KAAK,EAAE,2BAAiB;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE;SAChB;QACD,OAAO,EAAE,qBAAqB;KAC/B;IACD,iBAAiB,EAAE;QACjB,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,sBAAsB;QACrC,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC3B,SAAS,EAAE;YACT,GAAG,EAAE,6BAAmB;SACzB;QACD,OAAO,EAAE,kCAAkC;KAC5C;CACF,CAAC,CAAC;;;;;;;;;;;ACpEH,oDAA6C;AAC7C,mFAMoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,oBAAoB,CAAC;AAEvB,gBAAQ,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC5C,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,wBAAc;SACpB;QACD,IAAI,EAAE,8BAAoB;QAC1B,OAAO,EAAE,mBAAmB;KAC7B;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,wBAAc;SACpB;QACD,OAAO,EAAE,sBAAsB;KAChC;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,oCAA0B;QACjC,SAAS,EAAE;YACT,GAAG,EAAE,qCAA2B;SACjC;QACD,OAAO,EAAE,oCAAoC;KAC9C;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,8BAAoB;QAC1B,SAAS,EAAE;YACT,GAAG,EAAE,wBAAc;SACpB;QACD,OAAO,EAAE,iBAAiB;KAC3B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,iBAAiB;KAC3B;CACF,CAAC,CAAC;;;;;;;;;;;AClEH,yHAAkD;AAClD,yHAAkD;AAClD,uIAAgE;AAChE,oDAA6C;AAC7C,iIAA0D;AAC1D,2HAAoD;AACpD,+HAAwD;AACxD,2HAAoD;AACpD,+HAAwD;AACxD,yHAAkD;AAClD,qIAA8D;AAC9D,mIAA4D;AAC5D,yIAAkE;AAClE,yIAAiE;AACjE,uHAAgD;AAChD,6HAAsD;AAEzC,gBAAQ,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC5C,IAAI,EAAJ,+BAAI;IACJ,IAAI,EAAJ,+BAAI;IACJ,WAAW,EAAX,6CAAW;IACX,QAAQ,EAAR,uCAAQ;IACR,KAAK,EAAL,iCAAK;IACL,OAAO,EAAP,qCAAO;IACP,KAAK,EAAL,iCAAK;IACL,OAAO,EAAP,qCAAO;IACP,IAAI,EAAJ,+BAAI;IACJ,UAAU,EAAV,2CAAU;IACV,SAAS,EAAT,yCAAS;IACT,YAAY,EAAZ,+CAAY;IACZ,WAAW,EAAX,8CAAW;IACX,GAAG,EAAH,6BAAG;IACH,MAAM,EAAN,mCAAM;CACP,CAAC,CAAC;;;;;;;;;;;ACjCH,oDAA6C;AAC7C,mFAIoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,uBAAuB,CAAC;AAE1B,oBAAY,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAChD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,4BAAkB;SACxB;QACD,OAAO,EAAE,0BAA0B;KACpC;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,uCAA6B;QACpC,SAAS,EAAE;YACT,GAAG,EAAE,wCAA8B;SACpC;QACD,OAAO,EAAE,uCAAuC;KACjD;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,qBAAqB;KAC/B;IACD,IAAI,EAAE;QACJ,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,WAAW;QAC1B,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,mBAAmB;KAC7B;IACD,OAAO,EAAE;QACP,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,WAAW;QAC1B,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,wBAAwB;KAClC;CACF,CAAC,CAAC;;;;;;;;;;;AChEH,oDAA6C;AAC7C,mFAOoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,gBAAgB,CAAC;AAEnB,aAAK,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IACzC,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,qBAAW;SACjB;QACD,IAAI,EAAE,2BAAiB;QACvB,OAAO,EAAE,gBAAgB;KAC1B;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,qBAAW;SACjB;QACD,OAAO,EAAE,mBAAmB;KAC7B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,gCAAsB;QAC7B,SAAS,EAAE;YACT,GAAG,EAAE,iCAAuB;SAC7B;QACD,OAAO,EAAE,gCAAgC;KAC1C;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,KAAK,EAAE,4BAAkB;QACzB,IAAI,EAAE,2BAAiB;QACvB,SAAS,EAAE;YACT,GAAG,EAAE,qBAAW;SACjB;QACD,OAAO,EAAE,cAAc;KACxB;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,cAAc;KACxB;CACF,CAAC,CAAC;;;;;;;;;;;ACpEH,oDAA6C;AAC7C,mFAMoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,kBAAkB,CAAC;AAErB,eAAO,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC3C,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,uBAAa;SACnB;QACD,IAAI,EAAE,6BAAmB;QACzB,OAAO,EAAE,kBAAkB;KAC5B;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,uBAAa;SACnB;QACD,OAAO,EAAE,qBAAqB;KAC/B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,kCAAwB;QAC/B,SAAS,EAAE;YACT,GAAG,EAAE,mCAAyB;SAC/B;QACD,OAAO,EAAE,kCAAkC;KAC5C;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,6BAAmB;QACzB,SAAS,EAAE;YACT,GAAG,EAAE,uBAAa;SACnB;QACD,OAAO,EAAE,gBAAgB;KAC1B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,gBAAgB;KAC1B;CACF,CAAC,CAAC;;;;;;;;;;;AClEH,oDAA6C;AAC7C,mFAIoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,qBAAqB,CAAC;AAExB,kBAAU,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC9C,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,0BAAgB;SACtB;QACD,OAAO,EAAE,wBAAwB;KAClC;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,qCAA2B;QAClC,SAAS,EAAE;YACT,GAAG,EAAE,sCAA4B;SAClC;QACD,OAAO,EAAE,qCAAqC;KAC/C;CACF,CAAC,CAAC;;;;;;;;;;;AC/BH,oDAA6C;AAC7C,mFAMoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,kBAAkB,CAAC;AAErB,eAAO,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC3C,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,WAAW,EAAE,qBAAqB;QAClC,SAAS,EAAE;YACT,GAAG,EAAE,uBAAa;SACnB;QACD,IAAI,EAAE,6BAAmB;QACzB,OAAO,EAAE,kBAAkB;KAC5B;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,uBAAa;SACnB;QACD,OAAO,EAAE,qBAAqB;KAC/B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,kCAAwB;QAC/B,SAAS,EAAE;YACT,GAAG,EAAE,mCAAyB;SAC/B;QACD,OAAO,EAAE,kCAAkC;KAC5C;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,WAAW,EAAE,qBAAqB;QAClC,IAAI,EAAE,6BAAmB;QACzB,SAAS,EAAE;YACT,GAAG,EAAE,uBAAa;SACnB;QACD,OAAO,EAAE,gBAAgB;KAC1B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,gBAAgB;KAC1B;CACF,CAAC,CAAC;;;;;;;;;;;ACpEH,oDAA6C;AAC7C,yCAAwB;AAExB,MAAM,MAAM,GAAG,iBAAiB,CAAC;AAEpB,cAAM,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC1C,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,OAAC,CAAC,MAAM,CAAC;YACd,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;YAChB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;SAC5B,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,EAAE,CAAC;SACtC;QACD,OAAO,EAAE,iBAAiB;KAC3B;CACF,CAAC,CAAC;;;;;;;;;;;AClBH,oDAA6C;AAC7C,mFAOoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,eAAe,CAAC;AAElB,YAAI,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IACxC,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,IAAI,EAAE,0BAAgB;QACtB,OAAO,EAAE,eAAe;KACzB;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,kBAAkB;KAC5B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,+BAAqB;QAC5B,SAAS,EAAE;YACT,GAAG,EAAE,gCAAsB;SAC5B;QACD,OAAO,EAAE,+BAA+B;KACzC;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,0BAAgB;QACtB,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,aAAa;KACvB;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,aAAa;KACvB;IACD,iBAAiB,EAAE;QACjB,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,kBAAkB;QACjC,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,qCAA2B;QACjC,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,yBAAyB;KACnC;CACF,CAAC,CAAC;;;;;;;;;;;AC/EH,oDAA6C;AAC7C,mFAAiE;AAEjE,MAAM,MAAM,GAAG,oBAAoB,CAAC;AAEvB,iBAAS,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC7C,SAAS,EAAE;QACT,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,YAAY;QAC3B,KAAK,EAAE,4BAAkB;QACzB,SAAS,EAAE;YACT,GAAG,EAAE,yBAAe;SACrB;QACD,OAAO,EAAE,oBAAoB;KAC9B;CACF,CAAC,CAAC;;;;;;;;;;;ACfH,oDAA6C;AAC7C,mFAOoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,gBAAgB,CAAC;AAEnB,aAAK,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IACzC,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,WAAW,EAAE,qBAAqB;QAClC,SAAS,EAAE;YACT,GAAG,EAAE,qBAAW;SACjB;QACD,IAAI,EAAE,2BAAiB;QACvB,OAAO,EAAE,gBAAgB;KAC1B;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,qBAAW;SACjB;QACD,OAAO,EAAE,mBAAmB;KAC7B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,gCAAsB;QAC7B,SAAS,EAAE;YACT,GAAG,EAAE,iCAAuB;SAC7B;QACD,OAAO,EAAE,gCAAgC;KAC1C;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,WAAW,EAAE,qBAAqB;QAClC,IAAI,EAAE,2BAAiB;QACvB,SAAS,EAAE;YACT,GAAG,EAAE,qBAAW;SACjB;QACD,OAAO,EAAE,cAAc;KACxB;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,cAAc;KACxB;IACD,YAAY,EAAE;QACZ,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,aAAa;QAC5B,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,iCAAuB;QAC7B,SAAS,EAAE;YACT,GAAG,EAAE,qBAAW;SACjB;QACD,OAAO,EAAE,qBAAqB;KAC/B;CACF,CAAC,CAAC;;;;;;;;;;;ACjFH,oDAA6C;AAC7C,mFAMoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,uBAAuB,CAAC;AAE1B,mBAAW,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC/C,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,2BAAiB;SACvB;QACD,IAAI,EAAE,iCAAuB;QAC7B,OAAO,EAAE,uBAAuB;KACjC;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,2BAAiB;SACvB;QACD,OAAO,EAAE,0BAA0B;KACpC;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,sCAA4B;QACnC,SAAS,EAAE;YACT,GAAG,EAAE,uCAA6B;SACnC;QACD,OAAO,EAAE,uCAAuC;KACjD;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,IAAI,EAAE,iCAAuB;QAC7B,SAAS,EAAE;YACT,GAAG,EAAE,2BAAiB;SACvB;QACD,OAAO,EAAE,qBAAqB;KAC/B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,qBAAqB;KAC/B;CACF,CAAC,CAAC;;;;;;;;;;;AC/DH,oDAA6C;AAC7C,mFAMoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,cAAc,CAAC;AAEjB,WAAG,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IACvC,MAAM,EAAE;QACN,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,mBAAS;SACf;QACD,IAAI,EAAE,yBAAe;QACrB,OAAO,EAAE,cAAc;KACxB;IACD,GAAG,EAAE;QACH,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,mBAAS;SACf;QACD,OAAO,EAAE,iBAAiB;KAC3B;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,8BAAoB;QAC3B,SAAS,EAAE;YACT,GAAG,EAAE,+BAAqB;SAC3B;QACD,OAAO,EAAE,8BAA8B;KACxC;IACD,MAAM,EAAE;QACN,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,yBAAe;QACrB,SAAS,EAAE;YACT,GAAG,EAAE,mBAAS;SACf;QACD,OAAO,EAAE,YAAY;KACtB;IACD,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;QACxB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;SACxB;QACD,OAAO,EAAE,YAAY;KACtB;CACF,CAAC,CAAC;;;;;;;;;;;AClEH,oDAA6C;AAC7C,mFAMoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,sBAAsB,CAAC;AAEzB,mBAAW,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IAC/C,OAAO,EAAE;QACP,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,UAAU;QACzB,SAAS,EAAE;YACT,GAAG,EAAE,OAAC,CAAC,MAAM,CAAC;gBACZ,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE;aACpB,CAAC;SACH;QACD,OAAO,EAAE,oBAAoB;KAC9B;IACD,QAAQ,EAAE;QACR,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,WAAW;QAC1B,IAAI,EAAE,iCAAuB;QAC7B,SAAS,EAAE;YACT,GAAG,EAAE,2BAAiB;SACvB;QACD,OAAO,EAAE,iBAAiB;KAC3B;IACD,QAAQ,EAAE;QACR,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,WAAW;QAC1B,IAAI,EAAE,iCAAuB;QAC7B,SAAS,EAAE;YACT,GAAG,EAAE,2BAAiB;SACvB;QACD,OAAO,EAAE,eAAe;KACzB;IACD,MAAM,EAAE;QACN,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,sCAA4B;QACnC,SAAS,EAAE;YACT,GAAG,EAAE,uCAA6B;SACnC;QACD,OAAO,EAAE,qCAAqC;KAC/C;IACD,GAAG,EAAE;QACH,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,IAAI,EAAE,mBAAS;QACf,SAAS,EAAE;YACT,GAAG,EAAE,2BAAiB;SACvB;QACD,OAAO,EAAE,cAAc;KACxB;CACF,CAAC,CAAC;;;;;;;;;;;AC3DH,oDAA6C;AAC7C,mFAOoB;AACpB,yCAAwB;AAExB,MAAM,MAAM,GAAG,eAAe,CAAC;AAElB,YAAI,GAAG,uBAAY,GAAE,CAAC,MAAM,CAAC;IACxC,UAAU,EAAE;QACV,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,IAAI,EAAE,0BAAgB;QACtB,OAAO,EAAE,eAAe;KACzB;IACD,OAAO,EAAE;QACP,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,kBAAkB;KAC5B;IACD,QAAQ,EAAE;QACR,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG,MAAM,EAAE;QACjB,KAAK,EAAE,iCAAuB;QAC9B,SAAS,EAAE;YACT,GAAG,EAAE,gCAAsB;SAC5B;QACD,OAAO,EAAE,+BAA+B;KACzC;IACD,UAAU,EAAE;QACV,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,MAAM;QACrB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,0BAAgB;QACtB,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,aAAa;KACvB;IACD,UAAU,EAAE;QACV,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,kBAAkB;QACjC,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,8BAAoB;QAC1B,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,kBAAkB;KAC5B;IACD,YAAY,EAAE;QACZ,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,oBAAoB;QACnC,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,8BAAoB;QAC1B,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,kBAAkB;KAC5B;IACD,kBAAkB,EAAE;QAClB,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,GAAG,MAAM,4BAA4B;QAC3C,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;YACnB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;SACtB,CAAC;QACF,IAAI,EAAE,OAAC,CAAC,GAAG,EAAE;QACb,SAAS,EAAE;YACT,GAAG,EAAE,oBAAU;SAChB;QACD,OAAO,EAAE,kBAAkB;KAC5B;CACF,CAAC,CAAC;;;;;;;;;;;AC3FH,MAAa,iBAAiB;IAC5B,EAAE,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,GAAG,CAAC;IACjB,CAAC;IACD,IAAI,CAAC,CAAC;QACJ,OAAO,CAAC,GAAG,GAAG,CAAC;IACjB,CAAC;CACF;AAPD,8CAOC;;;;;;;;;;;ACPM,MAAM,qBAAqB,GAAG,CACnC,IAAyB,EACzB,QAAQ,GAAG,IAAI,QAAQ,EAAE,EACzB,SAAS,GAAG,EAAE,EACJ,EAAE;IACZ,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;YACb,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;YAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAExB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,YAAY,IAAI,CAAC,EAAE;gBACzD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAyB,EAAE,KAAa,EAAE,EAAE;wBACzD,MAAM,cAAc,GAAG,GAAG,QAAQ,IAAI,KAAK,GAAG,CAAC;wBAC/C,iCAAqB,EAAC,IAAI,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC,wCAAwC;oBACjG,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,iCAAqB,EAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,oCAAoC;iBACvF;aACF;iBAAM;gBACL,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aAClC;SACF;KACF;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AA1BW,6BAAqB,yBA0BhC;AAEK,MAAM,aAAa,GAAG,CAAC,IAAyB,EAAE,EAAE;IACzD,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QACnC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;YACjC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;aAAM,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;YACxC,yBAAa,EAAC,IAAI,CAAC,CAAC;SACrB;KACF;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAVW,qBAAa,iBAUxB;AAEK,MAAM,WAAW,GAAG,CAAC,GAAwB,EAAE,EAAE;IACtD,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;QACrB,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;YACrD,uBAAW,EAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SACvB;QACD,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YACxC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;SACjB;KACF;IACD,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAVW,mBAAW,eAUtB;;;;;;;;;;;AClDF,sGAA8B;AAC9B,0GAAkC;AAClC,sGAA8B;AAC9B,8GAAsC;AACtC,wGAAgC;;;;;;;;;;;ACJhC,+EAAkC;AAClC,yFAA+D;AAElD,2BAAmB,GAO5B;IACF,CAAC,6BAAgB,CAAC,cAAc,CAAC,EAAE;QACjC,KAAK,EAAE,iBAAiB;QACxB,WAAW,EAAE,qCAAqC;QAClD,EAAE,EAAE,SAAS;KACd;IACD,CAAC,6BAAgB,CAAC,cAAc,CAAC,EAAE;QACjC,KAAK,EAAE,iBAAiB;QACxB,WAAW,EAAE,uCAAuC;QACpD,EAAE,EAAE,SAAS;KACd;IACD,CAAC,6BAAgB,CAAC,cAAc,CAAC,EAAE;QACjC,KAAK,EAAE,iBAAiB;QACxB,WAAW,EAAE,gBAAgB,cAAG,CAAC,cAAc,oBAAoB;QACnE,EAAE,EAAE,gBAAgB;KACrB;IACD,CAAC,6BAAgB,CAAC,UAAU,CAAC,EAAE;QAC7B,KAAK,EAAE,aAAa;QACpB,WAAW,EAAE,YAAY,cAAG,CAAC,cAAc,kBAAkB;QAC7D,EAAE,EAAE,gBAAgB;KACrB;IACD,CAAC,6BAAgB,CAAC,YAAY,CAAC,EAAE;QAC/B,KAAK,EAAE,eAAe;QACtB,WAAW,EAAE,iDAAiD;QAC9D,EAAE,EAAE,yBAAyB;KAC9B;IACD,CAAC,6BAAgB,CAAC,YAAY,CAAC,EAAE;QAC/B,KAAK,EAAE,eAAe;QACtB,WAAW,EAAE,iDAAiD;QAC9D,EAAE,EAAE,yBAAyB;KAC9B;IACD,CAAC,6BAAgB,CAAC,YAAY,CAAC,EAAE;QAC/B,KAAK,EAAE,cAAc;QACrB,WAAW,EAAE,gDAAgD;QAC7D,EAAE,EAAE,gBAAgB;KACrB;IACD,CAAC,6BAAgB,CAAC,iBAAiB,CAAC,EAAE;QACpC,KAAK,EAAE,qBAAqB;QAC5B,WAAW,EAAE,+CAA+C;QAC5D,EAAE,EAAE,yBAAyB;KAC9B;IACD,CAAC,6BAAgB,CAAC,iBAAiB,CAAC,EAAE;QACpC,KAAK,EAAE,qBAAqB;QAC5B,WAAW,EAAE,0DAA0D;QACvE,EAAE,EAAE,yBAAyB;KAC9B;IACD,CAAC,6BAAgB,CAAC,iBAAiB,CAAC,EAAE;QACpC,KAAK,EAAE,qBAAqB;QAC5B,WAAW,EAAE,0DAA0D;QACvE,EAAE,EAAE,gBAAgB;KACrB;CACF,CAAC;AAEK,MAAM,uBAAuB,GAAG,CAAC,YAA0B,EAAE,EAAE;;IACpE,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;IAEvC,MAAM,QAAQ,qBAAQ,2BAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAE,CAAC;IAC/D,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW;SACxC,OAAO,CAAC,QAAQ,EAAE,oBAAQ,CAAC,KAAK,0CAAE,GAAG,CAAC,QAAQ,EAAE,mCAAI,EAAE,CAAC;SACvD,OAAO,CAAC,OAAO,EAAE,oBAAQ,CAAC,IAAI,0CAAE,SAAS,mCAAI,EAAE,CAAC;SAChD,OAAO,CAAC,SAAS,EAAE,oBAAQ,CAAC,MAAM,0CAAE,QAAQ,EAAE,mCAAI,GAAG,CAAC,CAAC;IAC1D,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;SACtB,OAAO,CAAC,UAAU,EAAE,cAAQ,CAAC,OAAO,mCAAI,EAAE,CAAC;SAC3C,OAAO,CAAC,UAAU,EAAE,cAAQ,CAAC,OAAO,mCAAI,EAAE,CAAC,CAAC;IAE/C,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAbW,+BAAuB,2BAalC;;;;;;;;;;;AC5EK,MAAM,MAAM,GAAG,CAAC,GAAW,EAAE,EAAE;IACpC,MAAM,WAAW,GACf,iEAAiE,CAAC;IACpE,OAAO,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC/B,CAAC,CAAC;AAJW,cAAM,UAIjB;AAEK,MAAM,mBAAmB,GAAG,CAAC,IAAY,EAAE,EAAE;IAClD,wCAAwC;IACxC,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KACpC;IAED,mDAAmD;IACnD,MAAM,GAAG,GAAG,YAAY,GAAG,GAAG,CAAC;IAC/B,MAAM,KAAK,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACvC,MAAM,IAAI,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAEtC,oCAAoC;IACpC,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACjD,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACrD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAEnD,oDAAoD;IACpD,OAAO,IAAI,MAAM,GAAG,QAAQ,GAAG,OAAO,EAAE,CAAC;AAC3C,CAAC,CAAC;AAnBW,2BAAmB,uBAmB9B;AAEK,MAAM,mBAAmB,GAAG,CAAC,IAAY,EAAE,EAAE;IAClD,wCAAwC;IACxC,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KACpC;IAED,0DAA0D;IAC1D,MAAM,GAAG,GAAG,YAAY,GAAG,GAAG,CAAC;IAC/B,MAAM,UAAU,GAAG,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,wCAAwC;IAC3F,MAAM,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,sCAAsC;IAExF,4BAA4B;IAC5B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IAEzD,oCAAoC;IACpC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7D,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAE5D,oDAAoD;IACpD,OAAO,IAAI,MAAM,GAAG,QAAQ,GAAG,OAAO,EAAE,CAAC;AAC3C,CAAC,CAAC;AAtBW,2BAAmB,uBAsB9B;AAEF,wCAAwC;AACxC,MAAM,QAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,EAAE;IACnD,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC7D,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC;IAE/B,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE;QACpB,CAAC,GAAG,MAAM,CAAC;QACX,CAAC,GAAG,CAAC,CAAC;KACP;SAAM,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;QAC7B,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,MAAM,CAAC;KACZ;SAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;QAC9B,CAAC,GAAG,MAAM,CAAC;QACX,CAAC,GAAG,CAAC,CAAC;KACP;SAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;QAC9B,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,MAAM,CAAC;KACZ;SAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;QAC9B,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,MAAM,CAAC;KACZ;SAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;QAC9B,CAAC,GAAG,MAAM,CAAC;QACX,CAAC,GAAG,CAAC,CAAC;KACP;IAED,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAClB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAClB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAElB,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACrB,CAAC,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAAC,IAAY,EAAE,EAAE;IAChD,wCAAwC;IACxC,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KACpC;IAED,wDAAwD;IACxD,MAAM,GAAG,GAAG,YAAY,GAAG,GAAG,CAAC;IAC/B,MAAM,UAAU,GAAG,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,wCAAwC;IAC3F,MAAM,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,sCAAsC;IAExF,4BAA4B;IAC5B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IAEzD,oCAAoC;IACpC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7D,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAE5D,oDAAoD;IACpD,OAAO,IAAI,MAAM,GAAG,QAAQ,GAAG,OAAO,EAAE,CAAC;AAC3C,CAAC,CAAC;AAtBW,yBAAiB,qBAsB5B;AAEW,qBAAa,GAAG,yBAAiB,CAAC;;;;;;;;;;;AC9GxC,MAAM,mBAAmB,GAAG,CAAC,IAAe,EAAE,WAAqB,EAAE,EAAE;;IAC5E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;QAAE,OAAO,KAAK,CAAC;IAErC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;QAC7B,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;YACpC,IAAI,UAAI,CAAC,WAAW,0CAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,UAAU,KAAK,IAAI,CAAC,EAAE;gBACzD,OAAO,IAAI,CAAC;aACb;SACF;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAXW,2BAAmB,uBAW9B;;;;;;;;;;;ACbF,kGAA4B;AAC5B,gGAA0B;AAC1B,mGAA6B;AAC7B,gGAA0B;AAC1B,2FAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AIJ3B,IAAY,KAMX;AAND,WAAY,KAAK;IACf,mDAA0C;IAE1C,qCAA4B;IAC5B,2CAAkC;IAClC,+CAAsC;AACxC,CAAC,EANW,KAAK,GAAL,aAAK,KAAL,aAAK,QAMhB;;;;;;;;;;;ACND,kGAAuB;AACvB,kGAAuB;AACvB,wGAA6B;AAC7B,yGAA8B;AAC9B,wGAA6B;AAC7B,sGAA2B;AAC3B,mGAAwB;AACxB,qGAA0B;AAC1B,mGAAwB;AACxB,qGAA0B;AAC1B,kGAAuB;AACvB,uGAA4B;AAC5B,0GAA+B;AAC/B,0GAA+B;AAC/B,iGAAsB;AACtB,oGAAyB;AACzB,oGAAyB;AACzB,mGAAwB;;;;;;;;;;;ACRxB,IAAY,gBAWX;AAXD,WAAY,gBAAgB;IAC1B,6DAAyC;IACzC,6DAAyC;IACzC,6DAAyC;IACzC,kDAA8B;IAC9B,kDAA8B;IAC9B,kDAA8B;IAC9B,sDAAkC;IAClC,sDAAkC;IAClC,8CAA0B;IAC1B,sDAAkC;AACpC,CAAC,EAXW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAW3B;AAwBD,IAAY,kBAEX;AAFD,WAAY,kBAAkB;IAC5B,uCAAiB;AACnB,CAAC,EAFW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAE7B;;;;;;;;;;;ACpCD,IAAY,WAMX;AAND,WAAY,WAAW;IACrB,kCAAmB;IACnB,sCAAuB;IACvB,sCAAuB;IACvB,8BAAe;IACf,sCAAuB;AACzB,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;;;;;;;;;;;;;;;;;;;;AEPD,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,4BAAa;IACb,gCAAiB;AACnB,CAAC,EAHW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAGtB;;;;;;;;;;;ACGD,IAAY,cA8DX;AA9DD,WAAY,cAAc;IACxB,6DAA2C;IAE3C,4CAA0B;IAC1B,sCAAoB;IACpB,4CAA0B;IAC1B,qEAAmD;IACnD,6CAA2B;IAE3B,4DAA0C;IAC1C,8DAA4C;IAC5C,8DAA4C;IAC5C,6EAA2D;IAE3D,0CAAwB;IACxB,oCAAkB;IAClB,0CAAwB;IACxB,0CAAwB;IACxB,2CAAyB;IAEzB,oDAAkC;IAClC,8CAA4B;IAC5B,oDAAkC;IAClC,oDAAkC;IAClC,qDAAmC;IACnC,8EAA4D;IAE5D,8CAA4B;IAC5B,wCAAsB;IACtB,8CAA4B;IAC5B,uEAAqD;IACrD,8CAA4B;IAC5B,uEAAqD;IACrD,+CAA6B;IAC7B,wEAAsD;IAEtD,kDAAgC;IAChC,4CAA0B;IAC1B,kDAAgC;IAChC,kDAAgC;IAChC,mDAAiC;IAEjC,8CAA4B;IAC5B,wCAAsB;IACtB,8CAA4B;IAC5B,uEAAqD;IACrD,8CAA4B;IAC5B,uEAAqD;IACrD,+CAA6B;IAC7B,wEAAsD;IAEtD,kDAAgC;IAChC,4CAA0B;IAC1B,kDAAgC;IAChC,kDAAgC;IAChC,mDAAiC;IAEjC,4CAA0B;IAC1B,sCAAoB;IACpB,4CAA0B;IAC1B,4CAA0B;IAC1B,6CAA2B;AAC7B,CAAC,EA9DW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QA8DzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AM7CD,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,gCAAiB;IACjB,sCAAuB;AACzB,CAAC,EAHW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAGtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AInCD,yCAAwB;AAExB,+EAAsD;AAEtD,MAAM,IAAI,GAAG;IACX,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;IACzB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;CACrB,CAAC;AAEW,kBAAU,GAAG,OAAC,CAAC,MAAM,iBAChC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,IACX,IAAI,EACP,CAAC;AAEU,wBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAElC,sBAAc,GAAG,uBAAgB,CAAC,KAAK,CAAC,wBAAgB,CAAC,CAAC;AAE1D,mBAAW,GAAG,OAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAE7B,2BAAmB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC1C,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,IAAI,EAAE,iBAAU;CACjB,CAAC,CAAC;AAEU,yBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACxC,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;CACxB,CAAC,CAAC;AAEU,4BAAoB,GAAG,OAAC;KAClC,MAAM,CAAC;IACN,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE;IAC3B,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE;CAC5B,CAAC;KACD,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,eAAe,EAAE;IAC3D,OAAO,EAAE,uBAAuB;IAChC,IAAI,EAAE,CAAC,iBAAiB,CAAC;CAC1B,CAAC,CAAC;;;;;;;;;;;ACtCL,yCAAwB;AACxB,2FAGsB;AAGtB,MAAM,IAAI,GAAG;IACX,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;CACjB,CAAC;AAEW,iCAAyB,GAAG,OAAC,CAAC,MAAM,iBAC/C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,IACX,IAAI,EACP,CAAC;AAEU,sBAAc,GAAG,OAAC,CAAC,MAAM,iBACpC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,MAAM,EAAE,iCAAyB,CAAC,QAAQ,EAAE,EAC5C,QAAQ,EAAE,iCAAyB,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,IACnD,IAAI,EACP,CAAC;AAEU,4BAAoB,GAAG,OAAC,CAAC,MAAM,iCACvC,IAAI,KACP,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,EACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,IACnC,CAAC;AAEU,4BAAoB,GAAG,OAAC,CAAC,MAAM,iCACvC,IAAI,KACP,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,EACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,IACnC,CAAC;AAEU,mCAA2B,GAAG,qCAAwB,CAAC,KAAK,CACvE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,sBAAc,CAAC,KAAK,EAAE,EAAE,CAAC,CAC3C,CAAC;AAEW,kCAA0B,GAAG,oCAAuB,CAAC,KAAK,CACrE,OAAC,CAAC,MAAM,CAAC;IACP,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC3B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;IACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;IACnC,MAAM,EAAE,OAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;CACvE,CAAC,CACH,CAAC;;;;;;;;;;;ACjDF,yCAAwB;AAEX,sBAAc,GAAG,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,gBAAqB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;;;;;;;;;ACF9E,yCAAwB;AAEX,kBAAU,GAAG,OAAC,CAAC,MAAM,CAAC;IACjC,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC5B,CAAC,CAAC;;;;;;;;;;;ACNH,+FAAuB;AACvB,+FAAuB;AACvB,qGAA6B;AAC7B,sGAA8B;AAC9B,mGAA2B;AAC3B,qGAA6B;AAC7B,+FAAuB;AACvB,gGAAwB;AACxB,kGAA0B;AAC1B,gGAAwB;AACxB,kGAA0B;AAC1B,+FAAuB;AACvB,uGAA+B;AAC/B,oGAA4B;AAC5B,uGAA+B;AAC/B,uGAA+B;AAC/B,8FAAsB;AACtB,iGAAyB;;;;;;;;;;;ACjBzB,yCAAwB;AACxB,2FAGsB;AACtB,+EAAoC;AACpC,yFAAiD;AACjD,iFAAsC;AACtC,iFAAsC;AAEtC,MAAM,IAAI,GAAG;IACX,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC;QACX,6BAAgB,CAAC,cAAc;QAC/B,6BAAgB,CAAC,cAAc;QAC/B,6BAAgB,CAAC,YAAY;QAC7B,6BAAgB,CAAC,YAAY;QAC7B,6BAAgB,CAAC,YAAY;QAC7B,6BAAgB,CAAC,iBAAiB;QAClC,6BAAgB,CAAC,iBAAiB;QAClC,6BAAgB,CAAC,iBAAiB;QAClC,6BAAgB,CAAC,UAAU;QAC3B,6BAAgB,CAAC,cAAc;KAChC,CAAC;IACF,QAAQ,EAAE,OAAC,CAAC,MAAM,CAAC;QACjB,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;QACrC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;QACrC,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;QACpC,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC7B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;QACpC,KAAK,EAAE,mBAAW,CAAC,QAAQ,EAAE;QAC7B,KAAK,EAAE,mBAAW,CAAC,QAAQ,EAAE;QAC7B,IAAI,EAAE,iBAAU,CAAC,QAAQ,EAAE;KAC5B,CAAC;CACH,CAAC;AAEW,0BAAkB,GAAG,OAAC,CAAC,MAAM,iBACxC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,IAAI,EAAE,iBAAU,EAChB,MAAM,EAAE,OAAC,CAAC,OAAO,EAAE,EACnB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE,IAChB,IAAI,EACP,CAAC;AAEU,gCAAwB,GAAG,OAAC,CAAC,MAAM,iBAC9C,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,EACjB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,IACpB,IAAI,EACP,CAAC;AAEU,sCAA8B,GAAG,qCAAwB,CAAC,KAAK,CAC1E,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,0BAAkB,CAAC,KAAK,EAAE,EAAE,CAAC,CAC/C,CAAC;AAEW,qCAA6B,GAAG,oCAAuB,CAAC,KAAK,CACxE,OAAC,CAAC,MAAM,CAAC;IACP,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IAClC,SAAS,EAAE,OAAC,CAAC,UAAU,CACrB,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAC/B,OAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CACpB;IACD,OAAO,EAAE,OAAC,CAAC,UAAU,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,OAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;CAC5E,CAAC,CACH,CAAC;AAEW,gCAAwB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC/C,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE;IACf,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE;IACnB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE;IACtB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;IAClB,KAAK,EAAE,0BAAkB,CAAC,KAAK,EAAE;CAClC,CAAC,CAAC;;;;;;;;;;;ACvEH,yCAAwB;AACxB,2FAGsB;AACtB,iFAAsC;AACtC,+EAAoC;AACpC,+FAAoD;AACpD,qFAAqD;AAExC,0BAAkB,GAAG,OAAC,CAAC,MAAM,CAAC;IACzC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC7B,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG;IACX,KAAK,EAAE,0BAAkB,CAAC,KAAK,EAAE;IACjC,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;CACnB,CAAC;AAEW,mBAAW,GAAG,OAAC,CAAC,MAAM,iBACjC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,EACf,KAAK,EAAE,mBAAW,CAAC,QAAQ,EAAE,EAC7B,IAAI,EAAE,iBAAU,CAAC,QAAQ,EAAE,EAC3B,OAAO,EAAE,kCAAwB,EACjC,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE,IAChB,IAAI,EACP,CAAC;AAEU,yBAAiB,GAAG,OAAC,CAAC,MAAM,iBACvC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,EACjB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,IACxB,IAAI,EACP,CAAC;AAEU,yBAAiB,GAAG,OAAC,CAAC,MAAM,iBACvC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,EACjB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,IACxB,IAAI,EACP,CAAC;AAEU,+BAAuB,GAAG,qCAAwB,CAAC,KAAK,CACnE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,mBAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CACxC,CAAC;AAEW,8BAAsB,GAAG,oCAAuB,CAAC,KAAK,CACjE,OAAC;KACE,MAAM,CAAC;IACN,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IAClC,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IACvC,MAAM,EAAE,OAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,MAAM,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;IACjE,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IACtC,SAAS,EAAE,OAAC,CAAC,UAAU,CACrB,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAC/B,OAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CACpB;IACD,OAAO,EAAE,OAAC,CAAC,UAAU,CACnB,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAC/B,OAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CACpB;IACD,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7B,GAAG,EAAE,OAAC,CAAC,UAAU,CACf,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzC,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CACjC;CACF,CAAC;KACD,KAAK,CAAC,iCAAkB,CAAC,CAC7B,CAAC;;;;;;;;;;;ACvEF,yCAAwB;AAEX,+BAAuB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC9C,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7B,IAAI,EAAE,OAAC,CAAC,UAAU,CAChB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CACjC;IACD,OAAO,EAAE,OAAC,CAAC,UAAU,CACnB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CACtB;IACD,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,QAAQ,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC;AAEU,gCAAwB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC/C,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE;CACpB,CAAC,CAAC;;;;;;;;;;;ACpBH,yCAAwB;AACxB,2FAGsB;AACtB,iFAAsC;AACtC,mFAA0C;AAE1C,MAAM,IAAI,GAAG;IACX,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,UAAU,EAAE,uBAAc;IAC1B,SAAS,EAAE,uBAAc;CAC1B,CAAC;AAEW,gCAAwB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC/C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,UAAU,EAAE,uBAAc;IAC1B,SAAS,EAAE,uBAAc;IACzB,MAAM,EAAE,uBAAc;IACtB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;CACpB,CAAC,CAAC;AAEU,qBAAa,GAAG,OAAC,CAAC,MAAM,iBACnC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,KAAK,EAAE,OAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,mBAAW,CAAC,EAChC,MAAM,EAAE,uBAAc,EACtB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE,IAChB,IAAI,EACP,CAAC;AAEU,2BAAmB,GAAG,OAAC;KACjC,MAAM,iBACL,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,IACd,IAAI,EACP;KACD,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,SAAS,EAAE;IAChD,OAAO,EAAE,mBAAmB;IAC5B,IAAI,EAAE,CAAC,YAAY,CAAC;CACrB,CAAC,CAAC;AAEQ,2BAAmB,GAAG,OAAC,CAAC,MAAM,iCACtC,IAAI,KACP,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,IACjB,CAAC;AAEU,iCAAyB,GAAG,qCAAwB,CAAC,KAAK,CACrE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,qBAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAC1C,CAAC;AAEW,gCAAwB,GAAG,oCAAuB,CAAC,KAAK,CACnE,OAAC,CAAC,MAAM,CAAC;IACP,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;CACnC,CAAC,CACH,CAAC;;;;;;;;;;;ACtDF,yCAAwB;AACxB,uFAA4C;AAC5C,2FAGsB;AAEtB,MAAM,IAAI,GAAG;IACX,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,QAAQ,EAAE,yBAAc;CACzB,CAAC;AAEW,wBAAgB,GAAG,OAAC,CAAC,MAAM,iBACtC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,IACX,IAAI,EACP,CAAC;AAEU,oCAA4B,GAAG,qCAAwB,CAAC,KAAK,CACxE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,wBAAgB,CAAC,KAAK,EAAE,EAAE,CAAC,CAC7C,CAAC;AAEW,mCAA2B,GAAG,oCAAuB,CAAC,KAAK,CACtE,OAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CACb,CAAC;;;;;;;;;;;ACzBF,yCAAwB;AACxB,2FAGsB;AACtB,uFAA4C;AAC5C,+EAAoC;AACpC,iFAAsC;AACtC,mFAA0C;AAE1C,MAAM,IAAI,GAAG;IACX,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,KAAK,EAAE,uBAAc;CACtB,CAAC;AAEW,gCAAwB,GAAG,OAAC,CAAC,MAAM,iBAC9C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,QAAQ,EAAE,yBAAc,EACxB,UAAU,EAAE,yBAAc,CAAC,KAAK,EAAE,EAClC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,IACd,IAAI,EACP,CAAC;AAEU,qBAAa,GAAG,OAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CACvC,OAAC,CAAC,MAAM,iBACN,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,KAAK,EAAE,mBAAW,EAClB,QAAQ,EAAE,yBAAc,EACxB,UAAU,EAAE,yBAAc,CAAC,KAAK,EAAE,EAClC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,IACd,IAAI,EACP,CACH,CAAC;AAEW,2BAAmB,GAAG,OAAC,CAAC,MAAM,iCACtC,IAAI,KACP,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,EACjB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,EACpB,KAAK,EAAE,iBAAU,CAAC,QAAQ,EAAE,IAC5B,CAAC;AAEU,2BAAmB,GAAG,OAAC,CAAC,MAAM,iCACtC,IAAI,KACP,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,EACjB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,EACpB,KAAK,EAAE,iBAAU,CAAC,QAAQ,EAAE,IAC5B,CAAC;AAEU,iCAAyB,GAAG,qCAAwB,CAAC,KAAK,CACrE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,qBAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAC1C,CAAC;AAEW,gCAAwB,GAAG,oCAAuB,CAAC,KAAK,CACnE,OAAC,CAAC,MAAM,CAAC;IACP,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC5B,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IAClC,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IAC1C,QAAQ,EAAE,OAAC,CAAC,UAAU,CACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzC,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CACjC;IACD,QAAQ,EAAE,OAAC,CAAC,UAAU,CACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzC,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CACjC;CACF,CAAC,CACH,CAAC;;;;;;;;;;;ACnEF,yCAAwB;AACxB,2FAGsB;AACtB,2FAAgD;AAEhD,MAAM,IAAI,GAAG;IACX,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;CACxB,CAAC;AAEW,kBAAU,GAAG,OAAC,CAAC,MAAM,iBAChC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,WAAW,EAAE,6BAAgB,CAAC,KAAK,EAAE,EACrC,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE,IAChB,IAAI,EACP,CAAC;AAEU,wBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAElC,wBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAElC,mCAA2B,GAAG,OAAC,CAAC,MAAM,CAAC;IAClD,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;CACxB,CAAC,CAAC;AAEU,8BAAsB,GAAG,qCAAwB,CAAC,KAAK,CAClE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,kBAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CACvC,CAAC;AAEW,6BAAqB,GAAG,oCAAuB,CAAC,KAAK,CAChE,OAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CACb,CAAC;;;;;;;;;;;ACjCF,yCAAwB;AAEX,uBAAe,GAAG,OAAC,CAAC,MAAM,CAAC;IACtC,aAAa,EAAE,OAAC,CAAC,MAAM,EAAE;IACzB,aAAa,EAAE,OAAC,CAAC,MAAM,EAAE;IACzB,mBAAmB,EAAE,OAAC,CAAC,MAAM,EAAE;IAC/B,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAClC,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAClC,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACtC,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CACzC,CAAC,CAAC;;;;;;;;;;;ACZH,yCAAwB;AACxB,2FAGsB;AACtB,+EAAoC;AACpC,+FAAoD;AACpD,iFAAsC;AAEtC,MAAM,IAAI,GAAG;IACX,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC/B,CAAC;AAEW,yBAAiB,GAAG,OAAC,CAAC,MAAM,iBACvC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,IAAI,EAAE,iBAAU,EAChB,KAAK,EAAE,mBAAW,EAClB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE,IAChB,IAAI,EACP,CAAC;AAEU,+BAAuB,GAAG,OAAC,CAAC,MAAM,iCAC1C,IAAI,KACP,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EACvB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,IACxB,CAAC;AAEU,+BAAuB,GAAG,OAAC,CAAC,MAAM,iCAC1C,IAAI,KACP,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EACvB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,IACxB,CAAC;AAEU,qCAA6B,GAAG,qCAAwB,CAAC,KAAK,CACzE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,yBAAiB,CAAC,KAAK,EAAE,EAAE,CAAC,CAC9C,CAAC;AAEW,oCAA4B,GAAG,oCAAuB,CAAC,KAAK,CACvE,OAAC;KACE,MAAM,CAAC;IACN,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC5B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC5B,CAAC;KACD,KAAK,CAAC,iCAAkB,CAAC,CAC7B,CAAC;;;;;;;;;;;AC7CF,yCAAwB;AACxB,2FAGsB;AACtB,+EAAoC;AACpC,+EAAoC;AACpC,+FAAoD;AACpD,6EAAkC;AAClC,qFAAoE;AAGpE,MAAM,IAAI,GAAG;IACX,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;CACxB,CAAC;AAEW,+BAAuB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC9C,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE;IAC3B,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE;IACxB,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE;CAC3B,CAAC,CAAC;AAEU,+BAAuB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC9C,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE;IAC3B,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE;IACxB,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE;CAC3B,CAAC,CAAC;AAEU,yBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACxC,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE;IAC3B,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE;IACxB,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE;CAC3B,CAAC,CAAC;AAEU,8BAAsB,GAAG,OAAC,CAAC,MAAM,iBAC5C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,KAAK,EAAE,iBAAU,EACjB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,EAC5B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,EAClB,IAAI,EAAE,eAAS,CAAC,KAAK,EAAE,EACvB,MAAM,EAAE,yBAAiB,CAAC,QAAQ,EAAE,IACjC,IAAI,EACP,CAAC;AAEU,mBAAW,GAAqB,OAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CACvD,OAAC,CAAC,MAAM,iBACN,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,EAC5B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,EAClB,KAAK,EAAE,iBAAU,EACjB,IAAI,EAAE,eAAS,CAAC,KAAK,EAAE,EACvB,QAAQ,EAAE,uBAAa,CAAC,KAAK,EAAE,EAC/B,MAAM,EAAE,yBAAiB,CAAC,QAAQ,EAAE,IACjC,IAAI,EACP,CACH,CAAC;AAEW,yBAAiB,GAAG,OAAC,CAAC,MAAM,iCACpC,IAAI,KACP,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,EACjB,KAAK,EAAE,iBAAU,CAAC,QAAQ,EAAE,EAC5B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,IACxB,CAAC;AAEU,yBAAiB,GAAG,OAAC,CAAC,MAAM,iCACpC,IAAI,KACP,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,EACjB,KAAK,EAAE,iBAAU,CAAC,QAAQ,EAAE,EAC5B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EACxB,MAAM,EAAE,yBAAiB,CAAC,QAAQ,EAAE,IACpC,CAAC;AAEU,+BAAuB,GAAG,qCAAwB,CAAC,KAAK,CACnE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,mBAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CACxC,CAAC;AAEW,8BAAsB,GAAG,oCAAuB,CAAC,KAAK,CACjE,OAAC;KACE,MAAM,CAAC;IACN,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;IACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;IACnC,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;CAC3C,CAAC;KACD,KAAK,CAAC,iCAAkB,CAAC,CAC7B,CAAC;;;;;;;;;;;ACrFF,yCAAwB;AACxB,2FAGsB;AAEtB,MAAM,IAAI,GAAG;IACX,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;IACjB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;CACjB,CAAC;AAEW,iBAAS,GAAG,OAAC,CAAC,MAAM,iBAC/B,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,IACX,IAAI,EACP,CAAC;AAEU,uBAAe,GAAG,OAAC,CAAC,MAAM,mBAClC,IAAI,EACP,CAAC;AAEU,uBAAe,GAAG,OAAC,CAAC,MAAM,mBAClC,IAAI,EACP,CAAC;AAEU,6BAAqB,GAAG,qCAAwB,CAAC,KAAK,CACjE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,iBAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CACtC,CAAC;AAEW,4BAAoB,GAAG,oCAAuB,CAAC,KAAK,CAC/D,OAAC,CAAC,MAAM,CAAC;IACP,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC5B,CAAC,CACH,CAAC;;;;;;;;;;;AChCF,yCAAwB;AACxB,2FAGsB;AACtB,+EAAoC;AACpC,mFAA0C;AAE1C,MAAM,IAAI,GAAG;IACX,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;IAC/B,MAAM,EAAE,uBAAc;CACvB,CAAC;AAEW,yBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACxC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,MAAM,EAAE,iBAAU;IAClB,QAAQ,EAAE,iBAAU;IACpB,MAAM,EAAE,uBAAc;CACvB,CAAC,CAAC;AAEU,+BAAuB,GAAG,OAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAEzC,qCAA6B,GAAG,qCAAwB,CAAC,KAAK,CACzE,OAAC,CAAC,MAAM,CAAC;IACP,IAAI,EAAE,yBAAiB,CAAC,KAAK,CAC3B,OAAC,CAAC,MAAM,CAAC;QACP,QAAQ,EAAE,iBAAU,CAAC,QAAQ,EAAE;QAC/B,MAAM,EAAE,iBAAU,CAAC,QAAQ,EAAE;QAC7B,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;KACpB,CAAC,CACH,CAAC,KAAK,EAAE;CACV,CAAC,CACH,CAAC;AAEW,oCAA4B,GAAG,oCAAuB,CAAC,KAAK,CACvE,OAAC,CAAC,MAAM,CAAC;IACP,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IAClC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;CACvC,CAAC,CACH,CAAC;AAEW,iBAAS,GAAG,OAAC,CAAC,MAAM,CAAC;IAChC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE;CACpB,CAAC,CAAC;;;;;;;;;;;AC3CH,yCAAwB;AAEX,0BAAkB,GAAG,OAAC,CAAC,MAAM,CAAC;IACzC,YAAY,EAAE,OAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;CAC7E,CAAC,CAAC;;;;;;;;;;;ACJH,yCAAwB;AACxB,2FAAwD;AACxD,+EAAoC;AAEpC,MAAM,IAAI,GAAG;IACX,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE;IACrB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;CACrB,CAAC;AAEW,kBAAU,GAAG,OAAC,CAAC,MAAM,iBAChC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,KAAK,EAAE,iBAAU,CAAC,KAAK,EAAE,EACzB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE,EACnB,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,IACnB,IAAI,EACP,CAAC;AAEU,uBAAe,GAAG,OAAC,CAAC,MAAM,iBACrC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,EACd,KAAK,EAAE,iBAAU,CAAC,KAAK,CACrB,OAAC,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAC9C,CAAC,KAAK,EAAE,EACT,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE,EACnB,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,IACnB,IAAI,EACP,CAAC;AAEU,wBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAElC,wBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAElC,4BAAoB,GAAG,OAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAExD,8BAAsB,GAAG,qCAAwB,CAAC,KAAK,CAClE,OAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,kBAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CACvC,CAAC;;;;;;;;;;;;ACnCF,uDAA4D;AAC5D,oEAgBmB;AACnB,uDAA6D;AAC7D,0GAAmD;AACnD,sEAA4C;AAC5C,0EAA8B;AAC9B,mEAAyD;AACzD,2CAA4B;AAC5B,8DAAoC;AACpC,gEAAsC;AA2CtC,IAAa,SAAS,GAAtB,MAAa,SAAS;IACpB,SAAS,CAAC,QAA4B;QACpC,QAAQ;aACL,KAAK,CAAC,iBAAO,CAAC,MAAM,CAAC,2BAAa,GAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAClD,SAAS,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;CACF;AANY,SAAS;IAzCrB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY,CAAC,OAAO,CAAC;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,CAAC,uBAAa,CAAC;aACtB,CAAC;YACF,gCAAiB,CAAC,YAAY,CAAC;gBAC7B,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,UAAU,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC;oBAC5C;wBACE,QAAQ,EAAE,eAAI,EACZ,SAAS,EACT,aAAa,CAAC,GAAG,CAAS,aAAa,CAAC,KAAK,aAAa;4BACxD,CAAC,CAAC,wBAAwB;4BAC1B,CAAC,CAAC,KAAK,EACT,KAAK,CACN;qBACF;iBACF;gBACD,MAAM,EAAE,CAAC,sBAAa,CAAC;aACxB,CAAC;YACF,yBAAc;YACd,iBAAU;YACV,oBAAU;YACV,oBAAU;YACV,oBAAU;YACV,2BAAiB;YACjB,wBAAc;YACd,qBAAW;YACX,uBAAa;YACb,qBAAW;YACX,uBAAa;YACb,oBAAU;YACV,0BAAgB;YAChB,yBAAe;YACf,4BAAkB;YAClB,2BAAiB;YACjB,mBAAS;YACT,mBAAW;SACZ;KACF,CAAC;GACW,SAAS,CAMrB;AANY,8BAAS;;;;;;;;;;;ACpEtB,wGAA4C;AAC5C,kGAAsC;AACtC,0GAA8C;AAC9C,qFAAgE;AAChE,2CAA+B;AAE/B,qBAAe,GAAG,EAAE;;IAClB,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,KAAK,YAAY,CAAC;IAE9D,OAAO;QACL,WAAW,EAAE,aAAO,CAAC,GAAG,CAAC,WAAW,mCAAI,aAAa;QACrD,QAAQ,EAAE,aAAO,CAAC,GAAG,CAAC,QAAQ,mCAAI,MAAM;QACxC,IAAI,EAAE,aAAO,CAAC,GAAG,CAAC,IAAI,mCAAI,WAAW;QACrC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI;QAC9D,QAAQ,EAAE;YACR,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAA2B;YAC7C,IAAI,EAAE,aAAO,CAAC,GAAG,CAAC,aAAa,mCAAI,WAAW;YAC9C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;gBAC7B,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC;gBACzC,CAAC,CAAC,IAAI;YACR,QAAQ,EAAE,aAAO,CAAC,GAAG,CAAC,iBAAiB,mCAAI,UAAU;YACrD,QAAQ,EAAE,aAAO,CAAC,GAAG,CAAC,iBAAiB,mCAAI,UAAU;YACrD,QAAQ,EAAE,aAAO,CAAC,GAAG,CAAC,aAAa,mCAAI,UAAU;YACjD,QAAQ,EAAR,kBAAQ;YACR,UAAU,EAAE,CAAC,kBAAO,EAAC,SAAS,EAAE,kCAAkC,CAAC,CAAC;YACpE,KAAK,EAAL,eAAK;YACL,SAAS,EAAT,mBAAS;YACT,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,KAAK;YAClB,cAAc,EAAE,IAAI,+CAAmB,EAAE;YACzC,iBAAiB;YACjB,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK;SAC1D;QACD,GAAG,EAAE;YACH,MAAM,EAAE,aAAO,CAAC,GAAG,CAAC,UAAU,mCAAI,aAAa;YAC/C,WAAW,EAAE,EAAE,SAAS,EAAE,aAAO,CAAC,GAAG,CAAC,cAAc,mCAAI,KAAK,EAAE;SAChE;QACD,IAAI,EAAE;YACJ,SAAS,EAAE;gBACT,IAAI,EAAE,aAAO,CAAC,GAAG,CAAC,SAAS,mCAAI,gBAAgB;gBAC/C,IAAI,EAAE,aAAO,CAAC,GAAG,CAAC,SAAS,mCAAI,GAAG;gBAClC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,KAAK,MAAM;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,aAAO,CAAC,GAAG,CAAC,aAAa,mCAAI,EAAE;oBACrC,IAAI,EAAE,aAAO,CAAC,GAAG,CAAC,aAAa,mCAAI,EAAE;iBACtC;aACF;YACD,IAAI,EAAE,aAAO,CAAC,GAAG,CAAC,SAAS,mCAAI,iBAAiB;SACjD;QACD,MAAM,EAAE;YACN,IAAI,EAAE,kBAAO,EACX,SAAS,EACT,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,wBAAwB,CAAC,GAAG,iBAAiB,CACrE;SACF;QACD,UAAU,EAAE;YACV,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB;YAC7C,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;YACvC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB;YAC7C,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;SACtC;KACF,CAAC;AACJ,CAAC,CAAC;;;;;;;;;;;AC9DW,aAAK,GAAG;IACnB;QACE,KAAK,EAAE,YAAY;QACnB,WAAW,EAAE,yBAAyB;KACvC;IACD;QACE,KAAK,EAAE,MAAM;QACb,WAAW,EAAE,oBAAoB;KAClC;IACD;QACE,KAAK,EAAE,aAAa;QACpB,WAAW,EAAE,wBAAwB;KACtC;CACF,CAAC;AAEF,MAAM,eAAe,GAAG;IACtB,KAAK,EAAE,MAAM;IACb,WAAW,EAAE,0BAA0B;IACvC,WAAW,EAAE;QACX;YACE,IAAI,EAAE,sBAAsB;YAC5B,KAAK,EAAE,iBAAiB;YACxB,WAAW,EAAE,0BAA0B;YACvC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;SAC9B;KACF;CACF,CAAC;AAEF,MAAM,eAAe,GAAG;IACtB,KAAK,EAAE,MAAM;IACb,WAAW,EAAE,0BAA0B;IACvC,WAAW,EAAE;QACX;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,UAAU;YACjB,WAAW,EAAE,mBAAmB;YAChC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,eAAe;YACtB,WAAW,EAAE,wBAAwB;YACrC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;SAC9B;QACD;YACE,IAAI,EAAE,0BAA0B;YAChC,KAAK,EAAE,0BAA0B;YACjC,WAAW,EAAE,0BAA0B;YACvC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;KACF;CACF,CAAC;AAEF,MAAM,sBAAsB,GAAG;IAC7B,KAAK,EAAE,aAAa;IACpB,WAAW,EAAE,iCAAiC;IAC9C,WAAW,EAAE;QACX;YACE,IAAI,EAAE,qBAAqB;YAC3B,KAAK,EAAE,SAAS;YAChB,WAAW,EAAE,wBAAwB;YACrC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;SAC9B;QACD;YACE,IAAI,EAAE,sBAAsB;YAC5B,KAAK,EAAE,UAAU;YACjB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,sBAAsB;YAC5B,KAAK,EAAE,UAAU;YACjB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;SAC9B;QACD;YACE,IAAI,EAAE,8BAA8B;YACpC,KAAK,EAAE,sBAAsB;YAC7B,WAAW,EAAE,+BAA+B;YAC5C,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;SAC9B;QACD;YACE,IAAI,EAAE,2CAA2C;YACjD,KAAK,EAAE,mCAAmC;YAC1C,WAAW,EAAE,4CAA4C;YACzD,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;KACF;CACF,CAAC;AAEF,MAAM,mBAAmB,GAAG;IAC1B,KAAK,EAAE,UAAU;IACjB,WAAW,EAAE,8BAA8B;IAC3C,WAAW,EAAE;QACX;YACE,IAAI,EAAE,iBAAiB;YACvB,KAAK,EAAE,iBAAiB;YACxB,WAAW,EAAE,0BAA0B;YACvC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,kBAAkB;YACxB,KAAK,EAAE,oBAAoB;YAC3B,WAAW,EAAE,6BAA6B;YAC1C,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,+BAA+B;YACrC,KAAK,EAAE,oBAAoB;YAC3B,WAAW,EAAE,0CAA0C;YACvD,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,iBAAiB;YACvB,KAAK,EAAE,iBAAiB;YACxB,WAAW,EAAE,0BAA0B;YACvC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,iBAAiB;YACvB,KAAK,EAAE,iBAAiB;YACxB,WAAW,EAAE,0BAA0B;YACvC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;KACF;CACF,CAAC;AAEF,MAAM,cAAc,GAAG;IACrB,KAAK,EAAE,KAAK;IACZ,WAAW,EAAE,yBAAyB;IACtC,WAAW,EAAE;QACX;YACE,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,YAAY;YACnB,WAAW,EAAE,qBAAqB;YAClC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,SAAS;YAChB,WAAW,EAAE,kBAAkB;YAC/B,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,YAAY;YACnB,WAAW,EAAE,qBAAqB;YAClC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,YAAY;YACnB,WAAW,EAAE,qBAAqB;YAClC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;KACF;CACF,CAAC;AAEF,MAAM,gBAAgB,GAAG;IACvB,KAAK,EAAE,OAAO;IACd,WAAW,EAAE,2BAA2B;IACxC,WAAW,EAAE;QACX;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,WAAW;YAClB,WAAW,EAAE,oBAAoB;YACjC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,eAAe;YACrB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,4BAA4B;YAClC,KAAK,EAAE,6BAA6B;YACpC,WAAW,EAAE,sCAAsC;YACnD,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,2BAA2B;YACjC,KAAK,EAAE,2BAA2B;YAClC,WAAW,EAAE,oCAAoC;YACjD,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,2BAA2B;YACjC,KAAK,EAAE,2BAA2B;YAClC,WAAW,EAAE,oCAAoC;YACjD,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;KACF;CACF,CAAC;AAEF,MAAM,kBAAkB,GAAG;IACzB,KAAK,EAAE,SAAS;IAChB,WAAW,EAAE,6BAA6B;IAC1C,WAAW,EAAE;QACX;YACE,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,iBAAiB;YACvB,KAAK,EAAE,kBAAkB;YACzB,WAAW,EAAE,2BAA2B;YACxC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;QACD;YACE,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACrC;KACF;CACF,CAAC;AAEF,MAAM,gBAAgB,GAAG;IACvB,KAAK,EAAE,OAAO;IACd,WAAW,EAAE,2BAA2B;IACxC,WAAW,EAAE;QACX;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC;SAC9B;QACD;YACE,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,WAAW;YAClB,WAAW,EAAE,oBAAoB;YACjC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,eAAe;YACrB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,4BAA4B;YAClC,KAAK,EAAE,6BAA6B;YACpC,WAAW,EAAE,sCAAsC;YACnD,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,2BAA2B;YACjC,KAAK,EAAE,2BAA2B;YAClC,WAAW,EAAE,oCAAoC;YACjD,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,2BAA2B;YACjC,KAAK,EAAE,2BAA2B;YAClC,WAAW,EAAE,oCAAoC;YACjD,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;KACF;CACF,CAAC;AAEF,MAAM,kBAAkB,GAAG;IACzB,KAAK,EAAE,SAAS;IAChB,WAAW,EAAE,6BAA6B;IAC1C,WAAW,EAAE;QACX;YACE,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,iBAAiB;YACvB,KAAK,EAAE,kBAAkB;YACzB,WAAW,EAAE,2BAA2B;YACxC,KAAK,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,CAAC;SAC7C;QACD;YACE,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,gBAAgB;YACvB,WAAW,EAAE,yBAAyB;YACtC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;KACF;CACF,CAAC;AAEF,MAAM,eAAe,GAAG;IACtB,KAAK,EAAE,MAAM;IACb,WAAW,EAAE,0BAA0B;IACvC,WAAW,EAAE;QACX;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,UAAU;YACjB,WAAW,EAAE,mBAAmB;YAChC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,eAAe;YACtB,WAAW,EAAE,6BAA6B;YAC1C,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;QACD;YACE,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,sBAAsB;YACnC,KAAK,EAAE,CAAC,YAAY,CAAC;SACtB;KACF;CACF,CAAC;AAEW,mBAAW,GAAG;IACzB,eAAe;IACf,eAAe;IACf,sBAAsB;IACtB,mBAAmB;IACnB,cAAc;IACd,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;CAChB,CAAC;;;;;;;;;;;;;AC9ZF,+DAK4B;AAE5B,qDAAmC;AAKnC,IAAsB,WAAW,GAAjC,MAAsB,WAAW;IAMlB,gBAAgB,CAAC,MAAsB;;YAClD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QACtE,CAAC;KAAA;IAEY,gBAAgB,CAAC,MAAsB;;YAClD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QACtE,CAAC;KAAA;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAG1B,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,MAAc;;QACtB,OAAO,WAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAClC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,CACzD,0CAAG,CAAC,CAAC,CAAC;IACT,CAAC;IAED,UAAU,CAAC,MAAc,EAAE,KAAY,EAAE,GAAG;QAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;gBAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,OAAiB,EAAE,KAAY,EAAE,GAAG;QAC9C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBACnD,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAtCW;IADT,gCAAe,GAAE;0DACA,kBAAM,oBAAN,kBAAM;2CAAC;AAJL,WAAW;IAHhC,iCAAgB,EAAC;QAChB,IAAI,EAAE,GAAG;KACV,CAAC;GACoB,WAAW,CA0ChC;AA1CqB,kCAAW;;;;;;;;;;;;;ACZjC,uDAA+D;AAC/D,sEAA8E;AAC9E,iDAYiB;AAEjB,IACa,cAAc,GAD3B,MACa,cAKX,SAAQ,oBAAkB;IAC1B,YACY,MAA4B,EAC9B,UAAsB;QAE9B,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,mBAAmB,EAAE,CAAC,CAAC;QAHtC,WAAM,GAAN,MAAM,CAAsB;QAC9B,eAAU,GAAV,UAAU,CAAY;IAGhC,CAAC;IAES,YAAY;QACpB,OAAO,EAAE,CAAC;IACZ,CAAC;IAES,YAAY;QAIpB,OAAO,SAAS,CAAC;IACnB,CAAC;IAES,SAAS;QACjB,OAAO,EAAE,CAAC;IACZ,CAAC;IAES,WAAW,CACnB,UAAoC;QAEpC,OAAO,UAAU,CAAC;IACpB,CAAC;IAEe,YAAY,CAAC,IAAY;;YACvC,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAEO,QAAQ,CAAC,KAA0B;QACzC,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,iCAC1B,IAAI,KACP,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC;gBAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAE,EAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACjE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IACd,CAAC;QAEH,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAEK,SAAS,CAAC,OAAW;;YACzB,MAAM,EACJ,MAAM,EACN,IAAI,GAAG,CAAC,EACR,OAAO,GAAG,EAAE,EACZ,OAAO,EACP,QAAQ,GAAG,KAAK,KAEd,OAAO,EADN,YAAY,kBACb,OAAO,EAPL,oDAOL,CAAU,CAAC;YACZ,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAChD,MAAM,mBAAmB,mCACpB,YAAY,KACf,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,EAC3B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GACrC,CAAC;YAEF,IAAI,MAAM,EAAE;gBACV,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,iCACxD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAChC,CAAC,GAAG,CAAC,EAAE,iBAAG,EAAC,CAAC,KAAK,EAAE,EAAE,CAAC,SAAS,KAAK,sBAAsB,EAAE;wBAC1D,KAAK,EAAE,IAAI,MAAM,GAAG;qBACrB,CAAC,IACF,CAA+B,CAAC;aACnC;YAED,IAAI,OAAO,GAAG,CAAC,CAAC,EAAE;gBAChB,mBAAmB,CAAC,IAAI,GAAG,OAAO,CAAC;gBACnC,mBAAmB,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;aACjD;YAED,MAAM,qBAAqB,GAAG,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;gBACzD,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC5B,MAAM,MAAM,GAAG,EAAE,CAAC;gBAElB,IAAI,UAAU,GAAG,MAAM,CAAC;gBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpB,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;oBACnD,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;iBAC9B;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC;YAEF,IAAI,OAAO,EAAE;gBACX,mBAAmB,CAAC,KAAK,GAAG,qBAAqB,CAC/C,OAAO,EACP,QAAQ,CAC8B,CAAC;aAC1C;YAED,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;YAEnE,OAAO;gBACL,IAAI,EAAE,MAAM,OAAO,CAAC,GAAG,CACrB,IAAI,CAAC,GAAG,CAAC,CAAO,IAAI,EAAE,EAAE,wDAAC,aAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAC,CACxD;gBACD,KAAK;gBACL,IAAI;gBACJ,OAAO;aACR,CAAC;QACJ,CAAC;KAAA;IAEK,GAAG,CACP,KAA4D;;YAE5D,OAAO,IAAI,CAAC,YAAY,CACtB,MAAM,IAAI,CAAC,OAAO,CAAC;gBACjB,KAAK;aACN,CAAC,CACH,CAAC;QACJ,CAAC;KAAA;IAEK,gBAAgB,CACpB,KAA4D;;YAE5D,OAAO,IAAI,CAAC,YAAY,CACtB,MAAM,IAAI,CAAC,OAAO,CAAC;gBACjB,KAAK;gBACL,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;aAC5B,CAAC,CACH,CAAC;QACJ,CAAC;KAAA;IAEK,OAAO,CAAC,EAAU;;YACtB,OAAO,IAAI,CAAC,YAAY,CACtB,MAAM,IAAI,CAAC,OAAO,CAAC;gBACjB,KAAK,EAAE,EAAE,EAAE,EAAE,EAAS,EAAE;aACzB,CAAC,CACH,CAAC;QACJ,CAAC;KAAA;IAEK,oBAAoB,CAAC,EAAU;;YACnC,OAAO,IAAI,CAAC,YAAY,CACtB,MAAM,IAAI,CAAC,OAAO,CAAC;gBACjB,KAAK,EAAE,EAAE,EAAE,EAAE,EAAS,EAAE;gBACxB,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;aAC5B,CAAC,CACH,CAAC;QACJ,CAAC;KAAA;IAEK,YAAY,CAAC,GAAa;;YAC9B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC;gBAC5B,KAAK,EAAE,EAAE,EAAE,EAAE,gBAAE,EAAC,GAAG,CAAQ,EAAE;aAC9B,CAAC,CAAC;YACH,OAAO,MAAM,OAAO,CAAC,GAAG,CACtB,KAAK,CAAC,GAAG,CAAC,CAAO,IAAI,EAAE,EAAE,wDAAC,aAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAC,CACzD,CAAC;QACJ,CAAC;KAAA;IAEK,yBAAyB,CAAC,GAAa;;YAC3C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC;gBAC5B,KAAK,EAAE,EAAE,EAAE,EAAE,gBAAE,EAAC,GAAG,CAAQ,EAAE;gBAC7B,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;aAC5B,CAAC,CAAC;YACH,OAAO,MAAM,OAAO,CAAC,GAAG,CACtB,KAAK,CAAC,GAAG,CAAC,CAAO,IAAI,EAAE,EAAE,wDAAC,aAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAC,CACzD,CAAC;QACJ,CAAC;KAAA;IAEa,gBAAgB,CAAC,KAA0B,EAAE,GAAW;;;YACpE,MAAM,QAAQ,GAAG,CAAO,GAAW,EAAE,KAAU,EAAE,EAAE;gBACjD,OAAO,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,KAAK,UAAU;oBACnD,CAAC,CACG,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,CAGhC,CAAC,KAAK,CAAC;oBACV,CAAC,CAAE,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAA6B,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC3E,CAAC,EAAC;YACF,OAAO,WAAI,CAAC,YAAY,EAAE,0CAAG,GAAG,CAAC;gBAC/B,CAAC,CAAC,MAAM,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;KAChB;IAEY,mBAAmB,CAAC,KAAQ;;YACvC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;YACpE,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzB,OAAO,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/C,CAAC;KAAA;IAEY,mBAAmB,CAAC,EAAgC,EAAE,KAAQ;;YACzE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACxD,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5C,CAAC;KAAA;IAEa,oBAAoB,CAAC,KAAQ;;YACzC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACpC,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aACtD;YAED,OAAO,KAA4B,CAAC;QACtC,CAAC;KAAA;IAEa,oBAAoB,CAChC,EAAgC,EAChC,KAAQ;;YAER,MAAM,IAAI,GACR,OAAO,EAAE,KAAK,QAAQ;gBACpB,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAS,EAAE,CAAC;gBACzC,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,IAAI,EAAE;gBACT,MAAM,IAAI,0BAAiB,EAAE,CAAC;aAC/B;YAED,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,GAAwB,CAAC,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aAC1E;YAED,OAAO,wBAAW,EAAC,IAAI,CAAW,CAAC;QACrC,CAAC;KAAA;CACF;AA9NY,cAAc;IAD1B,uBAAU,GAAE;iEAQS,sBAAY,oBAAZ,sBAAY,oDACV,oBAAU,oBAAV,oBAAU;GARrB,cAAc,CA8N1B;AA9NY,wCAAc;;;;;;;;;;;;;ACjB3B,uDAA4C;AAE5C,mFAAmD;AAGnD,IACa,WAAW,GADxB,MACa,WAAW;IAMtB,YAA+B,UAAkC;QAAlC,eAAU,GAAV,UAAU,CAAwB;IAAG,CAAC;IAErE,GAAG,CACD,KAA4D;QAE5D,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,YAAY,CAAC,GAAa;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;IACxD,CAAC;IAEK,MAAM,CAAC,KAAQ;;YACnB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACpB,OAAO,GAAG,CAAC;QACb,CAAC;KAAA;IAED,MAAM,CAAC,KAAQ;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAEK,MAAM,CAAC,EAAgC,EAAE,KAAQ;;YACrD,MAAM,IAAI,GACR,OAAO,EAAE,KAAK,QAAQ;gBACpB,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,CAAC,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACxC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAC1B,OAAO,GAAG,CAAC;QACb,CAAC;KAAA;IAEK,MAAM,CAAC,EAAU,EAAE,IAAc;;YACrC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACnC,IAAI,IAAI,EAAE;gBACR,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAS,EAAE,CAAC,CAAC;aACrD;iBAAM;gBACL,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAS,EAAE,CAAC,CAAC;aACjD;YACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACpB,OAAO;QACT,CAAC;KAAA;IAES,SAAS,CAAC,KAAa;QAC/B,OAAO;IACT,CAAC;IAES,SAAS,CAAC,KAAa,EAAE,SAAiB;QAClD,OAAO;IACT,CAAC;IAES,SAAS,CAAC,KAAa;QAC/B,OAAO;IACT,CAAC;CACF;AAhEY,WAAW;IADvB,uBAAU,GAAE;iEAOgC,gCAAc,oBAAd,gCAAc;GAN9C,WAAW,CAgEvB;AAhEY,kCAAW;;;;;;;;;;;ACNxB,qFAA+B;AAC/B,wFAAkC;AAClC,qFAA+B;;;;;;;;;;;;ACF/B,uDAAgD;AAChD,yDAAgD;AAChD,gHAA0C;AAC1C,uDAA6D;AAgB7D,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAd1B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,YAAY,CAAC;gBACzB,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,UAAU,EAAE,CAAC,aAA4B,EAAE,EAAE,CAC3C,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC;gBAC/B,MAAM,EAAE,CAAC,sBAAa,CAAC;aACxB,CAAC;SACH;QACD,WAAW,EAAE,EAAE;QACf,SAAS,EAAE,CAAC,GAAG,sBAAY,CAAC;QAC5B,OAAO,EAAE,CAAC,GAAG,sBAAY,CAAC;KAC3B,CAAC;GACW,cAAc,CAAG;AAAjB,wCAAc;;;;;;;;;;;;;;ACnB3B,iDASiB;AACjB,0FAA6C;AAI7C,IAAa,cAAc,sBAA3B,MAAa,cAAc;CA4B1B;AA1BC;IADC,oCAAsB,EAAC,MAAM,CAAC;;0CACpB;AAGX;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,gBAAc,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;sCACxD,cAAc;8CAAC;AAGxB;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,gBAAc,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC;;gDACnC;AAG5B;IADC,oBAAM,GAAE;;6CACK;AAGd;IADC,oBAAM,GAAE;;mDACW;AAGpB;IADC,oBAAM,GAAE;;4CACI;AAOb;IALC,uBAAS,EAAC,GAAG,EAAE,CAAC,0BAAW,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC7E,wBAAU,EAAC;QACV,IAAI,EAAE,UAAU;QAChB,wBAAwB,EAAE,IAAI;KAC/B,CAAC;;6CACoB;AAGtB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;iDAAC;AA3BL,cAAc;IAF1B,oBAAM,EAAC,YAAY,CAAC;IACpB,mBAAK,EAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;GACxC,cAAc,CA4B1B;AA5BY,wCAAc;;;;;;;;;;;;;ACd3B,iDAQiB;AACjB,wFAA2C;AAG3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAwB5B;AAtBC;IADC,oCAAsB,EAAC,MAAM,CAAC;;4CACpB;AAMX;IAJC,sBAAQ,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE;QAC1B,QAAQ,EAAE,SAAS;KACpB,CAAC;IACD,wBAAU,GAAE;0DACP,wBAAU,oBAAV,wBAAU;8CAAC;AAGjB;IADC,oBAAM,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;+CACX;AAGd;IADC,oBAAM,EAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;;kDACN;AAGjB;IADC,oBAAM,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;;kDACT;AAGlB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;mDAAC;AAGhB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;mDAAC;AAvBL,gBAAgB;IAD5B,oBAAM,EAAC,aAAa,CAAC;GACT,gBAAgB,CAwB5B;AAxBY,4CAAgB;;;;;;;;;;;ACZ7B,iGAA8B;AAC9B,uGAAoC;AACpC,wGAAqC;AACrC,qGAAkC;AAClC,uGAAoC;AACpC,iGAA8B;AAC9B,kGAA+B;AAC/B,oGAAiC;AACjC,kGAA+B;AAC/B,oGAAiC;AACjC,yGAAsC;AACtC,yGAAsC;AACtC,gGAA6B;AAE7B,gGAAmD;AACnD,oGAAuD;AACvD,wGAA2D;AAC3D,0FAA6C;AAC7C,8FAAiD;AACjD,oGAAuD;AACvD,8FAAiD;AACjD,wFAA2C;AAC3C,wGAA0D;AAC1D,0FAA6C;AAC7C,sFAAyC;AACzC,sGAAyD;AACzD,wFAA2C;AAE3C,qBAAe;IACb,wBAAU;IACV,oCAAgB;IAChB,sCAAiB;IACjB,gCAAc;IACd,oCAAgB;IAChB,wBAAU;IACV,0BAAW;IACX,8BAAa;IACb,0BAAW;IACX,8BAAa;IACb,wCAAkB;IAClB,uCAAiB;IACjB,sBAAS;CACV,CAAC;;;;;;;;;;;;;AC1CF,iDAOiB;AACjB,wFAA2C;AAC3C,sEAAqE;AAErE,IAAY,gBAWX;AAXD,WAAY,gBAAgB;IAC1B,6DAAyC;IACzC,6DAAyC;IACzC,6DAAyC;IACzC,kDAA8B;IAC9B,kDAA8B;IAC9B,kDAA8B;IAC9B,sDAAkC;IAClC,sDAAkC;IAClC,8CAA0B;IAC1B,sDAAkC;AACpC,CAAC,EAXW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAW3B;AAGD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CA0B9B;AAxBC;IADC,oCAAsB,EAAC,MAAM,CAAC;;8CACpB;AAGX;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,wBAAU,CAAC;0DACtB,wBAAU,oBAAV,wBAAU;gDAAC;AAGjB;IADC,oBAAM,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;;kDACX;AAMhB;IAJC,oBAAM,EAAC;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,gBAAgB;KACvB,CAAC;;gDACqB;AAKvB;IAHC,oBAAM,EAAC;QACN,IAAI,EAAE,OAAO;KACd,CAAC;0DACQ,8BAAqB,oBAArB,8BAAqB;oDAAC;AAGhC;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;qDAAC;AAGhB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;qDAAC;AAzBL,kBAAkB;IAD9B,oBAAM,EAAC,eAAe,CAAC;GACX,kBAAkB,CA0B9B;AA1BY,gDAAkB;;;;;;;;;;;;;ACzB/B,iDAUiB;AACjB,0FAA6C;AAC7C,wFAA2C;AAC3C,8FAAiD;AAGjD,IAAK,WAMJ;AAND,WAAK,WAAW;IACd,kCAAmB;IACnB,sCAAuB;IACvB,sCAAuB;IACvB,8BAAe;IACf,sCAAuB;AACzB,CAAC,EANI,WAAW,KAAX,WAAW,QAMf;AAGD,IAAa,WAAW,GAAxB,MAAa,WAAW;CA+CvB;AA7CC;IADC,oCAAsB,EAAC,MAAM,CAAC;;uCACpB;AAIX;IAFC,uBAAS,EAAC,WAAW,CAAC;IACtB,oBAAM,GAAE;;wCACG;AAGZ;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,0BAAW,CAAC;0DACtB,0BAAW,oBAAX,0BAAW;0CAAC;AAGnB;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;0DACrD,wBAAU,oBAAV,wBAAU;yCAAC;AAiBjB;IAfC,oBAAM,EAAC;QACN,IAAI,EAAE,OAAO;QACb,WAAW,EAAE;YACX,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CACR,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iCACX,IAAI,KACP,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,GAAG,IACvB,CAAC;YACL,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CACV,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iCACX,IAAI,KACP,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,GAAG,IACvB,CAAC;SACN;KACF,CAAC;;0CACoB;AAOtB;IALC,oBAAM,EAAC;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,WAAW,CAAC,OAAO;KAC7B,CAAC;;2CACkB;AAIpB;IAFC,sBAAQ,EAAC,GAAG,EAAE,CAAC,8BAAa,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC7E,wBAAU,GAAE;0DACJ,8BAAa,oBAAb,8BAAa;4CAAC;AAGvB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;8CAAC;AAGhB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;8CAAC;AA9CL,WAAW;IADvB,oBAAM,EAAC,QAAQ,CAAC;GACJ,WAAW,CA+CvB;AA/CY,kCAAW;;;;;;;;;;;;;ACzBxB,iDAQiB;AACjB,0FAA6C;AAE7C,IAAK,WAGJ;AAHD,WAAK,WAAW;IACd,4BAAa;IACb,gCAAiB;AACnB,CAAC,EAHI,WAAW,KAAX,WAAW,QAGf;AAGD,IAAa,aAAa,GAA1B,MAAa,aAAa;IA2CxB,UAAU;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;IACjD,CAAC;CAIF;AA/CC;IADC,oCAAsB,EAAC,MAAM,CAAC;;yCACpB;AAGX;IADC,sBAAQ,EAAC,GAAG,EAAE,CAAC,0BAAW,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;0DAC/C,0BAAW,oBAAX,0BAAW;4CAAC;AAOnB;IALC,oBAAM,EAAC;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,WAAW,CAAC,IAAI;KAC1B,CAAC;;2CACgB;AASlB;IAPC,oBAAM,EAAC;QACN,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE;YACX,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;YAClB,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;SACrB;KACF,CAAC;;iDACiB;AASnB;IAPC,oBAAM,EAAC;QACN,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE;YACX,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;YAClB,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;SACrB;KACF,CAAC;;gDACgB;AASlB;IAPC,oBAAM,EAAC;QACN,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE;YACX,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;YAClB,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;SACrB;KACF,CAAC;;6CACa;AAIf;IAFC,0BAAY,GAAE;IACd,0BAAY,GAAE;;;;+CAGd;AAGD;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;gDAAC;AAhDL,aAAa;IADzB,oBAAM,EAAC,UAAU,CAAC;GACN,aAAa,CAiDzB;AAjDY,sCAAa;;;;;;;;;;;;;ACjB1B,iDAMiB;AACjB,gGAAmD;AAGnD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAkB5B;AAhBC;IADC,oCAAsB,EAAC,MAAM,CAAC;;4CACpB;AAGX;IADC,oBAAM,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;8CACZ;AAGb;IADC,oBAAM,GAAE;;+CACK;AAGd;IADC,oBAAM,GAAE;;qDACW;AAGpB;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,gCAAc,CAAC;0DACtB,gCAAc,oBAAd,gCAAc;kDAAC;AAGzB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;mDAAC;AAjBL,gBAAgB;IAD5B,oBAAM,EAAC,aAAa,CAAC;GACT,gBAAgB,CAkB5B;AAlBY,4CAAgB;;;;;;;;;;;;;ACV7B,iDAOiB;AACjB,gGAAmD;AACnD,0FAA6C;AAI7C,IAAa,aAAa,GAA1B,MAAa,aAAa;CA8BzB;AA5BC;IADC,oCAAsB,EAAC,MAAM,CAAC;;yCACpB;AAGX;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,gCAAc,CAAC;0DACtB,gCAAc,oBAAd,gCAAc;+CAAC;AAGzB;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,0BAAW,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC;0DACjD,0BAAW,oBAAX,0BAAW;4CAAC;AAGnB;IADC,oBAAM,GAAE;;4CACK;AAGd;IADC,oBAAM,GAAE;;kDACW;AASpB;IAPC,oBAAM,EAAC;QACN,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE;YACX,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;YAClB,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;SACrB;KACF,CAAC;;4CACY;AAGd;IADC,oBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;4CACb;AAGd;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;gDAAC;AA7BL,aAAa;IAFzB,oBAAM,EAAC,UAAU,CAAC;IAClB,mBAAK,EAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;GAC/B,aAAa,CA8BzB;AA9BY,sCAAa;;;;;;;;;;;;;ACb1B,iDAOiB;AACjB,oGAAuD;AACvD,wFAA2C;AAG3C,IAAa,UAAU,GAAvB,MAAa,UAAU;CAmBtB;AAjBC;IADC,oCAAsB,EAAC,MAAM,CAAC;;sCACpB;AAGX;IADC,oBAAM,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;yCACX;AAGd;IADC,oBAAM,GAAE;;+CACW;AAIpB;IAFC,wBAAU,EAAC,GAAG,EAAE,CAAC,oCAAgB,CAAC;IAClC,uBAAS,EAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;;+CACR;AAGhC;IADC,wBAAU,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;;yCACzB;AAG1B;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;6CAAC;AAlBL,UAAU;IADtB,oBAAM,EAAC,OAAO,CAAC;GACH,UAAU,CAmBtB;AAnBY,gCAAU;;;;;;;;;;;;;ACZvB,iDAQiB;AACjB,0FAA6C;AAC7C,wFAA2C;AAG3C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CA+B7B;AA7BC;IADC,2BAAa,GAAE;;kDACA;AAIhB;IAFC,uBAAS,EAAC,GAAG,EAAE,CAAC,0BAAW,CAAC;IAC5B,wBAAU,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;0DAC1B,0BAAW,oBAAX,0BAAW;gDAAC;AAGnB;IADC,2BAAa,GAAE;;iDACD;AAIf;IAFC,uBAAS,EAAC,GAAG,EAAE,CAAC,wBAAU,CAAC;IAC3B,wBAAU,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;0DAC1B,wBAAU,oBAAV,wBAAU;+CAAC;AAKjB;IAHC,oBAAM,EAAC;QACN,IAAI,EAAE,KAAK;KACZ,CAAC;;iDACa;AAMf;IAJC,oBAAM,EAAC;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf,CAAC;;kDACc;AAGhB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;oDAAC;AAGhB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;oDAAC;AA9BL,iBAAiB;IAD7B,oBAAM,EAAC,eAAe,CAAC;GACX,iBAAiB,CA+B7B;AA/BY,8CAAiB;;;;;;;;;;;;;ACb9B,iDAWiB;AACjB,wFAA2C;AAC3C,8FAAiD;AACjD,sFAAyC;AACzC,gGAAmD;AACnD,sEAA2D;AAI3D,IAAa,WAAW,GAAxB,MAAa,WAAW;CAsCvB;AApCC;IADC,oCAAsB,EAAC,MAAM,CAAC;;uCACpB;AAGX;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;0DAC3C,wBAAU,oBAAV,wBAAU;0CAAC;AAGnB;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,8BAAa,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;;6CACjC;AAG1B;IADC,oBAAM,GAAE;;0CACK;AAGd;IADC,oBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;0CACb;AAGd;IADC,oBAAM,GAAE;;gDACW;AAIpB;IAFC,wBAAU,EAAC,GAAG,EAAE,CAAC,sBAAS,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC;IAChD,uBAAS,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;;yCAChB;AAIlB;IAFC,uBAAS,EAAC,GAAG,EAAE,CAAC,gCAAc,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC7D,uBAAS,EAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;;+CACX;AAG7B;IADC,oBAAM,EAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;0DACjC,oBAAW,oBAAX,oBAAW;2CAAC;AAGrB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;8CAAC;AAGhB;IADC,oBAAM,EAAC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2CAC1D;AAGf;IADC,8BAAgB,GAAE;0DACP,IAAI,oBAAJ,IAAI;8CAAC;AArCN,WAAW;IAFvB,oBAAM,EAAC,QAAQ,CAAC;IAChB,mBAAK,EAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;GAC/B,WAAW,CAsCvB;AAtCY,kCAAW;;;;;;;;;;;;;ACpBxB,iDAOiB;AACjB,0FAA6C;AAI7C,IAAa,SAAS,GAAtB,MAAa,SAAS;CAerB;AAbC;IADC,oCAAsB,EAAC,MAAM,CAAC;;qCACpB;AAGX;IADC,oBAAM,GAAE;;wCACK;AAGd;IADC,oBAAM,GAAE;;uCACI;AAGb;IADC,wBAAU,EAAC,GAAG,EAAE,CAAC,0BAAW,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;;yCAC/B;AAGtB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;4CAAC;AAdL,SAAS;IAFrB,oBAAM,EAAC,MAAM,CAAC;IACd,mBAAK,EAAC,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;GAC9B,SAAS,CAerB;AAfY,8BAAS;;;;;;;;;;;;;ACZtB,iDAOiB;AACjB,wFAA2C;AAG3C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAuB7B;AArBC;IADC,oCAAsB,EAAC,MAAM,CAAC;;6CACpB;AAIX;IAFC,uBAAS,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC;IACxD,wBAAU,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;0DACtB,wBAAU,oBAAV,wBAAU;iDAAC;AAIpB;IAFC,uBAAS,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC;IACxD,wBAAU,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;0DACtB,wBAAU,oBAAV,wBAAU;mDAAC;AAStB;IAPC,oBAAM,EAAC;QACN,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE;YACX,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;YAClB,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;SACrB;KACF,CAAC;;iDACa;AAGf;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;oDAAC;AAtBL,iBAAiB;IAD7B,oBAAM,EAAC,cAAc,CAAC;GACV,iBAAiB,CAuB7B;AAvBY,8CAAiB;;;;;;;;;;;;;ACX9B,iDAYiB;AACjB,oGAAuD;AACvD,wFAA2C;AAC3C,sGAAyD;AACzD,0FAA6C;AAG7C,IAAa,UAAU,GAAvB,MAAa,UAAU;IAuCf,oBAAoB;;YACxB,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;YAClD,MAAM,UAAU,GAAG,eAAe,CAAC;YACnC,IAAI,UAAU,GAAG,EAAE,CAAC;YAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,UAAU,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACxC;YAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC;KAAA;CACF;AAjDC;IADC,oCAAsB,EAAC,MAAM,CAAC;;sCACpB;AAGX;IADC,oBAAM,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;8CACN;AAGnB;IADC,sBAAQ,EAAC,GAAG,EAAE,CAAC,oCAAgB,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC;0DACtD,oCAAgB,oBAAhB,oCAAgB;8CAAC;AAM7B;IAJC,uBAAS,EACR,GAAG,EAAE,CAAC,sCAAiB,EACvB,CAAC,WAAW,EAAE,EAAE,WAAC,wBAAW,CAAC,MAAM,mCAAI,WAAW,CAAC,QAAQ,IAC5D;;gDACiC;AAGlC;IADC,oBAAM,GAAE;;6CACS;AAGlB;IADC,oBAAM,GAAE;;4CACQ;AAIjB;IAFC,wBAAU,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;IAClD,uBAAS,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;;yCACd;AAGpB;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,0BAAW,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;;0CAC/B;AAGtB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;6CAAC;AAGhB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;6CAAC;AAGhB;IADC,8BAAgB,GAAE;0DACR,IAAI,oBAAJ,IAAI;6CAAC;AAGV;IADL,0BAAY,GAAE;;;;sDAYd;AAlDU,UAAU;IADtB,oBAAM,EAAC,OAAO,CAAC;GACH,UAAU,CAmDtB;AAnDY,gCAAU;;;;;;;;;;;ACnBvB,oHAAyC;AAEzC,qBAAe,CAAC,sBAAW,CAAC,CAAC;;;;;;;;;;ACF7B,qEAAqD;AACrD,+EAAyC;AAEzC,qBAAe,wCAAgB,EAAC,qBAAU,EAAE,CAAC,KAAK,EAAE,EAAE;IACpD,MAAM,IAAI,GAAG,IAAI,qBAAU,EAAE,CAAC;IAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC9C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAE5C,OAAO,IAAI,CAAC;AACd,CAAC,CAAC,CAAC;;;;;;;;;;;ACTH,2FAA2B;AAC3B,+FAA+B;AAC/B,4FAAkC;;;;;;;;;;;;;ACFlC,uDAA4C;AAC5C,iDAMiB;AACjB,+EAA6C;AAC7C,8DAA4C;AAE5C,sGAAqD;AAErD,IACa,kBAAkB,GAD/B,MACa,kBAAmB,SAAQ,qBAIvC;IACC,YACE,UAAsB,EACL,eAAgC;QAEjD,KAAK,CAAC,yBAAc,EAAE,UAAU,CAAC,CAAC;QAFjB,oBAAe,GAAf,eAAe,CAAiB;IAGnD,CAAC;IAED,sBAAsB,CAAC,EAAU;QAC/B,OAAO,IAAI,CAAC,KAAK,CAAC;;;;;;;;;;;;;kBAaJ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4Bf,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,OAAO,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;IAES,YAAY;QACpB,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;IACvD,CAAC;IAES,SAAS;QACjB,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IACvD,CAAC;IAES,WAAW,CAAC,EAKrB;YALqB,EACpB,MAAM,OAIP,EAHI,UAAU,sBAFO,UAGrB,CADc;QAIb,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,oBAAM,GAAE,CAAC,CAAC,CAAC,iBAAG,EAAC,oBAAM,GAAE,CAAC,CAAC;SACvD;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AAhFY,kBAAkB;IAD9B,uBAAU,GAAE;iEAOG,oBAAU,oBAAV,oBAAU,oDACY,kCAAe,oBAAf,kCAAe;GAPxC,kBAAkB,CAgF9B;AAhFY,gDAAkB;;;;;;;;;;;;;ACd/B,uDAA4C;AAC5C,iDAAqC;AACrC,+EAA+C;AAC/C,8DAA4C;AAE5C,IACa,oBAAoB,GADjC,MACa,oBAAqB,SAAQ,qBAAgC;IACxE,YAAY,UAAsB;QAChC,KAAK,CAAC,2BAAgB,EAAE,UAAU,CAAC,CAAC;IACtC,CAAC;CACF;AAJY,oBAAoB;IADhC,uBAAU,GAAE;iEAEa,oBAAU,oBAAV,oBAAU;GADvB,oBAAoB,CAIhC;AAJY,oDAAoB;;;;;;;;;;;ACNjC,yGAAkC;AAClC,+GAAwC;AACxC,gHAAyC;AACzC,yGAAkC;AAClC,6GAAsC;AACtC,0GAAmC;AACnC,4GAAqC;AACrC,0GAAmC;AACnC,4GAAqC;AACrC,+GAAwC;AACxC,iHAA0C;AAC1C,iHAA0C;AAC1C,wGAAiC;AAEjC,oGAAmD;AACnD,gHAA+D;AAC/D,kHAAiE;AACjE,oGAAmD;AACnD,4GAA2D;AAC3D,sGAAqD;AACrD,0GAAyD;AACzD,sGAAqD;AACrD,0GAAyD;AACzD,gHAA+D;AAC/D,oHAAmE;AACnE,oHAAkE;AAClE,kGAAiD;AAEjD,qBAAe;IACb,gCAAc;IACd,4CAAoB;IACpB,8CAAqB;IACrB,gCAAc;IACd,wCAAkB;IAClB,kCAAe;IACf,sCAAiB;IACjB,kCAAe;IACf,sCAAiB;IACjB,4CAAoB;IACpB,gDAAsB;IACtB,+CAAqB;IACrB,8BAAa;CACd,CAAC;;;;;;;;;;;;;AC1CF,uDAA4C;AAC5C,iDAA2D;AAC3D,+EAAiD;AACjD,8DAA4C;AAM5C,oGAAmD;AACnD,sGAAqD;AACrD,sGAAqD;AAErD,IACa,sBAAsB,GADnC,MACa,sBAAuB,SAAQ,qBAK3C;IACC,YACE,UAAsB,EACL,cAA8B,EAC9B,eAAgC,EAChC,eAAgC;QAEjD,KAAK,CAAC,6BAAkB,EAAE,UAAU,CAAC,CAAC;QAJrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;IAGnD,CAAC;IAES,YAAY;QACpB,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,cAAc;SAC1B,CAAC;IACJ,CAAC;IAES,SAAS;QACjB,OAAO;YACL,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;IAEe,YAAY,CAC1B,IAAwB;;YAExB,uCACK,IAAI,KACP,QAAQ,kCACH,IAAI,CAAC,QAAQ,KAChB,KAAK,EACH,IAAI,CAAC,QAAQ,CAAC,OAAO;wBACrB,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CACtB,CAAC,EACJ,KAAK,EACH,IAAI,CAAC,QAAQ,CAAC,OAAO;wBACrB,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CACtB,CAAC,EACJ,IAAI,EACF,IAAI,CAAC,QAAQ,CAAC,MAAM;wBACpB,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAC7C,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrB,CAAC,OAEN;QACJ,CAAC;KAAA;IAEY,QAAQ,CAAC,MAAc;;YAClC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;iBAC1D,iBAAiB,CAAC,oBAAoB,EAAE,MAAM,CAAC;iBAC/C,KAAK,CAAC,iCAAiC,EAAE,EAAE,MAAM,EAAE,CAAC;iBACpD,IAAI,CAAC,CAAC,CAAC;iBACP,OAAO,CAAC,yBAAyB,EAAE,MAAM,CAAC;iBAC1C,OAAO,EAAE,CAAC;YAEb,OAAO,OAAO,CAAC,GAAG,CAChB,MAAM,CAAC,GAAG,CAAC,CAAO,IAAI,EAAE,EAAE;gBAAC,wCACtB,IAAI,KACP,QAAQ,kCACH,IAAI,CAAC,QAAQ,KAChB,KAAK,EACH,IAAI,CAAC,QAAQ,CAAC,OAAO;4BACrB,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CACtB,CAAC,EACJ,KAAK,EACH,IAAI,CAAC,QAAQ,CAAC,OAAO;4BACrB,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CACtB,CAAC,EACJ,IAAI,EACF,IAAI,CAAC,QAAQ,CAAC,MAAM;4BACpB,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAC7C,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrB,CAAC,OAEN;cAAA,CAAC,CACJ,CAAC;QACJ,CAAC;KAAA;CACF;AArFY,sBAAsB;IADlC,uBAAU,GAAE;iEAQG,oBAAU,oBAAV,oBAAU,oDACW,gCAAc,oBAAd,gCAAc,oDACb,kCAAe,oBAAf,kCAAe,oDACf,kCAAe,oBAAf,kCAAe;GAVxC,sBAAsB,CAqFlC;AArFY,wDAAsB;;;;;;;;;;;;;ACdnC,uDAA4C;AAC5C,iDAUiB;AACjB,+EAA0C;AAC1C,8DAA4C;AAC5C,oGAAmD;AACnD,sGAAqD;AACrD,0GAAyD;AAGzD,IACa,eAAe,GAD5B,MACa,eAAgB,SAAQ,qBAIpC;IACC,YACE,UAAsB,EACL,cAA8B,EAC9B,eAAgC,EAChC,gBAAmC;QAEpD,KAAK,CAAC,sBAAW,EAAE,UAAU,CAAC,CAAC;QAJd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAmB;IAGtD,CAAC;IAES,YAAY;QACpB,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,cAAc;YACzB,KAAK,EAAE,IAAI,CAAC,eAAe;YAC3B,OAAO,EAAE,IAAI,CAAC,gBAAgB;SAC/B,CAAC;IACJ,CAAC;IAES,SAAS;QACjB,OAAO;YACL,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;SACvB,CAAC;IACJ,CAAC;IAES,WAAW,CAAC,EAerB;YAfqB,EACpB,GAAG,EACH,QAAQ,EACR,MAAM,EACN,OAAO,EACP,SAAS,EACT,OAAO,OASR,EARI,UAAU,sBAPO,gEAQrB,CADc;QASb,IAAI,GAAG;YAAE,UAAU,CAAC,EAAE,GAAG,gBAAE,EAAC,GAAG,CAAC,CAAC;QACjC,IAAI,QAAQ,EAAE;YACZ,UAAU,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,gBAAE,EAAC,QAAQ,CAAC,EAAE,CAAC;SACzC;QACD,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,iBAAG,EAAC,oBAAM,GAAE,CAAC,CAAC,CAAC,CAAC,oBAAM,GAAE,CAAC;SACxD;QACD,IAAI,OAAO,EAAE;YACX,UAAU,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE,gBAAE,EAAC,OAAO,CAAC,EAAE,CAAC;SACvC;QACD,IAAI,SAAS,IAAI,OAAO,EAAE;YACxB,UAAU,CAAC,SAAS,GAAG,qBAAO,EAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACpD;aAAM,IAAI,SAAS,EAAE;YACpB,UAAU,CAAC,SAAS,GAAG,6BAAe,EAAC,SAAS,CAAC,CAAC;SACnD;aAAM,IAAI,OAAO,EAAE;YAClB,UAAU,CAAC,SAAS,GAAG,6BAAe,EAAC,OAAO,CAAC,CAAC;SACjD;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AAjEY,eAAe;IAD3B,uBAAU,GAAE;iEAOG,oBAAU,oBAAV,oBAAU,oDACW,gCAAc,oBAAd,gCAAc,oDACb,kCAAe,oBAAf,kCAAe,oDACd,sCAAiB,oBAAjB,sCAAiB;GAT3C,eAAe,CAiE3B;AAjEY,0CAAe;;;;;;;;;;;;;ACpB5B,uDAAgE;AAChE,iDAA2D;AAC3D,+EAA4C;AAC5C,8DAA4C;AAC5C,sGAAqD;AAGrD,IACa,iBAAiB,GAD9B,MACa,iBAAkB,SAAQ,qBAItC;IACC,YACE,UAAsB,EAEH,eAAgC;QAEnD,KAAK,CAAC,wBAAa,EAAE,UAAU,CAAC,CAAC;QAFd,oBAAe,GAAf,eAAe,CAAiB;IAGrD,CAAC;IAES,YAAY;QACpB,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,eAAe;SAC5B,CAAC;IACJ,CAAC;IAES,SAAS;QACjB,OAAO;YACL,KAAK,EAAE,IAAI;SACZ,CAAC;IACJ,CAAC;CACF;AAxBY,iBAAiB;IAD7B,uBAAU,GAAE;IAQR,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,kCAAe,CAAC,CAAC;iEAD9B,oBAAU,oBAAV,oBAAU,oDAEc,kCAAe,oBAAf,kCAAe;GAR1C,iBAAiB,CAwB7B;AAxBY,8CAAiB;;;;;;;;;;;;;ACR9B,uDAA4C;AAC5C,iDAA2D;AAC3D,+EAA+C;AAC/C,8DAA4C;AAE5C,IACa,oBAAoB,GADjC,MACa,oBAAqB,SAAQ,qBAAgC;IACxE,YAAY,UAAsB;QAChC,KAAK,CAAC,2BAAgB,EAAE,UAAU,CAAC,CAAC;IACtC,CAAC;IAES,SAAS;QACjB,OAAO;YACL,QAAQ,EAAE,IAAI;SACf,CAAC;IACJ,CAAC;CACF;AAVY,oBAAoB;IADhC,uBAAU,GAAE;iEAEa,oBAAU,oBAAV,oBAAU;GADvB,oBAAoB,CAUhC;AAVY,oDAAoB;;;;;;;;;;;;;ACNjC,uDAA4C;AAC5C,iDAQiB;AACjB,+EAA4D;AAC5D,8DAA4C;AAC5C,sGAAqD;AACrD,4GAA2D;AAG3D,IACa,iBAAiB,GAD9B,MACa,iBAAkB,SAAQ,qBAItC;IACC,YACE,UAAsB,EACL,eAAgC,EAChC,kBAAsC;QAEvD,KAAK,CAAC,wBAAa,EAAE,UAAU,CAAC,CAAC;QAHhB,oBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAGzD,CAAC;IAEe,YAAY,CAC1B,IAAmB;;YAEnB,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,IAAI,CAAC;aACb;YACD,uCACK,IAAI,KACP,UAAU,EAAE,MAAM,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAC9D,IAAI,CAAC,QAAQ,CAAC,EAAE,CACjB,IACD;QACJ,CAAC;KAAA;IAES,YAAY;QACpB,OAAO,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;IAES,YAAY;QACpB,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,eAAe;YAC3B,QAAQ,EAAE,IAAI,CAAC,kBAAkB;SAClC,CAAC;IACJ,CAAC;IAES,SAAS;QACjB,OAAO;YACL,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACf,CAAC;IACJ,CAAC;IAES,WAAW,CAAC,EAWrB;YAXqB,EACpB,GAAG,EACH,WAAW,EACX,QAAQ,EACR,QAAQ,OAOT,EANI,UAAU,sBALO,8CAMrB,CADc;QAOb,IAAI,GAAG;YAAE,UAAU,CAAC,EAAE,GAAG,gBAAE,EAAC,GAAG,CAAC,CAAC;QACjC,IAAI,WAAW,EAAE;YACf,UAAU,CAAC,QAAQ,GAAG;gBACpB,EAAE,EAAE,EAAE,gBAAE,EAAC,WAAW,CAAC,EAAE;gBACvB,EAAE,MAAM,EAAE,gBAAE,EAAC,WAAW,CAAC,EAAE;aAC5B,CAAC;SACH;QACD,IAAI,QAAQ,IAAI,QAAQ,EAAE;YACxB,UAAU,CAAC,KAAK,GAAG,qBAAO,EAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAChD;aAAM,IAAI,QAAQ,EAAE;YACnB,UAAU,CAAC,KAAK,GAAG,6BAAe,EAAC,QAAQ,CAAC,CAAC;SAC9C;aAAM,IAAI,QAAQ,EAAE;YACnB,UAAU,CAAC,KAAK,GAAG,6BAAe,EAAC,QAAQ,CAAC,CAAC;SAC9C;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AAzEY,iBAAiB;IAD7B,uBAAU,GAAE;iEAOG,oBAAU,oBAAV,oBAAU,oDACY,kCAAe,oBAAf,kCAAe,oDACZ,wCAAkB,oBAAlB,wCAAkB;GAR9C,iBAAiB,CAyE7B;AAzEY,8CAAiB;;;;;;;;;;;;;ACjB9B,uDAA4C;AAC5C,iDAA2D;AAC3D,+EAAyC;AACzC,8DAA4C;AAG5C,IACa,cAAc,GAD3B,MACa,cAAe,SAAQ,qBAInC;IACC,YAAY,UAAsB;QAChC,KAAK,CAAC,qBAAU,EAAE,UAAU,CAAC,CAAC;IAChC,CAAC;IAES,SAAS;QACjB,OAAO;YACL,WAAW,EAAE,IAAI;SAClB,CAAC;IACJ,CAAC;CACF;AAdY,cAAc;IAD1B,uBAAU,GAAE;iEAMa,oBAAU,oBAAV,oBAAU;GALvB,cAAc,CAc1B;AAdY,wCAAc;;;;;;;;;;;;;ACP3B,uDAAgE;AAChE,iDAA2D;AAC3D,+EAAgD;AAChD,8DAA4C;AAC5C,oGAAmD;AAEnD,sGAAqD;AAErD,IACa,qBAAqB,GADlC,MACa,qBAAsB,SAAQ,qBAI1C;IACC,YACE,UAAsB,EAEL,eAAgC,EAChC,cAA8B;QAE/C,KAAK,CAAC,4BAAiB,EAAE,UAAU,CAAC,CAAC;QAHpB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;IAGjD,CAAC;IAES,YAAY;QACpB,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,eAAe;YAC3B,IAAI,EAAE,IAAI,CAAC,cAAc;SAC1B,CAAC;IACJ,CAAC;IAES,SAAS;QACjB,OAAO;YACL,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;CACF;AA3BY,qBAAqB;IADjC,uBAAU,GAAE;IAQR,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,kCAAe,CAAC,CAAC;iEAD9B,oBAAU,oBAAV,oBAAU,oDAEY,kCAAe,oBAAf,kCAAe,oDAChB,gCAAc,oBAAd,gCAAc;GATtC,qBAAqB,CA2BjC;AA3BY,sDAAqB;;;;;;;;;;;;;ACTlC,uDAA4C;AAC5C,iDAKiB;AACjB,+EAAqD;AACrD,8DAA4C;AAC5C,oGAAmD;AACnD,sEAIsC;AACtC,oHAAkE;AAClE,kGAAiD;AAEjD,IACa,eAAe,GAD5B,MACa,eAAgB,SAAQ,qBAIpC;IACC,YACE,UAAsB,EACL,eAA+B,EAC/B,qBAA4C,EAC5C,aAA4B;QAE7C,KAAK,CAAC,sBAAW,EAAE,UAAU,CAAC,CAAC;QAJd,oBAAe,GAAf,eAAe,CAAgB;QAC/B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,kBAAa,GAAb,aAAa,CAAe;IAG/C,CAAC;IAED,YAAY;QACV,OAAO,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;IAEe,YAAY,CAAC,IAAiB;;YAC5C,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,IAAI,CAAC;aACb;YACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,QAAQ,EAAE;gBAChE,OAAO,EAAE,IAAI,CAAC,EAAE;aACjB,CAAC,CAAC;YAEH,uCACK,IAAI,KACP,MAAM,IACN;QACJ,CAAC;KAAA;IAES,YAAY;QAIpB,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,eAAe;YAC3B,IAAI,EAAE,CAAO,KAAgC,EAAE,EAAE;gBAC/C,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC;SACF,CAAC;IACJ,CAAC;IAES,SAAS;QACjB,OAAO;YACL,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;SACf,CAAC;IACJ,CAAC;IAEK,OAAO,CAAC,KAAe;;YAC3B,MAAM,IAAI,GAAgB,EAAE,CAAC;YAE7B,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACxB,IAAI,mBAAM,EAAC,IAAI,CAAC,EAAE;oBAChB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChB;qBAAM;oBACL,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;wBAC3C,KAAK,EAAE,IAAI;wBACX,IAAI,EAAE,SAAS;qBAChB,CAAC,CAAC;oBACH,IAAI,CAAC,GAAG,EAAE;wBACR,GAAG,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC;4BACjD,KAAK,EAAE,IAAI;4BACX,IAAI,EAAE,SAAS;yBAChB,CAAC,CAAC;qBACJ;oBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAChB;aACF;YAED,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;CACF;AA5EY,eAAe;IAD3B,uBAAU,GAAE;iEAOG,oBAAU,oBAAV,oBAAU,oDACY,gCAAc,oBAAd,gCAAc,oDACR,+CAAqB,oBAArB,+CAAqB,oDAC7B,8BAAa,oBAAb,8BAAa;GATpC,eAAe,CA4E3B;AA5EY,0CAAe;;;;;;;;;;;;;ACnB5B,uDAA4C;AAC5C,iDAA2D;AAC3D,+EAAwC;AACxC,8DAA4C;AAG5C,IACa,aAAa,GAD1B,MACa,aAAc,SAAQ,qBAIlC;IACC,YAAY,UAAsB;QAChC,KAAK,CAAC,oBAAS,EAAE,UAAU,CAAC,CAAC;IAC/B,CAAC;IAES,SAAS;QACjB,OAAO;YACL,MAAM,EAAE,IAAI;SACb,CAAC;IACJ,CAAC;IAED,YAAY;QACV,OAAO,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;CACF;AAlBY,aAAa;IADzB,uBAAU,GAAE;iEAMa,oBAAU,oBAAV,oBAAU;GALvB,aAAa,CAkBzB;AAlBY,sCAAa;;;;;;;;;;;;;ACP1B,uDAA4C;AAC5C,iDAKiB;AACjB,+EAAgD;AAChD,8DAA4C;AAC5C,oGAAmD;AAGnD,IACa,qBAAqB,GADlC,MACa,qBAAsB,SAAQ,qBAG1C;IACC,YACE,UAAsB,EACL,cAA8B;QAE/C,KAAK,CAAC,4BAAiB,EAAE,UAAU,CAAC,CAAC;QAFpB,mBAAc,GAAd,cAAc,CAAgB;IAGjD,CAAC;IAES,YAAY;QACpB,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,cAAc;YAC3B,QAAQ,EAAE,IAAI,CAAC,cAAc;SAC9B,CAAC;IACJ,CAAC;IAES,SAAS;QACjB,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;SACf,CAAC;IACJ,CAAC;IAES,WAAW,CAAC,EAOrB;YAPqB,EACpB,GAAG,EACH,OAAO,OAKR,EAJI,UAAU,sBAHO,kBAIrB,CADc;QAOb,IAAI,GAAG;YAAE,UAAU,CAAC,EAAE,GAAG,gBAAE,EAAC,GAAG,CAAC,CAAC;QACjC,IAAI,OAAO,EAAE;YACX,OAAO;gDACA,UAAU,KAAE,MAAM,EAAE,gBAAE,EAAC,OAAO,CAAC;gDAC/B,UAAU,KAAE,QAAQ,EAAE,gBAAE,EAAC,OAAO,CAAC;aACvC,CAAC;SACH;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAEK,OAAO,CAAC,MAAc;;;YAC1B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE;iBAC3C,MAAM,CACL;;;;;;;;;YASI,EACJ,SAAS,CACV;iBACA,KAAK,CACJ,yGAAyG,CAC1G;iBACA,aAAa,CAAC,EAAE,MAAM,EAAE,CAAC;iBACzB,SAAS,EAAE,CAAC;YAEf,OAAO,CAAC,CAAC,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,mCAAI,CAAC,CAAC,GAAG,GAAG,CAAC;;KACtC;IAEK,uBAAuB;;;YAC3B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE;iBAC3C,MAAM,CACL;;;;;;;;;YASI,EACJ,SAAS,CACV;iBACA,KAAK,CAAC,oCAAoC,CAAC;iBAC3C,SAAS,EAAE,CAAC;YAEf,OAAO,CAAC,CAAC,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,mCAAI,CAAC,CAAC,GAAG,GAAG,CAAC;;KACtC;CACF;AAzFY,qBAAqB;IADjC,uBAAU,GAAE;iEAMG,oBAAU,oBAAV,oBAAU,oDACW,gCAAc,oBAAd,gCAAc;GANtC,qBAAqB,CAyFjC;AAzFY,sDAAqB;;;;;;;;;;;;;ACblC,uDAA4C;AAC5C,iDAA2D;AAC3D,+EAAyC;AACzC,8DAA4C;AAE5C,oGAAmD;AAEnD,IACa,cAAc,GAD3B,MACa,cAAe,SAAQ,qBAInC;IACC,YACE,UAAsB,EACL,cAA8B;QAE/C,KAAK,CAAC,qBAAU,EAAE,UAAU,CAAC,CAAC;QAFb,mBAAc,GAAd,cAAc,CAAgB;IAGjD,CAAC;IAES,SAAS;QACjB,OAAO;YACL,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;SAC7B,CAAC;IACJ,CAAC;CACF;AAjBY,cAAc;IAD1B,uBAAU,GAAE;iEAOG,oBAAU,oBAAV,oBAAU,oDACW,gCAAc,oBAAd,gCAAc;GAPtC,cAAc,CAiB1B;AAjBY,wCAAc;;;;;;;;;;;ACR3B,8GAAuC;AAEvC,qBAAe,CAAC,qBAAU,CAAC,CAAC;;;;;;;;;;;ACA5B,+EAA2E;AAC3E,yFAAoE;AAEpE,MAAqB,UAAU;IAChB,GAAG,CAAC,UAAsB;;;YACrC,MAAM,kBAAkB,GAAG,UAAU,CAAC,aAAa,CAAC,yBAAc,CAAC,CAAC;YACpE,MAAM,oBAAoB,GAAG,UAAU,CAAC,aAAa,CAAC,2BAAgB,CAAC,CAAC;YACxE,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,qBAAU,CAAC,CAAC;YAE5D,MAAM,gBAAgB,GAAuC,yBAAK,CAAC,MAAM,CACvE,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,iCAAM,IAAI,KAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAG,EAC/C,EAAE,CACH,CAAC;YAEF,KAAK,MAAM,IAAI,IAAI,+BAAW,EAAE;gBAC9B,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,kBAAkB,CAAC,MAAM,CACvD;oBACE,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,IAAI,EAAE,YAAY;iBACnB,EACD,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAC5B,CAAC;gBAEF,MAAM,cAAc,GAAG,MAAM,oBAAoB,CAAC,MAAM,CACtD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,iCAChC,UAAU,KACb,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC,IAC1B,CAAC,EACH,CAAC,MAAM,CAAC,CACT,CAAC;gBACF,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;oBACrD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;wBACxC,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAA8B,CAAC,CAAC;oBAC7D,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;YAED,KAAK,MAAM,IAAI,IAAI,yBAAK,EAAE;gBACxB,MAAM,OAAO,GACX,OAAC,MAAM,cAAc,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,mCACvD,IAAI,qBAAU,EAAE,CAAC;gBACnB,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC3B,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACvC,OAAO,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnD,MAAM,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACpC;;KACF;CACF;AA7CD,gCA6CC;;;;;;;;;;;;AClDD,uDAAgD;AAChD,4EAA0C;AAO1C,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAG;AAAd,WAAW;IALvB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,SAAS,EAAE,CAAC,uBAAY,CAAC;QACzB,OAAO,EAAE,CAAC,uBAAY,CAAC;KACxB,CAAC;GACW,WAAW,CAAG;AAAd,kCAAW;;;;;;;;;;;;;ACRxB,+DAK4B;AAC5B,8DAAyC;AACzC,sEAAkE;AAClE,oEAKuB;AACvB,mEAA0C;AAC1C,uDAAoD;AAEpD,IAGa,YAAY,GAHzB,MAGa,YAAa,SAAQ,kBAAW;IAC3C,YAEmB,mBAAwC,EAExC,YAA0B,EAE1B,gBAAkC,EAElC,YAA0B;QAE3C,KAAK,EAAE,CAAC;QARS,wBAAmB,GAAnB,mBAAmB,CAAqB;QAExC,iBAAY,GAAZ,YAAY,CAAc;QAE1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAElC,iBAAY,GAAZ,YAAY,CAAc;IAG7C,CAAC;IAGK,kBAAkB,CACP,MAAc,EACV,MAAc;;YAEjC,MAAM,CAAC,IAAI,CACT,cAAK,CAAC,kBAAkB,EACxB,MAAM,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,CACjD,CAAC;QACJ,CAAC;KAAA;IAGK,WAAW,CACA,OAAe,EACX,MAAc;;YAEjC,MAAM,CAAC,IAAI,CAAC,cAAK,CAAC,WAAW,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7E,CAAC;KAAA;IAGK,cAAc,CACH,OAAe,EACX,MAAc;;YAEjC,MAAM,CAAC,IAAI,CACT,cAAK,CAAC,cAAc,EACpB,MAAM,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CACvD,CAAC;QACJ,CAAC;KAAA;IAGK,gBAAgB,CACL,OAAe,EACX,MAAc;;YAEjC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBACjD,QAAQ,EAAE,CAAC,OAAO,CAAC;gBACnB,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,WAAW;gBACpB,MAAM,EAAE,oBAAW,CAAC,SAAS;aAC9B,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,cAAK,CAAC,gBAAgB,EAAE;gBAClC,OAAO;gBACP,SAAS,EAAE,WAAW,CAAC,IAAI;aAC5B,CAAC,CAAC;QACL,CAAC;KAAA;CACF;AA9CO;IADL,iCAAgB,EAAC,cAAK,CAAC,kBAAkB,CAAC;IAExC,+CAAW,GAAE;IACb,mDAAe,GAAE;;yEAAS,yBAAM,oBAAN,yBAAM;;sDAMlC;AAGK;IADL,iCAAgB,EAAC,cAAK,CAAC,WAAW,CAAC;IAEjC,+CAAW,GAAE;IACb,mDAAe,GAAE;;yEAAS,yBAAM,oBAAN,yBAAM;;+CAGlC;AAGK;IADL,iCAAgB,EAAC,cAAK,CAAC,cAAc,CAAC;IAEpC,+CAAW,GAAE;IACb,mDAAe,GAAE;;yEAAS,yBAAM,oBAAN,yBAAM;;kDAMlC;AAGK;IADL,iCAAgB,EAAC,cAAK,CAAC,gBAAgB,CAAC;IAEtC,+CAAW,GAAE;IACb,mDAAe,GAAE;;yEAAS,yBAAM,oBAAN,yBAAM;;oDAalC;AA5DU,YAAY;IAHxB,iCAAgB,EAAC;QAChB,IAAI,EAAE,GAAG;KACV,CAAC;IAGG,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,6BAAmB,CAAC,CAAC;IAE7C,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,sBAAY,CAAC,CAAC;IAEtC,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,0BAAgB,CAAC,CAAC;IAE1C,sCAAM,EAAC,uBAAU,EAAC,GAAG,EAAE,CAAC,sBAAY,CAAC,CAAC;iEALD,6BAAmB,oBAAnB,6BAAmB,oDAE1B,sBAAY,oBAAZ,sBAAY,oDAER,0BAAgB,oBAAhB,0BAAgB,oDAEpB,sBAAY,oBAAZ,sBAAY;GATlC,YAAY,CA6DxB;AA7DY,oCAAY;;;;;;;;;;;ACpBzB,gGAAgC;;;;;;;;;;;ACAhC,sFAA+B;AAC/B,wFAA2B;;;;;;;;;;;;ACD3B,uDAAgD;AAChD,2EAAyC;AAOzC,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IALtB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,SAAS,EAAE,CAAC,sBAAW,CAAC;QACxB,OAAO,EAAE,CAAC,sBAAW,CAAC;KACvB,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;;;;ACRvB,uFAA2B;AAE3B,oFAA8B;;;;;;;;;;;;;ACF9B,uDAA4C;AAC5C,uDAA+C;AAC/C,gFAA2D;AAC3D,kFAAsC;AAEtC,IACa,WAAW,GADxB,MACa,WAAW;IACtB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAE9C,UAAU,CACd,MAAc,EACd,UAAkB;;YAElB,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAE9D,oBAAU,CAAC,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAEvC,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBAC9B,IAAI;oBACF,MAAM,iBAAiB,GAAG,oBAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,aAAa,CAC5D,EAAE,MAAM,EAAE,EACV,UAAU,KAAK,EAAE,MAAM;wBACrB,IAAI,KAAK,EAAE;4BACT,GAAG,CAAC,KAAK,CAAC,CAAC;yBACZ;wBACD,GAAG,CAAC,MAAM,CAAC,CAAC;oBACd,CAAC,CACF,CAAC;oBAEF,qBAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBAClE;gBAAC,OAAO,GAAG,EAAE;oBACZ,GAAG,CAAC,GAAG,CAAC,CAAC;iBACV;YACH,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;CAqBF;AAjDY,WAAW;IADvB,uBAAU,GAAE;iEAEwB,sBAAa,oBAAb,sBAAa;GADrC,WAAW,CAiDvB;AAjDY,kCAAW;;;;;;;;;;;ACNxB,8FAA+B;;;;;;;;;;;ACA/B,2FAAkC;AAClC,0FAAiC;;;;;;;;;;;;ACDjC,mEAAiC;AAE1B,MAAM,YAAY,GAAG,CAAO,QAAgB,EAAE,EAAE;IACrD,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;IACpC,OAAO,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC3C,CAAC,EAAC;AAHW,oBAAY,gBAGvB;AAEK,MAAM,aAAa,GAAG,CAAO,QAAgB,EAAE,IAAY,EAAE,EAAE,0DACpE,aAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAC;AADpB,qBAAa,iBACO;;;;;;;;;;;;ACRjC,+CAAqC;AACrC,0GAAoD;AAE7C,MAAM,kBAAkB,GAAG,CAAC,QAAgB,EAAE,EAAE;IACrD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;IACxE,OAAO,YAAY,GAAG,GAAG,GAAG,QAAQ,CAAC;AACvC,CAAC,CAAC;AAHW,0BAAkB,sBAG7B;AAEW,qBAAa,GAAG,wBAAW,EAAC;IACvC,WAAW,EAAE,2BAAa,GAAE,CAAC,MAAM,CAAC,IAAI;IACxC,QAAQ,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;QAChC,QAAQ,CAAC,IAAI,EAAE,8BAAkB,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACxD,CAAC;CACF,CAAC,CAAC;;;;;;;;;;;ACbH,uGAAyC;;;;;;;;;;;;ACAzC,uDAKwB;AACxB,sEAA6D;AAE7D,0DAAqC;AAGrC,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC/B,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,2CAA2C;QAE3C,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACpD,yDAAyD;QAEzD,OAAO,CAAC,IAAI,GAAG,0BAAa,EAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE3C,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CACvB,mBAAG,EAAC,GAAG,EAAE;YACP,0CAA0C;YAC1C,0DAA0D;QAC5D,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF;AAhBY,oBAAoB;IADhC,uBAAU,GAAE;GACA,oBAAoB,CAgBhC;AAhBY,oDAAoB;;;;;;;;;;;;ACXjC,uDAAgD;AAChD,uDAA+C;AAC/C,iDAAwC;AACxC,2DAAkD;AAClD,yFAA+C;AAC/C,mFAAyC;AACzC,uFAA0D;AAc1D,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IAZtB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,yBAAc;YACd,eAAS,CAAC,aAAa,CAAC;gBACtB,UAAU,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC;gBACtE,MAAM,EAAE,CAAC,sBAAa,CAAC;aACxB,CAAC;SACH;QACD,WAAW,EAAE,CAAC,4BAAc,CAAC;QAC7B,SAAS,EAAE,CAAC,sBAAW,EAAE,0BAAa,EAAE,wBAAW,CAAC;KACrD,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;;;;;;ACpBvB,oDAMuB;AACvB,uDAAgE;AAChE,sEAAwE;AACxE,mFAA0C;AAC1C,+EAA0E;AAC1E,uFAA4C;AAE5C,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,IAAI,CAAC,CAAC;AAGhD,IACa,cAAc,GAD3B,MACa,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAGnD,QAAQ,CAAkB,EAAE,IAAI,EAA6B;;YACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEnD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAIK,KAAK,CAAY,EAAE,IAAI,EAAE;;YAC7B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAElD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;IAIK,MAAM,CAAY,EAAE,IAAI,EAAE;;YAC9B,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAKK,cAAc,CACP,EAAE,IAAI,EAAE,EAEnB,EAAE,IAAI,EAAmC;;YAEzC,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACrD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAGK,WAAW,CAEf,EAAE,KAAK,EAAgC;;YAEvC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACnE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAIK,iBAAiB,CAAY,EAAE,IAAI,EAAE;;YACzC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;CACF;AA/CO;IADL,iBAAM,EAAC,CAAC,CAAC,QAAQ,CAAC;IACH,2CAAa,GAAE;;;;8CAI9B;AAIK;IAFL,sBAAS,EAAC,uBAAc,CAAC;IACzB,iBAAM,EAAC,CAAC,CAAC,KAAK,CAAC;IACH,uCAAO,GAAE;;;;2CAIrB;AAIK;IAFL,sBAAS,EAAC,qBAAY,CAAC;IACvB,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,uCAAO,GAAE;;;;4CAEtB;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,4BAAW,EAAC,uBAAc,CAAC,kBAAkB,CAAC;IAC9C,iBAAM,EAAC,CAAC,CAAC,cAAc,CAAC;IAEtB,uCAAO,GAAE;IACT,2CAAa,GAAE;;;;oDAKjB;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,WAAW,CAAC;IAEnB,2CAAa,GAAE;;;;iDAKjB;AAIK;IAFL,sBAAS,EAAC,qBAAY,CAAC;IACvB,iBAAM,EAAC,CAAC,CAAC,iBAAiB,CAAC;IACH,uCAAO,GAAE;;;;uDAGjC;AAlDU,cAAc;IAD1B,uBAAU,GAAE;iEAE+B,sBAAW,oBAAX,sBAAW;GAD1C,cAAc,CAmD1B;AAnDY,wCAAc;;;;;;;;;;;ACjB3B,4GAAkC;;;;;;;;;;;ACAlC,uDAA6C;AAEtC,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,wBAAW,EAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAAvC,YAAI,QAAmC;;;;;;;;;;;ACFpD,gHAAuC;AACvC,0GAAiC;;;;;;;;;;;ACDjC,uDAA6C;AAEtC,MAAM,WAAW,GAAG,CAAC,GAAG,WAAqB,EAAE,EAAE,CACtD,wBAAW,EAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAD7B,mBAAW,eACkB;;;;;;;;;;;ACH1C,uDAA6C;AAEtC,MAAM,gBAAgB,GAAG,GAAG,EAAE,CAAC,wBAAW,EAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;AAAhE,wBAAgB,oBAAgD;;;;;;;;;;;ACF7E,wGAAmC;AACnC,sGAAiC;AACjC,wGAAmC;AACnC,+GAA0C;;;;;;;;;;;;;ACH1C,uDAA8D;AAC9D,mDAAyC;AACzC,2DAA6C;AAE7C,IACa,YAAY,GADzB,MACa,YAAa,SAAQ,wBAAS,EAAC,KAAK,CAAC;IAChD,YAA6B,SAAoB;QAC/C,KAAK,EAAE,CAAC;QADmB,cAAS,GAAT,SAAS,CAAW;IAEjD,CAAC;IAED,WAAW,CAAC,OAAyB;QACnC,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CACzC,mBAAmB,EACnB,OAAO,CAAC,UAAU,EAAE,CACrB,CAAC;QAEF,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACpD,IAAI,gBAAgB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE;YACtD,OAAO,IAAI,CAAC;SACb;QACD,uEAAuE;QACvE,gEAAgE;QAChE,uEAAuE;QAEvE,OAAO,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;CACF;AArBY,YAAY;IADxB,uBAAU,GAAE;iEAE6B,gBAAS,oBAAT,gBAAS;GADtC,YAAY,CAqBxB;AArBY,oCAAY;;;;;;;;;;;;ACLzB,uDAA4C;AAC5C,2DAA6C;AAG7C,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,wBAAS,EAAC,OAAO,CAAC;CAAG;AAA5C,cAAc;IAD1B,uBAAU,GAAE;GACA,cAAc,CAA8B;AAA5C,wCAAc;;;;;;;;;;;;;ACJ3B,uDAA2E;AAE3E,mDAAyC;AACzC,sEAA8E;AAE9E,IACa,eAAe,GAD5B,MACa,eAAe;IAC1B,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAE5C,WAAW,CACT,OAAyB;QAEzB,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CACpC,aAAa,EACb,OAAO,CAAC,UAAU,EAAE,CACrB,CAAC;QACF,IAAI,CAAC,WAAW;YAAE,OAAO,IAAI,CAAC;QAC9B,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACpD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAiB,CAAC;QAEvC,OAAO,gCAAmB,EAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAChD,CAAC;CACF;AAhBY,eAAe;IAD3B,uBAAU,GAAE;iEAEoB,gBAAS,oBAAT,gBAAS;GAD7B,eAAe,CAgB3B;AAhBY,0CAAe;;;;;;;;;;;ACN5B,4FAA8B;AAC9B,6FAAyB;AACzB,iGAA6B;;;;;;;;;;;;;ACF7B,uDAKwB;AAExB,iDAAqC;AACrC,sEAK2B;AAC3B,iDAAyC;AACzC,sEAA0C;AAC1C,oEAA+D;AAE/D,IACa,WAAW,GADxB,MACa,WAAW;IACtB,YACmB,UAAsB,EACtB,oBAA0C,EAC1C,cAA8B,EAC9B,cAA8B,EAC9B,UAAsB,EACtB,WAAwB;QALxB,eAAU,GAAV,UAAU,CAAY;QACtB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;IACxC,CAAC;IAEE,QAAQ,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAY;;YAC/D,IAAI,MAAM,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;gBACxD,MAAM,IAAI,4BAAmB,CAAC,sBAAsB,CAAC,CAAC;aACvD;YACD,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;YACxD,MAAM,WAAW,CAAC,OAAO,EAAE,CAAC;YAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;YACjE,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;gBAClD,KAAK;gBACL,QAAQ,EAAE,MAAM,0BAAY,EAAC,QAAQ,CAAC;aACvC,CAAC,CAAC;YACH,MAAM,WAAW,CAAC,gBAAgB,EAAE,CAAC;YAErC,IAAI;gBACF,IAAI,CAAC,KAAK,GAAG;oBACX,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC;iBAChE,CAAC;gBACF,MAAM,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;gBACvB,MAAM,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3C,MAAM,WAAW,CAAC,iBAAiB,EAAE,CAAC;aACvC;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,WAAW,CAAC,mBAAmB,EAAE,CAAC;gBACxC,MAAM,GAAG,CAAC;aACX;oBAAS;gBACR,MAAM,WAAW,CAAC,OAAO,EAAE,CAAC;aAC7B;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CACtC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,EAChB,EAAE,SAAS,EAAE,KAAK,EAAE,CACrB,CAAC;YAEF,OAAO,UAAU,CAAC,IAAI,CAAC;YAEvB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,MAAM,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;YAE/D,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAEK,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAS;;YAC3C,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;gBACzD,KAAK,EAAE,EAAE,KAAK,EAAE;gBAChB,SAAS,EAAE,CAAC,MAAM,CAAC;aACpB,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,2BAAa,EAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE;gBACxE,MAAM,IAAI,8BAAqB,EAAE,CAAC;aACnC;YAED,OAAO,UAAU,CAAC,IAAI,CAAC;QACzB,CAAC;KAAA;IAEK,KAAK,CAAC,IAAgB;;YAC1B,MAAM,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;YACjC,OAAO;gBACL,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC1C,IAAI;aACL,CAAC;QACJ,CAAC;KAAA;IAEK,cAAc,CAClB,EAAU,EACV,EAAE,eAAe,EAAE,WAAW,EAAkB;;YAEhD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC;gBAC3D,IAAI,EAAE,EAAE,EAAE,EAAE;aACb,CAAC,CAAC;YAEH,IACE,CAAC,UAAU;gBACX,CAAC,CAAC,MAAM,2BAAa,EAAC,eAAe,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,EAC5D;gBACA,MAAM,IAAI,2BAAkB,EAAE,CAAC;aAChC;YAED,UAAU,CAAC,QAAQ,GAAG,MAAM,0BAAY,EAAC,WAAW,CAAC,CAAC;YAEtD,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnD,CAAC;KAAA;IAEK,WAAW,CAAC,KAAa;;YAC7B,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACnD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;oBACzD,KAAK,EAAE;wBACL,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE;qBACzB;oBACD,SAAS,EAAE,CAAC,MAAM,CAAC;iBACpB,CAAC,CAAC;gBAEH,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAE3B,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAEjD,OAAO,qCAAqC,CAAC;aAC9C;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,8BAAqB,EAAE,CAAC;aACnC;QACH,CAAC;KAAA;IAEK,iBAAiB,CAAC,EAAU;;YAChC,MAAM,OAAO,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;YAC5B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;gBAC7C,KAAK,EAAE,EAAE,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,YAAY,CAAC;aAC1B,CAAC,CAAC;YAEH,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;YAExE,MAAM,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;YAE/D,OAAO;gBACL,WAAW;aACZ,CAAC;QACJ,CAAC;KAAA;IAEK,iBAAiB,CAAC,KAAK;;YAC3B,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACnD,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;aAC1D;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO;aACR;QACH,CAAC;KAAA;CACF;AAxIY,WAAW;IADvB,uBAAU,GAAE;iEAGoB,oBAAU,oBAAV,oBAAU,oDACA,+BAAoB,oBAApB,+BAAoB,oDAC1B,yBAAc,oBAAd,yBAAc,oDACd,yBAAc,oBAAd,yBAAc,oDAClB,gBAAU,oBAAV,gBAAU,oDACT,kBAAW,oBAAX,kBAAW;GAPhC,WAAW,CAwIvB;AAxIY,kCAAW;;;;;;;;;;;ACnBxB,sGAA+B;;;;;;;;;;;ACA/B,0GAAiC;AACjC,wGAA+B;;;;;;;;;;;;;ACD/B,2DAAoD;AACpD,2DAAoD;AACpD,uDAAmE;AACnE,uDAA+C;AAC/C,sEAAmD;AAEnD,IACa,WAAW,GADxB,MACa,WAAY,SAAQ,+BAAgB,EAAC,uBAAQ,CAAC;IACzD,YACmB,aAA4B,EAC5B,cAA8B;QAE/C,KAAK,CAAC;YACJ,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM;SAC7C,CAAC,CAAC;QAPc,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;IAOjD,CAAC;IAEK,QAAQ,CAAC,OAAwB;;YACrC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;gBAC7C,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE;gBAC1B,SAAS,EAAE;oBACT,KAAK,EAAE;wBACL,WAAW,EAAE,IAAI;qBAClB;iBACF;aACF,CAAC,CAAC;YACH,IAAI,CAAC,IAAI;gBAAE,MAAM,IAAI,8BAAqB,EAAE,CAAC;YAE7C,uCACK,IAAI,KACP,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;oBAC7B,uCACK,IAAI,KACP,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,IACrD;gBACJ,CAAC,CAAC,IACF;QACJ,CAAC;KAAA;CACF;AAjCY,WAAW;IADvB,uBAAU,GAAE;iEAGuB,sBAAa,oBAAb,sBAAa,oDACZ,yBAAc,oBAAd,yBAAc;GAHtC,WAAW,CAiCvB;AAjCY,kCAAW;;;;;;;;;;;;;ACPxB,+DAA0C;AAC1C,2DAAoD;AACpD,uDAAmE;AACnE,8FAAuD;AAGvD,IACa,aAAa,GAD1B,MACa,aAAc,SAAQ,+BAAgB,EAAC,yBAAQ,CAAC;IAC3D,YAA6B,WAAwB;QACnD,KAAK,CAAC;YACJ,aAAa,EAAE,OAAO;YACtB,aAAa,EAAE,UAAU;SAC1B,CAAC,CAAC;QAJwB,gBAAW,GAAX,WAAW,CAAa;IAKrD,CAAC;IAEK,QAAQ,CAAC,KAAa,EAAE,QAAgB;;YAC5C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACtE,IAAI,CAAC,IAAI,EAAE;gBACT,MAAM,IAAI,8BAAqB,EAAE,CAAC;aACnC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;CACF;AAfY,aAAa;IADzB,uBAAU,GAAE;iEAE+B,0BAAW,oBAAX,0BAAW;GAD1C,aAAa,CAezB;AAfY,sCAAa;;;;;;;;;;;;ACP1B,uDAAgD;AAChD,6FAAmD;AACnD,uFAA6C;AAQ7C,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAN1B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,gCAAkB,CAAC;QACjC,SAAS,EAAE,CAAC,0BAAe,CAAC;QAC5B,OAAO,EAAE,CAAC,0BAAe,CAAC;KAC3B,CAAC;GACW,cAAc,CAAG;AAAjB,wCAAc;;;;;;;;;;;;;ACV3B,oDAMuB;AACvB,uDAA0E;AAC1E,sEAAwE;AACxE,+EAAkE;AAClE,sEAAyC;AACzC,uFAA8C;AAC9C,4EAA+C;AAE/C,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,QAAQ,CAAC,CAAC;AAGpD,IACa,kBAAkB,GAD/B,MACa,kBAAkB;IAC7B,YACmB,eAAgC,EAChC,cAA8B;QAD9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;IAC9C,CAAC;IAKE,MAAM,CAAkB,EAAE,IAAI,EAA2B;;YAC7D,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEzD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QAClD,CAAC;KAAA;IAKK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE/D,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QAClD,CAAC;KAAA;IAED,8CAA8C;IAExC,MAAM,CAAkB,EAAE,KAAK,EAA2B;;YAC9D,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAE5D,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;QACpD,CAAC;KAAA;IAKK,MAAM,CAAkB,EAAE,MAAM,EAAE,IAAI,EAA2B;;YACrE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAEvE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAKK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;gBACjD,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE;aAC1B,CAAC,CAAC;YAEH,IAAI,WAAW,EAAE;gBACf,MAAM,IAAI,0BAAiB,CAAC,iCAAiC,CAAC,CAAC;aAChE;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBAC5C,QAAQ,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE;aAC5B,CAAC,CAAC;YAEH,IAAI,OAAO,EAAE;gBACX,MAAM,IAAI,0BAAiB,CAAC,oCAAoC,CAAC,CAAC;aACnE;YAED,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE7C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;CACF;AA5DO;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,cAAc,CAAC;IAC1C,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;gDAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,WAAW,CAAC;IACvC,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;6CAQzB;AAIK;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;gDAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,cAAc,CAAC;IAC1C,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;gDAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,cAAc,CAAC;IAC1C,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;gDAoB5B;AApEU,kBAAkB;IAD9B,uBAAU,GAAE;iEAGyB,0BAAe,oBAAf,0BAAe,oDAChB,wBAAc,oBAAd,wBAAc;GAHtC,kBAAkB,CAqE9B;AArEY,gDAAkB;;;;;;;;;;;AClB/B,oHAAsC;;;;;;;;;;;ACAtC,oGAAkC;AAClC,mGAA2B;;;;;;;;;;;;;ACD3B,uDAA4C;AAC5C,sEAAuE;AACvE,8DAA4C;AAE5C,IACa,eAAe,GAD5B,MACa,eAAgB,SAAQ,kBAA2B;IAC9D,YAA+B,UAA8B;QAC3D,KAAK,CAAC,UAAU,CAAC,CAAC;QADW,eAAU,GAAV,UAAU,CAAoB;IAE7D,CAAC;CACF;AAJY,eAAe;IAD3B,uBAAU,GAAE;iEAEgC,6BAAkB,oBAAlB,6BAAkB;GADlD,eAAe,CAI3B;AAJY,0CAAe;;;;;;;;;;;ACL5B,8GAAmC;;;;;;;;;;;ACAnC,sFAAuB;AACvB,sFAAuB;AACvB,sFAAuB;AACvB,6FAA8B;AAC9B,0FAA2B;AAC3B,uFAAwB;AACxB,yFAA0B;AAC1B,uFAAwB;AACxB,yFAA0B;AAC1B,sFAAuB;AACvB,2FAA4B;AAC5B,4FAA6B;AAC7B,8FAA+B;AAC/B,8FAA+B;AAC/B,qFAAsB;;;;;;;;;;;ACdtB,+FAA2B;AAC3B,4FAA8B;;;;;;;;;;;;ACD9B,+DAAsD;AACtD,4GAA4F;AAC5F,uDAAgD;AAChD,mFAAyC;AACzC,2CAA+B;AAC/B,uDAA+C;AAyB/C,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IAvBtB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY,CAAC,YAAY,CAAC;gBACxB,UAAU,EAAE,CAAO,MAAqB,EAAE,EAAE;oBAAC,QAAC;wBAC5C,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC;wBACvC,QAAQ,EAAE;4BACR,IAAI,EAAE,eAAe,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG;yBAChD;wBACD,QAAQ,EAAE;4BACR,GAAG,EAAE,kBAAO,EAAC,SAAS,EAAE,oBAAoB,CAAC;4BAC7C,OAAO,EAAE,IAAI,sCAAiB,EAAE;4BAChC,OAAO,EAAE;gCACP,MAAM,EAAE,IAAI;6BACb;yBACF;qBACF,CAAC;kBAAA;gBACF,MAAM,EAAE,CAAC,sBAAa,CAAC;aACxB,CAAC;SACH;QACD,SAAS,EAAE,CAAC,sBAAW,CAAC;QACxB,OAAO,EAAE,CAAC,sBAAW,CAAC,EAAE,mBAAmB;KAC5C,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;;;;AC9BvB,sGAA+B;;;;;;;;;;;;;ACA/B,+DAAuD;AACvD,uDAA4C;AAC5C,uDAA+C;AAG/C,IACa,WAAW,GADxB,MACa,WAAW;IACtB,YACU,aAA4B,EAC5B,aAA4B;QAD5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;IACnC,CAAC;IAEE,oBAAoB,CAAC,IAAgB,EAAE,KAAa;;YACxD,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CACrE,MAAM,CACP,yCAAyC,KAAK,EAAE,CAAC;YAElD,MAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;gBAChC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;gBACzB,yEAAyE;gBACzE,OAAO,EAAE,2BAA2B;gBACpC,QAAQ,EAAE,cAAc;gBACxB,OAAO,EAAE;oBACP,IAAI,EAAE,IAAI,CAAC,SAAS;oBACpB,GAAG;iBACJ;aACF,CAAC,CAAC;QACL,CAAC;KAAA;CACF;AAtBY,WAAW;IADvB,uBAAU,GAAE;iEAGc,sBAAa,oBAAb,sBAAa,oDACb,sBAAa,oBAAb,sBAAa;GAH3B,WAAW,CAsBvB;AAtBY,kCAAW;;;;;;;;;;;ACNxB,4HAA0C;;;;;;;;;;;;;ACA1C,oDAMuB;AACvB,uDAKwB;AACxB,sEAAwD;AACxD,+EAAiD;AACjD,2FAAkD;AAElD,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,YAAY,CAAC,CAAC;AAGxD,IAEa,sBAAsB,GAFnC,MAEa,sBAAsB;IAGjC,YAA6B,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;IAAG,CAAC;IAGvD,GAAG,CACU,EAAE,MAAM,EAAwB,EACtC,EAAE,IAAI,EAAE;;YAEnB,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE3D,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;gBACrD,MAAM,IAAI,0BAAiB,EAAE,CAAC;aAC/B;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;QACtD,CAAC;KAAA;IAGK,MAAM,CACO,EAAE,KAAK,EAA2B,EACxC,EAAE,IAAI,EAAE;;YAEnB,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,iCAC1C,KAAK,KACR,IAAI,EAAE,IAAI,CAAC,EAAE,IACb,CAAC;YAEH,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;QACvD,CAAC;KAAA;IAGK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAErC,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;IAGK,IAAI,CAAkB,EAAE,MAAM,EAAyB;;YAC3D,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEnC,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;IAGK,OAAO,CAAY,EAAE,IAAI,EAAE;;YAC/B,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAEpC,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;CACF;AA9CO;IADL,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IAEX,2CAAa,GAAE;IACf,uCAAO,GAAE;;;;iDASX;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,uCAAO,GAAE;;;;oDAQX;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;oDAI5B;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,IAAI,CAAC;IACH,2CAAa,GAAE;;;;kDAI1B;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,OAAO,CAAC;IACH,uCAAO,GAAE;;;;qDAIvB;AAnDU,sBAAsB;IAFlC,sBAAS,EAAC,qBAAY,CAAC;IACvB,uBAAU,GAAE;iEAI2B,8BAAmB,oBAAnB,8BAAmB;GAH9C,sBAAsB,CAoDlC;AApDY,wDAAsB;;;;;;;;;;;ACtBnC,4GAAsC;AACtC,uGAA2B;;;;;;;;;;;;ACD3B,uDAAgD;AAChD,iGAAuD;AACvD,2FAAiD;AAQjD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAN9B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,oCAAsB,CAAC;QACrC,SAAS,EAAE,CAAC,8BAAmB,CAAC;QAChC,OAAO,EAAE,CAAC,8BAAmB,CAAC;KAC/B,CAAC;GACW,kBAAkB,CAAG;AAArB,gDAAkB;;;;;;;;;;;ACV/B,sHAAuC;;;;;;;;;;;;;ACAvC,uDAA4C;AAC5C,sEAI2B;AAC3B,8DAA4C;AAC5C,sEAIsC;AACtC,iDAA6B;AAC7B,gEAA8C;AAE9C,IACa,mBAAmB,GADhC,MACa,mBAAoB,SAAQ,kBAKxC;IACC,YACqB,UAAkC,EAClC,YAA0B;QAE7C,KAAK,CAAC,UAAU,CAAC,CAAC;QAHC,eAAU,GAAV,UAAU,CAAwB;QAClC,iBAAY,GAAZ,YAAY,CAAc;IAG/C,CAAC;IAEK,SAAS,CAAC,MAAc;;;YAC5B,MAAM,IAAI,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC;YAE5B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBACtC,KAAK,EAAE;oBACL,IAAI;oBACJ,MAAM,EAAE,KAAK;iBACd;aACF,CAAC,CAAC;YAEH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC1C,KAAK,EAAE;oBACL,IAAI;oBACJ,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE,gBAAE,EAAC;wBACP,2BAAgB,CAAC,cAAc;wBAC/B,2BAAgB,CAAC,cAAc;qBAChC,CAAC;iBACH;aACF,CAAC,CAAC;YACH,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBACxC,KAAK,EAAE;oBACL,IAAI;oBACJ,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE,gBAAE,EAAC;wBACP,2BAAgB,CAAC,YAAY;wBAC7B,2BAAgB,CAAC,YAAY;wBAC7B,2BAAgB,CAAC,YAAY;qBAC9B,CAAC;iBACH;aACF,CAAC,CAAC;YAEH,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC7C,KAAK,EAAE;oBACL,IAAI;oBACJ,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE,gBAAE,EAAC;wBACP,2BAAgB,CAAC,iBAAiB;wBAClC,2BAAgB,CAAC,iBAAiB;wBAClC,2BAAgB,CAAC,iBAAiB;qBACnC,CAAC;iBACH;aACF,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBACzC,KAAK,EAAE;oBACL,IAAI;oBACJ,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE,gBAAE,EAAC;wBACP,2BAAgB,CAAC,cAAc;wBAC/B,2BAAgB,CAAC,UAAU;qBAC5B,CAAC;iBACH;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,GACT,OACE,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC9B,OAAO,EAAE,CAAC;gBACV,OAAO,EAAE,WAAW;gBACpB,QAAQ,EAAE,MAAM;gBAChB,IAAI,EAAE,MAAM;aACb,CAAC,CACH,CAAC,IAAI,mCAAI,EAAE,CAAC;YAEf,OAAO;gBACL,GAAG;gBACH,OAAO;gBACP,KAAK;gBACL,UAAU;gBACV,MAAM;gBACN,KAAK;aACN,CAAC;;KACH;IAEK,IAAI,CAAC,cAAsB;;YAC/B,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAC7D,cAAc,CACf,CAAC;YACF,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;YAC3B,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACzC,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzD,CAAC;KAAA;IAEK,OAAO,CAAC,MAAc;;YAC1B,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC;KAAA;IAEe,SAAS,CAAC,KAAyB;;YACjD,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClD,CAAC;KAAA;IAEY,2BAA2B,CAAC,MAAc;;YACrD,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B,MAAM,EACN,cAAK,CAAC,kBAAkB,EACxB,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAC7B,CAAC;QACJ,CAAC;KAAA;CACF;AAjHY,mBAAmB;IAD/B,uBAAU,GAAE;iEAQsB,iCAAsB,oBAAtB,iCAAsB,oDACpB,oBAAY,oBAAZ,oBAAY;GARpC,mBAAmB,CAiH/B;AAjHY,kDAAmB;;;;;;;;;;;AChBhC,8GAAmC;;;;;;;;;;;;;ACAnC,oDAMuB;AACvB,uDAKwB;AACxB,sEAIsC;AACtC,+EAI2B;AAC3B,sEAAyC;AACzC,oFAA2C;AAC3C,oFAAoD;AAEpD,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,KAAK,CAAC,CAAC;AAGjD,IAEa,eAAe,GAF5B,MAEa,eAAe;IAC1B,YACmB,YAA0B,EAC1B,YAA0B;QAD1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;IAC1C,CAAC;IAIE,MAAM,CAAkB,EAAE,IAAI,EAA2B;;YAC7D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEnD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAIK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEzD,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAOK,MAAM,CACO,EAAE,KAAK,EAA2B,EACxC,EAAE,IAAI,EAAE;;YAEnB,MAAM,EAAE,YAAY,KAAc,KAAK,EAAd,IAAI,kBAAK,KAAK,EAAjC,gBAAyB,CAAQ,CAAC;YACxC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnE,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;oBAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC/D,CAAC,EAAE,EAAE,CAAC,CAAC;gBACP,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1B;iBAAM,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;gBAChC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC1B;iBAAM,IACL,CAAC,gCAAmB,EAAC,IAAI,EAAE,CAAC,uBAAc,CAAC,uBAAuB,CAAC,CAAC,EACpE;gBACA,MAAM,IAAI,2BAAkB,EAAE,CAAC;aAChC;YACD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEnD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAIK,MAAM,CACO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAA2B,EACtD,EAAE,IAAI,EAAE;;YAEnB,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC;YAC/B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEzD,IACE,CAAC,YAAY;gBACb,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE;gBAChC,CAAC,gCAAmB,EAAC,IAAI,EAAE,CAAC,uBAAc,CAAC,uBAAuB,CAAC,CAAC,EACpE;gBACA,MAAM,IAAI,2BAAkB,EAAE,CAAC;aAChC;YACD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAEpE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE1C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;CACF;AA1EO;IAFL,6BAAgB,GAAE;IAClB,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;6CAI5B;AAIK;IAFL,6BAAgB,GAAE;IAClB,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;0CAQzB;AAOK;IALL,sBAAW,EACV,uBAAc,CAAC,WAAW,EAC1B,uBAAc,CAAC,uBAAuB,CACvC;IACA,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,uCAAO,GAAE;;;;6CAmBX;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,WAAW,CAAC;IACvC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,uCAAO,GAAE;;;;6CAeX;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,WAAW,CAAC;IACvC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;6CAI5B;AAjFU,eAAe;IAF3B,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,uBAAU,GAAE;iEAGsB,uBAAY,oBAAZ,uBAAY,oDACZ,uBAAY,oBAAZ,uBAAY;GAHlC,eAAe,CAkF3B;AAlFY,0CAAe;;;;;;;;;;;AChC5B,8FAA+B;AAC/B,gGAA2B;;;;;;;;;;;;ACD3B,uDAAgD;AAChD,0FAAgD;AAChD,oFAA0C;AAQ1C,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAG;AAAd,WAAW;IANvB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,6BAAe,CAAC;QAC9B,SAAS,EAAE,CAAC,uBAAY,CAAC;QACzB,OAAO,EAAE,CAAC,uBAAY,CAAC;KACxB,CAAC;GACW,WAAW,CAAG;AAAd,kCAAW;;;;;;;;;;;ACVxB,wGAAgC;;;;;;;;;;;;;ACAhC,uDAA4C;AAC5C,sEAAiE;AACjE,8DAA4C;AAC5C,sEAQsC;AACtC,wEAA2C;AAC3C,gEAA8C;AAC9C,gFAAmD;AACnD,sFAAyD;AAEzD,IACa,YAAY,GADzB,MACa,YAAa,SAAQ,kBAKjC;IACC,YACqB,UAA2B,EAC3B,mBAAwC,EACxC,YAA0B,EAC1B,gBAAkC,EAClC,YAA0B;QAE7C,KAAK,CAAC,UAAU,CAAC,CAAC;QANC,eAAU,GAAV,UAAU,CAAiB;QAC3B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;IAG/C,CAAC;IAEe,SAAS,CAAC,KAAkB;;YAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EACpB,cAAK,CAAC,cAAc,EACpB,MAAM,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CACvD,CAAC;YACF,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;oBACpC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,EAAE,yBAAgB,CAAC,YAAY;oBACnC,QAAQ,EAAE;wBACR,OAAO,EAAE,KAAK,CAAC,EAAE;qBAClB;iBACF,CAAC,CAAC;aACJ;YACD,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;gBACpC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAC1B,IAAI,EAAE,yBAAgB,CAAC,iBAAiB;gBACxC,QAAQ,EAAE;oBACR,OAAO,EAAE,KAAK,CAAC,EAAE;oBACjB,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE;iBACxB;aACF,CAAC,CAAC;YACH,OAAO;QACT,CAAC;KAAA;IAEe,SAAS,CACvB,KAAkB,EAClB,IAAiB;;;YAEjB,MAAM,YAAY,GAA0B;gBAC1C,OAAO,EAAE,KAAK,CAAC,EAAE;aAClB,CAAC;YACF,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE;gBAChC,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;gBAE/B,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EACpB,cAAK,CAAC,WAAW,EACjB,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAC3C,CAAC;gBACF,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;oBACpC,QAAQ,EAAE,CAAC,OAAO,CAAC;oBACnB,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,WAAW;oBACpB,MAAM,EAAE,oBAAW,CAAC,SAAS;iBAC9B,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EACpB,cAAK,CAAC,gBAAgB,EACtB;oBACE,OAAO;oBACP,SAAS,EAAE,WAAW,CAAC,IAAI;iBAC5B,CACF,CAAC;gBACF,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;aACpC;YACD,IAAI,WAAI,CAAC,OAAO,0CAAE,EAAE,OAAK,WAAK,CAAC,OAAO,0CAAE,EAAE,GAAE;gBAC1C,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;aAC/C;YACD,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;oBACpC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,EAAE,yBAAgB,CAAC,YAAY;oBACnC,QAAQ,oBACH,YAAY,CAChB;iBACF,CAAC,CAAC;aACJ;YACD,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;gBACpC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAC1B,IAAI,EAAE,yBAAgB,CAAC,iBAAiB;gBACxC,QAAQ,kCACH,YAAY,KACf,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,GACxB;aACF,CAAC,CAAC;YACH,OAAO;;KACR;IAEe,SAAS,CAAC,KAAkB;;YAC1C,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;oBACpC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,EAAE,yBAAgB,CAAC,YAAY;oBACnC,QAAQ,EAAE;wBACR,OAAO,EAAE,KAAK,CAAC,EAAE;qBAClB;iBACF,CAAC,CAAC;aACJ;YACD,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;gBACpC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAC1B,IAAI,EAAE,yBAAgB,CAAC,iBAAiB;gBACxC,QAAQ,EAAE;oBACR,OAAO,EAAE,KAAK,CAAC,EAAE;oBACjB,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE;iBACxB;aACF,CAAC,CAAC;YACH,OAAO;QACT,CAAC;KAAA;CACF;AArHY,YAAY;IADxB,uBAAU,GAAE;iEAQsB,0BAAe,oBAAf,0BAAe,oDACN,kCAAmB,oBAAnB,kCAAmB,oDAC1B,oBAAY,oBAAZ,oBAAY,oDACR,4BAAgB,oBAAhB,4BAAgB,oDACpB,oBAAY,oBAAZ,oBAAY;GAXpC,YAAY,CAqHxB;AArHY,oCAAY;;;;;;;;;;;AClBzB,kHAAqC;;;;;;;;;;;;;ACArC,oDAMuB;AACvB,uDAKwB;AACxB,sEAAwE;AACxE,+EAAkE;AAClE,sEAAyC;AACzC,sFAA6C;AAC7C,wEAA2C;AAE3C,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,OAAO,CAAC,CAAC;AAGnD,IACa,iBAAiB,GAD9B,MACa,iBAAiB;IAC5B,YACmB,cAA8B,EAC9B,YAA0B;QAD1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;IAC1C,CAAC;IAKE,MAAM,CACO,EAAE,IAAI,EAA2B,EACvC,EAAE,IAAI,EAAE;;YAEnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;gBAC9D,MAAM,IAAI,2BAAkB,EAAE,CAAC;aAChC;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEvD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;QACjD,CAAC;KAAA;IAIK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE7D,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;QACjD,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,KAAK,EAA2B;;YAC9D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEtD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAKK,MAAM,CAAkB,EAAE,MAAM,EAAE,IAAI,EAA2B;;YACrE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAEtE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAKK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE5C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;CACF;AAnDO;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,uCAAO,GAAE;;;;+CAUX;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;4CAQzB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;+CAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;+CAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;+CAI5B;AA3DU,iBAAiB;IAD7B,uBAAU,GAAE;iEAGwB,yBAAc,oBAAd,yBAAc,oDAChB,oBAAY,oBAAZ,oBAAY;GAHlC,iBAAiB,CA4D7B;AA5DY,8CAAiB;;;;;;;;;;;ACvB9B,kGAAiC;;;;;;;;;;;;ACAjC,uDAAgD;AAChD,4FAAkD;AAClD,sFAA4C;AAQ5C,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAG;AAAhB,aAAa;IANzB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,+BAAiB,CAAC;QAChC,SAAS,EAAE,CAAC,yBAAc,CAAC;QAC3B,OAAO,EAAE,CAAC,yBAAc,CAAC;KAC1B,CAAC;GACW,aAAa,CAAG;AAAhB,sCAAa;;;;;;;;;;;ACV1B,4GAAkC;;;;;;;;;;;;;ACAlC,uDAA4C;AAC5C,sEAAqE;AACrE,8DAA4C;AAE5C,IACa,cAAc,GAD3B,MACa,cAAe,SAAQ,kBAA0B;IAC5D,YAA+B,UAA6B;QAC1D,KAAK,CAAC,UAAU,CAAC,CAAC;QADW,eAAU,GAAV,UAAU,CAAmB;IAE5D,CAAC;CACF;AAJY,cAAc;IAD1B,uBAAU,GAAE;iEAEgC,4BAAiB,oBAAjB,4BAAiB;GADjD,cAAc,CAI1B;AAJY,wCAAc;;;;;;;;;;;ACL3B,wHAAwC;;;;;;;;;;;;;ACAxC,oDAMuB;AACvB,uDAAuD;AACvD,sEAAwD;AACxD,+EAAiD;AACjD,yFAAgD;AAEhD,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,UAAU,CAAC,CAAC;AAGtD,IAEa,oBAAoB,GAFjC,MAEa,oBAAoB;IAC/B,YAA6B,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;IAAG,CAAC;IAGrD,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEnD,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAGK,MAAM,CAAkB,EAAE,KAAK,EAA2B;;YAC9D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAE/C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;CACF;AAhBO;IADL,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;+CAQzB;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;kDAI5B;AAnBU,oBAAoB;IAFhC,sBAAS,EAAC,qBAAY,CAAC;IACvB,uBAAU,GAAE;iEAE2B,4BAAiB,oBAAjB,4BAAiB;GAD5C,oBAAoB,CAoBhC;AApBY,oDAAoB;;;;;;;;;;;ACjBjC,wGAAoC;;;;;;;;;;;;ACApC,uDAAgD;AAChD,+FAAqD;AACrD,yFAA+C;AAQ/C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAN5B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,kCAAoB,CAAC;QACnC,SAAS,EAAE,CAAC,4BAAiB,CAAC;QAC9B,OAAO,EAAE,CAAC,4BAAiB,CAAC;KAC7B,CAAC;GACW,gBAAgB,CAAG;AAAnB,4CAAgB;;;;;;;;;;;ACV7B,kHAAqC;;;;;;;;;;;;;ACArC,uDAA4C;AAC5C,sEAA2E;AAC3E,8DAA4C;AAE5C,IACa,iBAAiB,GAD9B,MACa,iBAAkB,SAAQ,kBAA6B;IAClE,YAA+B,UAAgC;QAC7D,KAAK,CAAC,UAAU,CAAC,CAAC;QADW,eAAU,GAAV,UAAU,CAAsB;IAE/D,CAAC;CACF;AAJY,iBAAiB;IAD7B,uBAAU,GAAE;iEAEgC,+BAAoB,oBAApB,+BAAoB;GADpD,iBAAiB,CAI7B;AAJY,8CAAiB;;;;;;;;;;;ACL9B,kHAAqC;;;;;;;;;;;;;ACArC,oDAMuB;AACvB,uDAKwB;AACxB,sEAKsC;AACtC,+EAAkE;AAClE,sEAAyC;AACzC,sFAA6C;AAC7C,2EAA2D;AAC3D,8EAA6D;AAC7D,8DAA4C;AAE5C,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,OAAO,CAAC,CAAC;AAGnD,IACa,iBAAiB,GAD9B,MACa,iBAAiB;IAC5B,YACmB,cAA8B,EAC9B,WAAwB;QADxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;IACxC,CAAC;IAME,MAAM,CACO,EAAE,IAAI,EAA2B,EAClC,KAA0B;;YAE1C,MAAM,KAAK,GAAG,IAA0C,CAAC;YAEzD,IAAI,KAAK,EAAE;gBACT,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CACpD,SAAS,EACT,KAAK,CAAC,MAAM,CACb,CAAC;gBACF,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC;aACvC;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAExD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;QACjD,CAAC;KAAA;IAIK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE7D,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;QACjD,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,KAAK,EAA2B;;YAC9D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEtD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAMK,MAAM,CACO,EAAE,MAAM,EAAE,IAAI,EAA2B,EAC1C,KAA0B;;YAE1C,MAAM,KAAK,GAAG,IAA0C,CAAC;YAEzD,IAAI,KAAK,EAAE;gBACT,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CACpD,SAAS,EACT,KAAK,CAAC,MAAM,CACb,CAAC;gBACF,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC;aACvC;YAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAEvE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAKK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE5C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;CACF;AAtEO;IAJL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,4BAAe,EAAC,sCAAe,EAAC,OAAO,CAAC,EAAE,mCAAoB,CAAC;IAC/D,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,4CAAY,GAAE;;yEAAQ,OAAO,0BAAP,OAAO,CAAC,MAAM,mBAAC,IAAI;;+CAe3C;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;4CAQzB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;+CAI5B;AAMK;IAJL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,4BAAe,EAAC,sCAAe,EAAC,OAAO,CAAC,EAAE,mCAAoB,CAAC;IAC/D,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,4CAAY,GAAE;;yEAAQ,OAAO,0BAAP,OAAO,CAAC,MAAM,mBAAC,IAAI;;+CAe3C;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,aAAa,CAAC;IACzC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;+CAI5B;AA/EU,iBAAiB;IAD7B,uBAAU,GAAE;iEAGwB,yBAAc,oBAAd,yBAAc,oDACjB,kBAAW,oBAAX,kBAAW;GAHhC,iBAAiB,CAgF7B;AAhFY,8CAAiB;;;;;;;;;;;AC9B9B,kGAAiC;AACjC,kGAA2B;;;;;;;;;;;;ACD3B,uDAAgD;AAChD,4FAAkD;AAClD,sFAA4C;AAQ5C,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAG;AAAhB,aAAa;IANzB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,+BAAiB,CAAC;QAChC,SAAS,EAAE,CAAC,yBAAc,CAAC;QAC3B,OAAO,EAAE,CAAC,yBAAc,CAAC;KAC1B,CAAC;GACW,aAAa,CAAG;AAAhB,sCAAa;;;;;;;;;;;ACV1B,4GAAkC;;;;;;;;;;;;;ACAlC,uDAA4C;AAC5C,sEAAqE;AACrE,8DAA4C;AAE5C,IACa,cAAc,GAD3B,MACa,cAAe,SAAQ,kBAA0B;IAC5D,YAA+B,UAA6B;QAC1D,KAAK,CAAC,UAAU,CAAC,CAAC;QADW,eAAU,GAAV,UAAU,CAAmB;IAE5D,CAAC;CACF;AAJY,cAAc;IAD1B,uBAAU,GAAE;iEAEgC,4BAAiB,oBAAjB,4BAAiB;GADjD,cAAc,CAI1B;AAJY,wCAAc;;;;;;;;;;;ACL3B,4GAAkC;;;;;;;;;;;;;ACAlC,oDAMuB;AACvB,uDAAuD;AACvD,sEAAwE;AACxE,+EAAkE;AAClE,sEAAyC;AACzC,mFAA0C;AAE1C,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,IAAI,CAAC,CAAC;AAGhD,IACa,cAAc,GAD3B,MACa,cAAc;IACzB,YAA6B,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAG,CAAC;IAK/C,MAAM,CAAkB,EAAE,IAAI,EAA2B;;YAC7D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAE7C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAIK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEnD,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,KAAK,EAA2B;;YAC9D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAE/C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAKK,MAAM,CAAkB,EAAE,MAAM,EAAE,IAAI,EAA2B;;YACrE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAE/D,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAKK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAErC,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;IAKK,iBAAiB,CACJ,EAAE,MAAM,EAAE,IAAI,EAAsC;;YAErE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAE9E,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;CACF;AAtDO;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;4CAI5B;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,OAAO,CAAC;IACnC,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;yCAQzB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;4CAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;4CAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;4CAI5B;AAKK;IAHL,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,iBAAiB,CAAC;IAEzB,2CAAa,GAAE;;;;uDAKjB;AA3DU,cAAc;IAD1B,uBAAU,GAAE;iEAE2B,sBAAW,oBAAX,sBAAW;GADtC,cAAc,CA4D1B;AA5DY,wCAAc;;;;;;;;;;;ACjB3B,4FAA8B;;;;;;;;;;;;ACA9B,uDAAgD;AAChD,yFAA+C;AAC/C,mFAAyC;AAQzC,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IANtB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,4BAAc,CAAC;QAC7B,SAAS,EAAE,CAAC,sBAAW,CAAC;QACxB,OAAO,EAAE,CAAC,sBAAW,CAAC;KACvB,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;;;;ACVvB,sGAA+B;;;;;;;;;;;;;ACA/B,uDAA4C;AAC5C,sEAI2B;AAC3B,8DAA4C;AAE5C,IACa,WAAW,GADxB,MACa,WAAY,SAAQ,kBAAuB;IACtD,YACqB,UAA0B,EAC1B,oBAA0C;QAE7D,KAAK,CAAC,UAAU,CAAC,CAAC;QAHC,eAAU,GAAV,UAAU,CAAgB;QAC1B,yBAAoB,GAApB,oBAAoB,CAAsB;IAG/D,CAAC;IAEY,iBAAiB,CAAC,EAAU,EAAE,aAAuB;;YAChE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;gBACzC,KAAK,EAAE,EAAE,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;aACjC,CAAC,CAAC;YAEH,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC;YAEhD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;gBACpD,IAAI,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;oBAC5B,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC5B,OAAO,IAAI,CAAC;iBACb;gBACD,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,KAAK,MAAM,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;gBACvD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC;oBAC3D,EAAE,EAAE,YAAY;iBACjB,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACnC;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;KAAA;CACF;AAjCY,WAAW;IADvB,uBAAU,GAAE;iEAGsB,yBAAc,oBAAd,yBAAc,oDACJ,+BAAoB,oBAApB,+BAAoB;GAHpD,WAAW,CAiCvB;AAjCY,kCAAW;;;;;;;;;;;ACTxB,sHAAuC;;;;;;;;;;;;;ACAvC,oDAMuB;AACvB,uDAAgE;AAChE,sEAMsC;AACtC,+EAAiD;AACjD,wFAA+C;AAE/C,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,SAAS,CAAC,CAAC;AAGrD,IAEa,mBAAmB,GAFhC,MAEa,mBAAmB;IAC9B,YAA6B,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;IAAG,CAAC;IAGpD,SAAS,CACI,EAAE,KAAK,EAA8B,EAC3C,EAAE,IAAI,EAAuB;;YAExC,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC;YAC/B,MAAM,IAAI,GAAc,EAAE,CAAC;YAE3B,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,mBAAmB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE5E,IAAI,YAAY,EAAE;gBAChB,IAAI,gCAAmB,EAAC,IAAI,EAAE,CAAC,uBAAc,CAAC,UAAU,CAAC,CAAC,EAAE;oBAC1D,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;iBACvD;gBACD,IAAI,gCAAmB,EAAC,IAAI,EAAE,CAAC,uBAAc,CAAC,UAAU,CAAC,CAAC,EAAE;oBAC1D,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;iBACtD;gBACD,IAAI,gCAAmB,EAAC,IAAI,EAAE,CAAC,uBAAc,CAAC,cAAc,CAAC,CAAC,EAAE;oBAC9D,IAAI,CAAC,eAAe,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;iBAChE;gBAED,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;gBACvD,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;gBACvD,IAAI,CAAC,iBAAiB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC;aACpE;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,CAAC;QACxC,CAAC;KAAA;CACF;AA7BO;IADL,iBAAM,EAAC,CAAC,CAAC,SAAS,CAAC;IAEjB,2CAAa,GAAE;IACf,uCAAO,GAAE;;;;oDA0BX;AAhCU,mBAAmB;IAF/B,sBAAS,EAAC,qBAAY,CAAC;IACvB,uBAAU,GAAE;iEAE2B,2BAAgB,oBAAhB,2BAAgB;GAD3C,mBAAmB,CAiC/B;AAjCY,kDAAmB;;;;;;;;;;;ACvBhC,sGAAmC;AACnC,oGAA2B;;;;;;;;;;;ACD3B,gHAAoC;;;;;;;;;;;;;ACApC,uDAA4C;AAC5C,sEAQ2B;AAC3B,iDAAsC;AAEtC,IACa,gBAAgB,GAD7B,MACa,gBAAgB;IAC3B,YACmB,cAA8B,EAC9B,cAA8B,EAC9B,eAAgC,EAChC,eAAgC,EAChC,kBAAsC,EACtC,qBAA4C,EAC5C,iBAAoC;QANpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;IACpD,CAAC;IAEE,cAAc,CAAC,MAAe;;YAClC,MAAM,OAAO,GAAG,MAAM;gBACpB,CAAC,CAAC;oBACE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE;iBACjC;gBACH,CAAC,CAAC,SAAS,CAAC;YAEd,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC;KAAA;IAEK,cAAc,CAAC,MAAe;;YAClC,MAAM,OAAO,GAAG,MAAM;gBACpB,CAAC,CAAC;oBACE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE;iBAChC;gBACH,CAAC,CAAC,SAAS,CAAC;YAEd,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC;KAAA;IAEK,oBAAoB,CAAC,MAAc;;YACvC,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;gBAChC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;aAC5C,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,mBAAmB,CAAC,OAAe;;YACvC,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;gBAChC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE;aAClC,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,qBAAqB,CAAC,OAAe;;YACzC,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;gBAChC,KAAK,EAAE;oBACL,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;oBACtB,OAAO,EAAE;wBACP,EAAE,EAAE,iBAAG,EAAC,oBAAM,GAAE,CAAC;qBAClB;iBACF;aACF,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,uBAAuB,CAAC,OAAe;;YAC3C,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;gBACnC,KAAK,EAAE;oBACL,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;iBACvB;aACF,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,qBAAqB,CAAC,OAAe;;YACzC,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;gBAClC,KAAK,EAAE;oBACL,KAAK,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;iBACvB;aACF,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,aAAa;;YACjB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QACrC,CAAC;KAAA;IAEK,aAAa;;YACjB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QACrC,CAAC;KAAA;IAEK,kBAAkB;;YACtB,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QACzC,CAAC;KAAA;IAEK,oBAAoB;;YACxB,OAAO,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,CAAC;QAC9D,CAAC;KAAA;IAEK,iBAAiB,CAAC,OAAe;;YACrC,OAAO;gBACL,OAAO;gBACP,eAAe,EAAE,MAAM,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC;gBAC5D,aAAa,EAAE,MAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC;gBACxD,WAAW,EAAE,MAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;gBACpD,aAAa,EAAE,MAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC;aACzD,CAAC;QACJ,CAAC;KAAA;CACF;AA/FY,gBAAgB;IAD5B,uBAAU,GAAE;iEAGwB,yBAAc,oBAAd,yBAAc,oDACd,yBAAc,oBAAd,yBAAc,oDACb,0BAAe,oBAAf,0BAAe,oDACf,0BAAe,oBAAf,0BAAe,oDACZ,6BAAkB,oBAAlB,6BAAkB,oDACf,gCAAqB,oBAArB,gCAAqB,oDACzB,4BAAiB,oBAAjB,4BAAiB;GAR5C,gBAAgB,CA+F5B;AA/FY,4CAAgB;;;;;;;;;;;;ACb7B,uDAAgD;AAChD,8FAAoD;AACpD,wFAA8C;AAQ9C,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAN3B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,iCAAmB,CAAC;QAClC,SAAS,EAAE,CAAC,2BAAgB,CAAC;QAC7B,OAAO,EAAE,CAAC,2BAAgB,CAAC;KAC5B,CAAC;GACW,eAAe,CAAG;AAAlB,0CAAe;;;;;;;;;;;ACV5B,4HAA0C;;;;;;;;;;;;;ACA1C,oDAMuB;AACvB,uDAAwE;AACxE,sEAAwD;AACxD,+EAI2B;AAC3B,2FAAiD;AACjD,8EAA6D;AAE7D,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,WAAW,CAAC,CAAC;AAGvD,IAEa,qBAAqB,GAFlC,MAEa,qBAAqB;IAGhC,YAA6B,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAEjE,MAAM,CAAkB,EAAE,IAAI,EAA2B;;YAC7D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEzD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAGK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAE/D,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,KAAK,EAA2B;;YAC9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAE3D,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,IAAI,EAA2B;;YAC7D,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CACtD;gBACE,MAAM,EAAE,IAAI,CAAC,IAAI;gBACjB,OAAO,EAAE,IAAI,CAAC,KAAK;aACpB,EACD,IAAI,CACL,CAAC;YAEF,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAGK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEhD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;CACF;AA7CO;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;mDAI5B;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;gDAQzB;AAIK;IAFL,6BAAgB,GAAE;IAClB,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;mDAI5B;AAIK;IAFL,4BAAe,EAAC,mCAAoB,CAAC;IACrC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;mDAU5B;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;mDAI5B;AAjDU,qBAAqB;IAFjC,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,uBAAU,GAAE;iEAIsC,6BAAkB,oBAAlB,6BAAkB;GAHxD,qBAAqB,CAkDjC;AAlDY,sDAAqB;;;;;;;;;;;ACtBlC,4GAAsC;AACtC,uGAA2B;;;;;;;;;;;ACD3B,sHAAuC;;;;;;;;;;;;;ACAvC,uDAA4C;AAC5C,sEAA6E;AAC7E,8DAA4C;AAE5C,IACa,kBAAkB,GAD/B,MACa,kBAAmB,SAAQ,kBAA8B;IACpE,YAA+B,UAAiC;QAC9D,KAAK,CAAC,UAAU,CAAC,CAAC;QADW,eAAU,GAAV,UAAU,CAAuB;IAEhE,CAAC;CACF;AAJY,kBAAkB;IAD9B,uBAAU,GAAE;iEAEgC,gCAAqB,oBAArB,gCAAqB;GADrD,kBAAkB,CAI9B;AAJY,gDAAkB;;;;;;;;;;;;ACL/B,uDAAgD;AAChD,iGAAsD;AACtD,2FAAgD;AAQhD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AAApB,iBAAiB;IAN7B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,mCAAqB,CAAC;QACpC,SAAS,EAAE,CAAC,6BAAkB,CAAC;QAC/B,OAAO,EAAE,CAAC,6BAAkB,CAAC;KAC9B,CAAC;GACW,iBAAiB,CAAG;AAApB,8CAAiB;;;;;;;;;;;ACV9B,8GAAmC;;;;;;;;;;;;;ACAnC,oDAMuB;AACvB,uDAOwB;AACxB,sEAKsC;AACtC,+EAI2B;AAC3B,sEAAyC;AACzC,oFAA2C;AAC3C,2EAA2D;AAC3D,8EAA6D;AAC7D,8DAA4C;AAC5C,8EAAiD;AAEjD,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,KAAK,CAAC,CAAC;AAGjD,IAEa,eAAe,GAF5B,MAEa,eAAe;IAC1B,YACmB,YAA0B,EAC1B,WAAwB,EACxB,eAAgC;QAFhC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;IAChD,CAAC;IAIE,MAAM,CACO,EAAE,IAAI,EAA2B,EAClC,KAA0B;;YAE1C,MAAM,KAAK,GAAG,IAAwC,CAAC;YAEvD,IAAI,KAAK,EAAE;gBACT,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CACpD,MAAM,EACN,KAAK,CAAC,MAAM,CACb,CAAC;gBACF,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC;aACvC;YAED,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEpD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAIK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEzD,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAIK,MAAM,CACO,EAAE,KAAK,EAA2B,EACxC,EAAE,IAAI,EAAE;;YAEnB,MAAM,EAAE,YAAY,KAAc,KAAK,EAAd,IAAI,kBAAK,KAAK,EAAjC,gBAAyB,CAAQ,CAAC;YACxC,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;aACtB;YACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEpD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;IAKK,MAAM,CACO,EAAE,MAAM,EAAE,IAAI,EAA2B,EAC1C,KAA0B;;YAE1C,MAAM,KAAK,GAAG,IAAwC,CAAC;YAEvD,IAAI,KAAK,EAAE;gBACT,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CACpD,MAAM,EACN,KAAK,CAAC,MAAM,CACb,CAAC;gBACF,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC;aACvC;YACD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAErE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;gBAC9C,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE;aACzB,CAAC,CAAC;YAEH,IAAI,QAAQ,EAAE;gBACZ,MAAM,IAAI,0BAAiB,CAAC,kCAAkC,CAAC,CAAC;aACjE;YAED,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAEhD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;IAIK,YAAY,CACC,EAAE,MAAM,EAAE,IAAI,EAAiC;;YAEhE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAE1E,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;CACF;AA5FO;IAHL,sBAAW,EAAC,uBAAc,CAAC,WAAW,CAAC;IACvC,4BAAe,EAAC,sCAAe,EAAC,OAAO,CAAC,EAAE,mCAAoB,CAAC;IAC/D,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,4CAAY,GAAE;;yEAAQ,OAAO,0BAAP,OAAO,CAAC,MAAM,mBAAC,IAAI;;6CAe3C;AAIK;IAFL,6BAAgB,GAAE;IAClB,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;0CAQzB;AAIK;IAFL,6BAAgB,GAAE;IAClB,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,uCAAO,GAAE;;;;6CASX;AAKK;IAHL,sBAAW,EAAC,uBAAc,CAAC,WAAW,CAAC;IACvC,4BAAe,EAAC,sCAAe,EAAC,OAAO,CAAC,EAAE,mCAAoB,CAAC;IAC/D,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;IACf,4CAAY,GAAE;;yEAAQ,OAAO,0BAAP,OAAO,CAAC,MAAM,mBAAC,IAAI;;6CAc3C;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,WAAW,CAAC;IACvC,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;6CAY5B;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,WAAW,CAAC;IACvC,iBAAM,EAAC,CAAC,CAAC,YAAY,CAAC;IAEpB,2CAAa,GAAE;;;;mDAKjB;AApGU,eAAe;IAF3B,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,uBAAU,GAAE;iEAGsB,uBAAY,oBAAZ,uBAAY,oDACb,kBAAW,oBAAX,kBAAW,oDACP,0BAAe,oBAAf,0BAAe;GAJxC,eAAe,CAqG3B;AArGY,0CAAe;;;;;;;;;;;ACtC5B,8FAA+B;AAC/B,gGAA2B;;;;;;;;;;;ACD3B,wGAAgC;;;;;;;;;;;;;ACAhC,uDAA4C;AAC5C,sEAI2B;AAC3B,8DAA4C;AAC5C,sEAIsC;AACtC,gFAAmD;AACnD,gEAA8C;AAE9C,IACa,YAAY,GADzB,MACa,YAAa,SAAQ,kBAAwB;IACxD,YACqB,UAA2B,EAC3B,eAAgC,EAChC,YAA0B,EAC1B,gBAAkC;QAErD,KAAK,CAAC,UAAU,CAAC,CAAC;QALC,eAAU,GAAV,UAAU,CAAiB;QAC3B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;IAGvD,CAAC;IAEK,SAAS,CAAC,OAAe;;YAC7B,OAAO;gBACL,OAAO;gBACP,SAAS,EAAE,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;oBACzC,KAAK,EAAE;wBACL,MAAM,EAAE,oBAAW,CAAC,SAAS;wBAC7B,KAAK,EAAE;4BACL,EAAE,EAAE,OAAO;yBACZ;qBACF;iBACF,CAAC;gBACF,KAAK,EAAE,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;oBACrC,KAAK,EAAE;wBACL,MAAM,EAAE,oBAAW,CAAC,KAAK;wBACzB,KAAK,EAAE;4BACL,EAAE,EAAE,OAAO;yBACZ;qBACF;iBACF,CAAC;aACH,CAAC;QACJ,CAAC;KAAA;IAEY,gBAAgB,CAAC,OAAe;;YAC3C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAClE,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE3D,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,CAAC,oBAAW,CAAC,MAAM,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAClE,CAAC;KAAA;IAEK,mBAAmB,CAAC,OAAe;;YACvC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAClE,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE3D,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,CACV,oBAAW,CAAC,SAAS,EACrB,MAAM,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CACvD,CAAC;QACJ,CAAC;KAAA;IAEK,YAAY,CAAC,OAAe,EAAE,KAAwB;;YAC1D,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;YACtE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;KAAA;CACF;AArDY,YAAY;IADxB,uBAAU,GAAE;iEAGsB,0BAAe,oBAAf,0BAAe,oDACV,0BAAe,oBAAf,0BAAe,oDAClB,oBAAY,oBAAZ,oBAAY,oDACR,4BAAgB,oBAAhB,4BAAgB;GAL5C,YAAY,CAqDxB;AArDY,oCAAY;;;;;;;;;;;;AChBzB,uDAAgD;AAChD,0FAAgD;AAChD,oFAA0C;AAQ1C,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAG;AAAd,WAAW;IANvB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,6BAAe,CAAC;QAC9B,SAAS,EAAE,CAAC,uBAAY,CAAC;QACzB,OAAO,EAAE,CAAC,uBAAY,CAAC;KACxB,CAAC;GACW,WAAW,CAAG;AAAd,kCAAW;;;;;;;;;;;ACVxB,0GAAiC;;;;;;;;;;;;;ACAjC,oDAMuB;AACvB,uDAA0E;AAC1E,sEAAwD;AACxD,+EAI2B;AAC3B,kFAAyC;AACzC,wEAA2C;AAE3C,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,GAAG,CAAC,CAAC;AAG/C,IAEa,aAAa,GAF1B,MAEa,aAAa;IACxB,YACmB,UAAsB,EACtB,YAA0B;QAD1B,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;IAC1C,CAAC;IAGE,MAAM,CAAkB,EAAE,IAAI,EAA2B;;YAC7D,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAE/C,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;QAC7C,CAAC;KAAA;IAGK,GAAG,CAAkB,EAAE,MAAM,EAAwB;;YACzD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAErD,IAAI,CAAC,GAAG,EAAE;gBACR,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;QAC7C,CAAC;KAAA;IAIK,MAAM,CAAkB,EAAE,KAAK,EAA2B;;YAC9D,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEvD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;QACpD,CAAC;KAAA;IAGK,MAAM,CAAkB,EAAE,MAAM,EAAE,IAAI,EAA2B;;YACrE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAElE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAGK,MAAM,CAAkB,EAAE,MAAM,EAA2B;;YAC/D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAEvE,IAAI,KAAK,EAAE;gBACT,MAAM,IAAI,0BAAiB,CAAC,6BAA6B,CAAC,CAAC;aAC5D;YAED,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAExC,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5C,CAAC;KAAA;CACF;AA5CO;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;2CAI5B;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IACH,2CAAa,GAAE;;;;wCAQzB;AAIK;IAFL,6BAAgB,GAAE;IAClB,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;2CAI5B;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;2CAI5B;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IACH,2CAAa,GAAE;;;;2CAU5B;AAlDU,aAAa;IAFzB,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,uBAAU,GAAE;iEAGoB,qBAAU,oBAAV,qBAAU,oDACR,oBAAY,oBAAZ,oBAAY;GAHlC,aAAa,CAmDzB;AAnDY,sCAAa;;;;;;;;;;;ACtB1B,0FAA6B;;;;;;;;;;;ACA7B,oGAA8B;;;;;;;;;;;;;ACA9B,uDAA4C;AAC5C,sEAA6D;AAC7D,8DAA4C;AAE5C,IACa,UAAU,GADvB,MACa,UAAW,SAAQ,kBAAsB;IACpD,YAA+B,UAAyB;QACtD,KAAK,CAAC,UAAU,CAAC,CAAC;QADW,eAAU,GAAV,UAAU,CAAe;IAExD,CAAC;CACF;AAJY,UAAU;IADtB,uBAAU,GAAE;iEAEgC,wBAAa,oBAAb,wBAAa;GAD7C,UAAU,CAItB;AAJY,gCAAU;;;;;;;;;;;;ACLvB,uDAAgD;AAChD,wFAA8C;AAC9C,kFAAwC;AAQxC,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IANrB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,2BAAa,CAAC;QAC5B,SAAS,EAAE,CAAC,qBAAU,CAAC;QACvB,OAAO,EAAE,CAAC,qBAAU,CAAC;KACtB,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;;;;;ACVtB,0HAAyC;;;;;;;;;;;;;ACAzC,oDAMuB;AACvB,uDAAgE;AAChE,sEAAwE;AACxE,0FAAiD;AACjD,+EAAkE;AAClE,sEAAyC;AAEzC,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,WAAW,CAAC,CAAC;AAGvD,IAEa,qBAAqB,GAFlC,MAEa,qBAAqB;IAGhC,YAA6B,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAIjE,OAAO,CAAY,EAAE,IAAI,EAAE;;YAC/B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC9D,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;IAIK,QAAQ,CAEZ,EAAE,IAAI,EAA6B;;YAEnC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5D,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;IAIK,QAAQ,CACD,EAAE,IAAI,EAAE,EAEnB,EAAE,IAAI,EAA6B;;YAEnC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YACrE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;IAIK,MAAM,CAEV,EAAE,KAAK,EAA2B;;YAElC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3D,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;IAGK,GAAG,CACI,EAAE,IAAI,EAAE,EAEnB,EAAE,IAAI,EAAwB;;YAE9B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YAChE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QAChD,CAAC;KAAA;CACF;AA7CO;IAFL,sBAAW,EAAC,uBAAc,CAAC,kBAAkB,CAAC;IAC9C,iBAAM,EAAC,CAAC,CAAC,OAAO,CAAC;IACH,uCAAO,GAAE;;;;oDAGvB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,mBAAmB,CAAC;IAC/C,iBAAM,EAAC,CAAC,CAAC,QAAQ,CAAC;IAEhB,2CAAa,GAAE;;;;qDAKjB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,mBAAmB,CAAC;IAC/C,iBAAM,EAAC,CAAC,CAAC,QAAQ,CAAC;IAEhB,uCAAO,GAAE;IACT,2CAAa,GAAE;;;;qDAKjB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,0BAA0B,CAAC;IACtD,iBAAM,EAAC,CAAC,CAAC,MAAM,CAAC;IAEd,2CAAa,GAAE;;;;mDAKjB;AAGK;IADL,iBAAM,EAAC,CAAC,CAAC,GAAG,CAAC;IAEX,uCAAO,GAAE;IACT,2CAAa,GAAE;;;;gDAKjB;AAnDU,qBAAqB;IAFjC,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,uBAAU,GAAE;iEAIsC,6BAAkB,oBAAlB,6BAAkB;GAHxD,qBAAqB,CAoDjC;AApDY,sDAAqB;;;;;;;;;;;AClBlC,sGAA2B;AAC3B,0GAAqC;;;;;;;;;;;ACDrC,oHAAsC;;;;;;;;;;;;;ACAtC,uDAAiE;AACjE,sEAMsC;AACtC,sEAO2B;AAC3B,8DAA4C;AAE5C,IACa,kBAAkB,GAD/B,MACa,kBAAmB,SAAQ,kBAA8B;IACpE,YACqB,UAAiC,EACnC,cAA8B,EAC9B,eAAgC,EAChC,iBAAoC,EACpC,sBAA8C;QAE/D,KAAK,CAAC,UAAU,CAAC,CAAC;QANC,eAAU,GAAV,UAAU,CAAuB;QACnC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,2BAAsB,GAAtB,sBAAsB,CAAwB;IAGjE,CAAC;IAEK,OAAO,CAAC,MAAc;;YAC1B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAEtD,OAAO,EAAE,OAAO,EAAE,CAAC;QACrB,CAAC;KAAA;IAEK,QAAQ,CAAC,KAAwB;;YACrC,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;gBACvD,UAAU,EAAE,KAAK,CAAC,QAAQ;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,YAAY;gBAAE,MAAM,IAAI,4BAAmB,CAAC,yBAAyB,CAAC,CAAC;YAE5E,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBACzC,QAAQ,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE;gBACjC,MAAM,EAAE,KAAK,CAAC,MAAM;aACrB,CAAC,CAAC;YAEH,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEnE,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC;gBACpD,IAAI,EAAE,yBAAgB,CAAC,cAAc;gBACrC,IAAI,EAAE,YAAY,CAAC,EAAE;gBACrB,QAAQ,EAAE;oBACR,MAAM,EAAE,KAAK,CAAC,MAAM;iBACrB;aACF,CAAC,CAAC;YAEH,OAAO,kBAAkB,CAAC;QAC5B,CAAC;KAAA;IAEK,QAAQ,CAAC,KAAwB,EAAE,MAAc;;;YACrD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;gBACvD,UAAU,EAAE,KAAK,CAAC,QAAQ;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,YAAY;gBAAE,MAAM,IAAI,4BAAmB,CAAC,yBAAyB,CAAC,CAAC;YAE5E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAE1C,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,mCAAI,CAAC,CAAC,EAAE;gBAC1C,MAAM,IAAI,4BAAmB,CAAC,uBAAuB,CAAC,CAAC;aACxD;YAED,IAAI,KAAK,CAAC,QAAQ,KAAK,MAAM,EAAE;gBAC7B,MAAM,IAAI,4BAAmB,CAAC,+BAA+B,CAAC,CAAC;aAChE;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBACzC,QAAQ,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE;gBACjC,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;gBACtB,MAAM,EAAE,KAAK,CAAC,MAAM;aACrB,CAAC,CAAC;YAEH,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEnE,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC;gBACpD,IAAI,EAAE,yBAAgB,CAAC,cAAc;gBACrC,IAAI,EAAE,YAAY,CAAC,EAAE;gBACrB,QAAQ,EAAE;oBACR,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,MAAM,EAAE,MAAM;iBACf;aACF,CAAC,CAAC;YAEH,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC;gBACpD,IAAI,EAAE,yBAAgB,CAAC,UAAU;gBACjC,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,MAAM,EAAE,YAAY,CAAC,EAAE;iBACxB;aACF,CAAC,CAAC;YAEH,OAAO,kBAAkB,CAAC;;KAC3B;IAEK,GAAG,CAAC,KAAU,EAAE,MAAc;;;YAClC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;gBACnD,KAAK,EAAE;oBACL,EAAE,EAAE,KAAK,CAAC,OAAO;iBAClB;gBACD,SAAS,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC;aACpC,CAAC,CAAC;YACH,IAAI,CAAC,SAAS;gBAAE,MAAM,IAAI,4BAAmB,CAAC,0BAA0B,CAAC,CAAC;YAE1E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAE1C,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,IAAkB,EAAE,EAAE;gBAC3C,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YAChE,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAErD,IAAI,SAAS,GAAG,CAAC,CAAC,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,mCAAI,CAAC,CAAC,EAAE;gBACvC,MAAM,IAAI,4BAAmB,CAAC,uBAAuB,CAAC,CAAC;aACxD;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBACzC,QAAQ,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE;gBAC1C,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;gBACtB,MAAM,EAAE,SAAS;aAClB,CAAC,CAAC;YACH,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEnE,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC5C,KAAK,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE;gBAC3B,UAAU,EAAE,SAAS;gBACrB,SAAS;gBACT,MAAM,EAAE,CAAC;gBACT,IAAI,EAAE,oBAAW,CAAC,MAAM;aACzB,CAAC,CAAC;YACH,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE3C,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC;gBACpD,IAAI,EAAE,yBAAgB,CAAC,cAAc;gBACrC,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,EAAE;gBAC7B,QAAQ,EAAE;oBACR,OAAO,EAAE,SAAS,CAAC,EAAE;oBACrB,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE;oBAC3B,MAAM,EAAE,SAAS;oBACjB,MAAM,EAAE,MAAM;iBACf;aACF,CAAC,CAAC;YAEH,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC;gBACpD,IAAI,EAAE,yBAAgB,CAAC,UAAU;gBACjC,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR,OAAO,EAAE,SAAS,CAAC,EAAE;oBACrB,MAAM,EAAE,SAAS;oBACjB,MAAM,EAAE,WAAW,CAAC,QAAQ,CAAC,EAAE;iBAChC;aACF,CAAC,CAAC;YAEH,OAAO,kBAAkB,CAAC;;KAC3B;CACF;AAlJY,kBAAkB;IAD9B,uBAAU,GAAE;iEAGsB,gCAAqB,oBAArB,gCAAqB,oDACnB,yBAAc,oBAAd,yBAAc,oDACb,0BAAe,oBAAf,0BAAe,oDACb,4BAAiB,oBAAjB,4BAAiB,oDACZ,iCAAsB,oBAAtB,iCAAsB;GANtD,kBAAkB,CAkJ9B;AAlJY,gDAAkB;;;;;;;;;;;;ACnB/B,uDAAgD;AAChD,gGAAsD;AACtD,0FAAgD;AAQhD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AAApB,iBAAiB;IAN7B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,mCAAqB,CAAC;QACpC,SAAS,EAAE,CAAC,6BAAkB,CAAC;QAC/B,OAAO,EAAE,CAAC,6BAAkB,CAAC;KAC9B,CAAC;GACW,iBAAiB,CAAG;AAApB,8CAAiB;;;;;;;;;;;ACV9B,4GAAkC;;;;;;;;;;;;;ACAlC,oDAMuB;AACvB,uDAKwB;AACxB,sEAIsC;AACtC,mFAA0C;AAC1C,+EAAkE;AAClE,sEAAyC;AAEzC,MAAM,CAAC,GAAG,iCAAsB,EAAC,iBAAQ,CAAC,IAAI,CAAC,CAAC;AAGhD,IAEa,cAAc,GAF3B,MAEa,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAInD,UAAU,CAAkB,EAAE,IAAI,EAA+B;;YACrE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEjD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAIK,OAAO,CAAkB,EAAE,MAAM,EAA4B;;YACjE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEvD,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aAC7C;YAED,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC9C,CAAC;KAAA;IAIK,QAAQ,CAAkB,EAAE,KAAK,EAA6B;;YAClE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEnD,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAC/C,CAAC;KAAA;IAIK,UAAU,CACH,EAAE,IAAI,EAAE,EACF,EAAE,MAAM,EAAE,IAAI,EAA+B;;YAE9D,IACE,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;gBACrB,CAAC,gCAAmB,EAAC,IAAI,EAAE,CAAC,uBAAc,CAAC,sBAAsB,CAAC,CAAC,EACnE;gBACA,MAAM,IAAI,2BAAkB,EAAE,CAAC;aAChC;YAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAEnE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAIK,UAAU,CACG,EAAE,MAAM,EAAE,IAAI,EAA+B;;YAE9D,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CACnD,MAAM,CAAC,EAAE,EACT,IAAI,CAAC,MAAM,CACZ,CAAC;YAEF,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAIK,YAAY,CACC,EAAE,MAAM,EAAE,IAAI,EAAiC;;YAEhE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CACrD,MAAM,CAAC,EAAE,EACT,IAAI,CAAC,MAAM,CACZ,CAAC;YAEF,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;IAIK,kBAAkB,CACL,EAAE,MAAM,EAAuC;;YAEhE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEzE,OAAO,EAAE,MAAM,EAAE,GAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;QACrD,CAAC;KAAA;CACF;AA/EO;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,UAAU,CAAC;IACH,2CAAa,GAAE;;;;gDAIhC;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,OAAO,CAAC;IACnC,iBAAM,EAAC,CAAC,CAAC,OAAO,CAAC;IACH,2CAAa,GAAE;;;;6CAQ7B;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,QAAQ,CAAC;IACH,2CAAa,GAAE;;;;8CAI9B;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,EAAE,uBAAc,CAAC,sBAAsB,CAAC;IAC7E,iBAAM,EAAC,CAAC,CAAC,UAAU,CAAC;IAElB,uCAAO,GAAE;IACT,2CAAa,GAAE;;;;gDAYjB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,EAAE,uBAAc,CAAC,sBAAsB,CAAC;IAC7E,iBAAM,EAAC,CAAC,CAAC,UAAU,CAAC;IAElB,2CAAa,GAAE;;;;gDAQjB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,EAAE,uBAAc,CAAC,sBAAsB,CAAC;IAC7E,iBAAM,EAAC,CAAC,CAAC,YAAY,CAAC;IAEpB,2CAAa,GAAE;;;;kDAQjB;AAIK;IAFL,sBAAW,EAAC,uBAAc,CAAC,UAAU,CAAC;IACtC,iBAAM,EAAC,CAAC,CAAC,kBAAkB,CAAC;IAE1B,2CAAa,GAAE;;;;wDAKjB;AAnFU,cAAc;IAF1B,sBAAS,EAAC,qBAAY,EAAE,wBAAe,CAAC;IACxC,uBAAU,GAAE;iEAE+B,sBAAW,oBAAX,sBAAW;GAD1C,cAAc,CAoF1B;AApFY,wCAAc;;;;;;;;;;;AC3B3B,4FAA8B;;;;;;;;;;;ACA9B,sGAA+B;;;;;;;;;;;;;ACA/B,uDAA4C;AAC5C,sEAA+E;AAC/E,8DAA4C;AAE5C,IACa,WAAW,GADxB,MACa,WAAY,SAAQ,kBAAuB;IACtD,YACqB,UAA0B,EAC5B,cAA8B;QAE/C,KAAK,CAAC,UAAU,CAAC,CAAC;QAHC,eAAU,GAAV,UAAU,CAAgB;QAC5B,mBAAc,GAAd,cAAc,CAAgB;IAGjD,CAAC;IAEY,UAAU,CAAC,EAAU,EAAE,MAAc;;YAChD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;YAC5D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;KAAA;IAEY,YAAY,CAAC,EAAU,EAAE,MAAc;;YAClD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;YAE7D,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;KAAA;IAEY,kBAAkB,CAAC,EAAU;;YACxC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;YAC5D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;YAC3E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;KAAA;CACF;AA9BY,WAAW;IADvB,uBAAU,GAAE;iEAGsB,yBAAc,oBAAd,yBAAc,oDACZ,yBAAc,oBAAd,yBAAc;GAHtC,WAAW,CA8BvB;AA9BY,kCAAW;;;;;;;;;;;;ACLxB,uDAAgD;AAChD,yFAA+C;AAC/C,mFAAyC;AAQzC,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IANtB,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,4BAAc,CAAC;QAC7B,SAAS,EAAE,CAAC,sBAAW,CAAC;QACxB,OAAO,EAAE,CAAC,sBAAW,CAAC;KACvB,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;ACVvB;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBA,uDAAwC;AACxC,mDAA2C;AAC3C,oEAA6C;AAC7C,0GAAuD;AAEvD,SAAe,SAAS;;QACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;QAChD,iCAAiC;QACjC,qCAAqC;QACrC,GAAG,CAAC,UAAU,EAAE,CAAC;QAEjB,MAAM,IAAI,GAAG,2BAAa,GAAE,CAAC,IAAI,CAAC;QAElC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,eAAM,CAAC,GAAG,CAAC,kDAAkD,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","sources":["webpack:///../../lib/global/src/index.ts","webpack:///../../lib/global/src/lib/constant.ts","webpack:///../../lib/global/src/lib/contracts/auth-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/category-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/index.ts","webpack:///../../lib/global/src/lib/contracts/notification-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/order-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/payment-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/permission-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/product-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/qrcode-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/role-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/statistic-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/store-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/store-rating-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/tag-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/transaction-controller.contract.ts","webpack:///../../lib/global/src/lib/contracts/user-controller.contract.ts","webpack:///../../lib/global/src/lib/helpers/currency.helper.ts","webpack:///../../lib/global/src/lib/helpers/form.helper.ts","webpack:///../../lib/global/src/lib/helpers/index.ts","webpack:///../../lib/global/src/lib/helpers/notification.helper.ts","webpack:///../../lib/global/src/lib/helpers/string.helper.ts","webpack:///../../lib/global/src/lib/helpers/user.helper.ts","webpack:///../../lib/global/src/lib/index.ts","webpack:///../../lib/global/src/lib/interfaces/auth.ts","webpack:///../../lib/global/src/lib/interfaces/category.ts","webpack:///../../lib/global/src/lib/interfaces/common.ts","webpack:///../../lib/global/src/lib/interfaces/event.ts","webpack:///../../lib/global/src/lib/interfaces/index.ts","webpack:///../../lib/global/src/lib/interfaces/notification.ts","webpack:///../../lib/global/src/lib/interfaces/order.ts","webpack:///../../lib/global/src/lib/interfaces/pagination.ts","webpack:///../../lib/global/src/lib/interfaces/payment.ts","webpack:///../../lib/global/src/lib/interfaces/permission.ts","webpack:///../../lib/global/src/lib/interfaces/product.ts","webpack:///../../lib/global/src/lib/interfaces/role.ts","webpack:///../../lib/global/src/lib/interfaces/socket.ts","webpack:///../../lib/global/src/lib/interfaces/statistic.ts","webpack:///../../lib/global/src/lib/interfaces/store-rating.ts","webpack:///../../lib/global/src/lib/interfaces/store.ts","webpack:///../../lib/global/src/lib/interfaces/tag.ts","webpack:///../../lib/global/src/lib/interfaces/transaction.ts","webpack:///../../lib/global/src/lib/interfaces/user.ts","webpack:///../../lib/global/src/lib/schemas/auth.ts","webpack:///../../lib/global/src/lib/schemas/category.ts","webpack:///../../lib/global/src/lib/schemas/common.ts","webpack:///../../lib/global/src/lib/schemas/file.ts","webpack:///../../lib/global/src/lib/schemas/index.ts","webpack:///../../lib/global/src/lib/schemas/notification.ts","webpack:///../../lib/global/src/lib/schemas/order.ts","webpack:///../../lib/global/src/lib/schemas/pagination.ts","webpack:///../../lib/global/src/lib/schemas/payment.ts","webpack:///../../lib/global/src/lib/schemas/permission.ts","webpack:///../../lib/global/src/lib/schemas/product.ts","webpack:///../../lib/global/src/lib/schemas/role.ts","webpack:///../../lib/global/src/lib/schemas/statistic.ts","webpack:///../../lib/global/src/lib/schemas/store-rating.ts","webpack:///../../lib/global/src/lib/schemas/store.ts","webpack:///../../lib/global/src/lib/schemas/tag.ts","webpack:///../../lib/global/src/lib/schemas/transaction.ts","webpack:///../../lib/global/src/lib/schemas/unrestricted.ts","webpack:///../../lib/global/src/lib/schemas/user.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/config/configuration.ts","webpack:///./src/app/config/roles-permissions.ts","webpack:///./src/app/core/base.gateway.ts","webpack:///./src/app/core/base.repository.ts","webpack:///./src/app/core/base.service.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/database/database.module.ts","webpack:///./src/app/database/entities/category.entity.ts","webpack:///./src/app/database/entities/credential.entity.ts","webpack:///./src/app/database/entities/index.ts","webpack:///./src/app/database/entities/notification.entity.ts","webpack:///./src/app/database/entities/order.entity.ts","webpack:///./src/app/database/entities/payment.entity.ts","webpack:///./src/app/database/entities/permission.entity.ts","webpack:///./src/app/database/entities/product.entity.ts","webpack:///./src/app/database/entities/role.entity.ts","webpack:///./src/app/database/entities/store-rating.entity.ts","webpack:///./src/app/database/entities/store.entity.ts","webpack:///./src/app/database/entities/tag.entity.ts","webpack:///./src/app/database/entities/transaction.entity.ts","webpack:///./src/app/database/entities/user.entity.ts","webpack:///./src/app/database/factories/index.ts","webpack:///./src/app/database/factories/user.factory.ts","webpack:///./src/app/database/index.ts","webpack:///./src/app/database/repositories/category.repository.ts","webpack:///./src/app/database/repositories/credential.repository.ts","webpack:///./src/app/database/repositories/index.ts","webpack:///./src/app/database/repositories/notification.repository.ts","webpack:///./src/app/database/repositories/order.repository.ts","webpack:///./src/app/database/repositories/payment.repository.ts","webpack:///./src/app/database/repositories/permission.repository.ts","webpack:///./src/app/database/repositories/product.repository.ts","webpack:///./src/app/database/repositories/role.repository.ts","webpack:///./src/app/database/repositories/store-rating.repository.ts","webpack:///./src/app/database/repositories/store.repository.ts","webpack:///./src/app/database/repositories/tag.repository.ts","webpack:///./src/app/database/repositories/transaction.repository.ts","webpack:///./src/app/database/repositories/user.repository.ts","webpack:///./src/app/database/seeds/index.ts","webpack:///./src/app/database/seeds/role.seeder.ts","webpack:///./src/app/event/event.module.ts","webpack:///./src/app/event/gateways/event.gateway.ts","webpack:///./src/app/event/gateways/index.ts","webpack:///./src/app/event/index.ts","webpack:///./src/app/file/file.module.ts","webpack:///./src/app/file/index.ts","webpack:///./src/app/file/services/file.service.ts","webpack:///./src/app/file/services/index.ts","webpack:///./src/app/helpers/index.ts","webpack:///./src/app/helpers/password.helper.ts","webpack:///./src/app/helpers/storage.helper.ts","webpack:///./src/app/interceptors/index.ts","webpack:///./src/app/interceptors/parse-body.interceptor.ts","webpack:///./src/app/modules/auth/auth.module.ts","webpack:///./src/app/modules/auth/controllers/auth.controller.ts","webpack:///./src/app/modules/auth/controllers/index.ts","webpack:///./src/app/modules/auth/decorators/auth.decorator.ts","webpack:///./src/app/modules/auth/decorators/index.ts","webpack:///./src/app/modules/auth/decorators/permission.decorator.ts","webpack:///./src/app/modules/auth/guards/allow-unauthorize.guard.ts","webpack:///./src/app/modules/auth/guards/index.ts","webpack:///./src/app/modules/auth/guards/jwt-auth.guard.ts","webpack:///./src/app/modules/auth/guards/local-auth.guard.ts","webpack:///./src/app/modules/auth/guards/permission.guard.ts","webpack:///./src/app/modules/auth/index.ts","webpack:///./src/app/modules/auth/services/auth.service.ts","webpack:///./src/app/modules/auth/services/index.ts","webpack:///./src/app/modules/auth/strategies/index.ts","webpack:///./src/app/modules/auth/strategies/jwt.strategy.ts","webpack:///./src/app/modules/auth/strategies/local.strategy.ts","webpack:///./src/app/modules/category/category.module.ts","webpack:///./src/app/modules/category/controllers/category.controller.ts","webpack:///./src/app/modules/category/controllers/index.ts","webpack:///./src/app/modules/category/index.ts","webpack:///./src/app/modules/category/services/category.service.ts","webpack:///./src/app/modules/category/services/index.ts","webpack:///./src/app/modules/index.ts","webpack:///./src/app/modules/mail/index.ts","webpack:///./src/app/modules/mail/mail.module.ts","webpack:///./src/app/modules/mail/services/index.ts","webpack:///./src/app/modules/mail/services/mail.service.ts","webpack:///./src/app/modules/notification/controllers/index.ts","webpack:///./src/app/modules/notification/controllers/notification.controller.ts","webpack:///./src/app/modules/notification/index.ts","webpack:///./src/app/modules/notification/notification.module.ts","webpack:///./src/app/modules/notification/services/index.ts","webpack:///./src/app/modules/notification/services/notification.service.ts","webpack:///./src/app/modules/order/controllers/index.ts","webpack:///./src/app/modules/order/controllers/order.controller.ts","webpack:///./src/app/modules/order/index.ts","webpack:///./src/app/modules/order/order.module.ts","webpack:///./src/app/modules/order/services/index.ts","webpack:///./src/app/modules/order/services/order.service.ts","webpack:///./src/app/modules/payment/controllers/index.ts","webpack:///./src/app/modules/payment/controllers/payment.controller.ts","webpack:///./src/app/modules/payment/index.ts","webpack:///./src/app/modules/payment/payment.module.ts","webpack:///./src/app/modules/payment/services/index.ts","webpack:///./src/app/modules/payment/services/payment.service.ts","webpack:///./src/app/modules/permission/controllers/index.ts","webpack:///./src/app/modules/permission/controllers/permission.controller.ts","webpack:///./src/app/modules/permission/index.ts","webpack:///./src/app/modules/permission/permission.module.ts","webpack:///./src/app/modules/permission/services/index.ts","webpack:///./src/app/modules/permission/services/permission.service.ts","webpack:///./src/app/modules/product/controllers/index.ts","webpack:///./src/app/modules/product/controllers/product.controller.ts","webpack:///./src/app/modules/product/index.ts","webpack:///./src/app/modules/product/product.module.ts","webpack:///./src/app/modules/product/services/index.ts","webpack:///./src/app/modules/product/services/product.service.ts","webpack:///./src/app/modules/role/controllers/index.ts","webpack:///./src/app/modules/role/controllers/role.controller.ts","webpack:///./src/app/modules/role/index.ts","webpack:///./src/app/modules/role/role.module.ts","webpack:///./src/app/modules/role/services/index.ts","webpack:///./src/app/modules/role/services/role.service.ts","webpack:///./src/app/modules/statistic/controllers/index.ts","webpack:///./src/app/modules/statistic/controllers/statistic.controller.ts","webpack:///./src/app/modules/statistic/index.ts","webpack:///./src/app/modules/statistic/services/index.ts","webpack:///./src/app/modules/statistic/services/statistic.service.ts","webpack:///./src/app/modules/statistic/statistic.module.ts","webpack:///./src/app/modules/store-rating/controllers/index.ts","webpack:///./src/app/modules/store-rating/controllers/store-rating.controller.ts","webpack:///./src/app/modules/store-rating/index.ts","webpack:///./src/app/modules/store-rating/services/index.ts","webpack:///./src/app/modules/store-rating/services/store-rating.service.ts","webpack:///./src/app/modules/store-rating/store-rating.module.ts","webpack:///./src/app/modules/store/controllers/index.ts","webpack:///./src/app/modules/store/controllers/store.controller.ts","webpack:///./src/app/modules/store/index.ts","webpack:///./src/app/modules/store/services/index.ts","webpack:///./src/app/modules/store/services/store.service.ts","webpack:///./src/app/modules/store/store.module.ts","webpack:///./src/app/modules/tag/controllers/index.ts","webpack:///./src/app/modules/tag/controllers/tag.controller.ts","webpack:///./src/app/modules/tag/index.ts","webpack:///./src/app/modules/tag/services/index.ts","webpack:///./src/app/modules/tag/services/tag.service.ts","webpack:///./src/app/modules/tag/tag.module.ts","webpack:///./src/app/modules/transaction/controllers/index.ts","webpack:///./src/app/modules/transaction/controllers/transaction.controller.ts","webpack:///./src/app/modules/transaction/index.ts","webpack:///./src/app/modules/transaction/services/index.ts","webpack:///./src/app/modules/transaction/services/transaction.service.ts","webpack:///./src/app/modules/transaction/transaction.module.ts","webpack:///./src/app/modules/user/controllers/index.ts","webpack:///./src/app/modules/user/controllers/user.controller.ts","webpack:///./src/app/modules/user/index.ts","webpack:///./src/app/modules/user/services/index.ts","webpack:///./src/app/modules/user/services/user.service.ts","webpack:///./src/app/modules/user/user.module.ts","webpack:///external commonjs \"@nestjs-modules/mailer\"","webpack:///external commonjs \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///external commonjs \"@nestjs/passport\"","webpack:///external commonjs \"@nestjs/platform-express\"","webpack:///external commonjs \"@nestjs/serve-static\"","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///external commonjs \"@nestjs/websockets\"","webpack:///external commonjs \"@ts-rest/core\"","webpack:///external commonjs \"@ts-rest/nest\"","webpack:///external commonjs \"bcrypt\"","webpack:///external commonjs \"cloudinary\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"multer\"","webpack:///external commonjs \"passport-jwt\"","webpack:///external commonjs \"passport-local\"","webpack:///external commonjs \"rxjs/operators\"","webpack:///external commonjs \"socket.io\"","webpack:///external commonjs \"socket.io-client\"","webpack:///external commonjs \"streamifier\"","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"typeorm\"","webpack:///external commonjs \"typeorm-extension\"","webpack:///external commonjs \"typeorm-naming-strategies\"","webpack:///external commonjs \"zod\"","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["export * from './lib';\r\n","export const app = {\r\n  title: 'Food Court Ordering App',\r\n  currencySymbol: '₱',\r\n};\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  ChangePasswordSchema,\r\n  LoginResponseSchema,\r\n  LoginSchema,\r\n  RegisterSchema,\r\n  TokenUserSchema,\r\n  UserSchema,\r\n  VerifyQuerySchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/auth`;\r\n\r\nexport const auth = initContract().router({\r\n  register: {\r\n    method: 'POST',\r\n    path: `${prefix}/register`,\r\n    body: RegisterSchema,\r\n    responses: {\r\n      201: UserSchema,\r\n    },\r\n    summary: 'Register user',\r\n  },\r\n  login: {\r\n    method: 'POST',\r\n    path: `${prefix}/login`,\r\n    body: LoginSchema,\r\n    responses: {\r\n      201: LoginResponseSchema,\r\n    },\r\n    summary: 'Login user',\r\n  },\r\n  verify: {\r\n    method: 'GET',\r\n    path: `${prefix}/verify`,\r\n    responses: {\r\n      200: TokenUserSchema,\r\n    },\r\n    summary: \"Get current user's details\",\r\n  },\r\n  changePassword: {\r\n    method: 'POST',\r\n    path: `${prefix}/change-password`,\r\n    body: ChangePasswordSchema,\r\n    responses: {\r\n      201: UserSchema,\r\n    },\r\n    summary: \"Change user's password\",\r\n  },\r\n  verifyEmail: {\r\n    method: 'GET',\r\n    path: `${prefix}/verify-email`,\r\n    query: VerifyQuerySchema,\r\n    responses: {\r\n      200: z.string(),\r\n    },\r\n    summary: \"Verify user's email\",\r\n  },\r\n  resendVerifyEmail: {\r\n    method: 'POST',\r\n    path: `${prefix}/resend-verify-email`,\r\n    body: z.string().nullable(),\r\n    responses: {\r\n      201: LoginResponseSchema,\r\n    },\r\n    summary: \"Resend user's email verification\",\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  CategorySchema,\r\n  CreateCategorySchema,\r\n  GetCategoriesOptionsSchema,\r\n  GetCategoriesResponseSchema,\r\n  UpdateCategorySchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/categories`;\r\n\r\nexport const category = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    responses: {\r\n      201: CategorySchema,\r\n    },\r\n    body: CreateCategorySchema,\r\n    summary: 'Create a category',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: CategorySchema,\r\n    },\r\n    summary: 'Get a category by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetCategoriesOptionsSchema,\r\n    responses: {\r\n      200: GetCategoriesResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of categories',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateCategorySchema,\r\n    responses: {\r\n      201: CategorySchema,\r\n    },\r\n    summary: 'Update category',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete category',\r\n  },\r\n});\r\n","import { user } from './user-controller.contract';\r\nimport { auth } from './auth-controller.contract';\r\nimport { transaction } from './transaction-controller.contract';\r\nimport { initContract } from '@ts-rest/core';\r\nimport { category } from './category-controller.contract';\r\nimport { store } from './store-controller.contract';\r\nimport { product } from './product-controller.contract';\r\nimport { order } from './order-controller.contract';\r\nimport { payment } from './payment-controller.contract';\r\nimport { role } from './role-controller.contract';\r\nimport { permission } from './permission-controller.contract';\r\nimport { statistic } from './statistic-controller.contract';\r\nimport { notification } from './notification-controller.contract';\r\nimport { storeRating } from './store-rating-controller.contract';\r\nimport { tag } from './tag-controller.contract';\r\nimport { qrcode } from './qrcode-controller.contract';\r\n\r\nexport const contract = initContract().router({\r\n  user,\r\n  auth,\r\n  transaction,\r\n  category,\r\n  store,\r\n  product,\r\n  order,\r\n  payment,\r\n  role,\r\n  permission,\r\n  statistic,\r\n  notification,\r\n  storeRating,\r\n  tag,\r\n  qrcode,\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  NotificationSchema,\r\n  GetNotificationsOptionsSchema,\r\n  GetNotificationsResponseSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/notifications`;\r\n\r\nexport const notification = initContract().router({\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: NotificationSchema,\r\n    },\r\n    summary: 'Get a notification by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetNotificationsOptionsSchema,\r\n    responses: {\r\n      200: GetNotificationsResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of notifications',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete notification',\r\n  },\r\n  read: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id/read`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      201: z.any().optional(),\r\n    },\r\n    summary: 'Read notification',\r\n  },\r\n  readAll: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/read-all`,\r\n    body: z.any().optional(),\r\n    responses: {\r\n      201: z.any().optional(),\r\n    },\r\n    summary: 'Read all notifications',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  OrderSchema,\r\n  CreateOrderSchema,\r\n  GetOrdersOptionsSchema,\r\n  GetOrdersResponseSchema,\r\n  UpdateOrderSchema,\r\n  UnrestrictedSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/orders`;\r\n\r\nexport const order = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    responses: {\r\n      201: OrderSchema,\r\n    },\r\n    body: CreateOrderSchema,\r\n    summary: 'Create a order',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: OrderSchema,\r\n    },\r\n    summary: 'Get a order by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetOrdersOptionsSchema,\r\n    responses: {\r\n      200: GetOrdersResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of orders',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    query: UnrestrictedSchema,\r\n    body: UpdateOrderSchema,\r\n    responses: {\r\n      201: OrderSchema,\r\n    },\r\n    summary: 'Update order',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete order',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  PaymentSchema,\r\n  CreatePaymentSchema,\r\n  GetPaymentsOptionsSchema,\r\n  GetPaymentsResponseSchema,\r\n  UpdatePaymentSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/payments`;\r\n\r\nexport const payment = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    responses: {\r\n      201: PaymentSchema,\r\n    },\r\n    body: CreatePaymentSchema,\r\n    summary: 'Create a payment',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: PaymentSchema,\r\n    },\r\n    summary: 'Get a payment by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetPaymentsOptionsSchema,\r\n    responses: {\r\n      200: GetPaymentsResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of payments',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdatePaymentSchema,\r\n    responses: {\r\n      201: PaymentSchema,\r\n    },\r\n    summary: 'Update payment',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete payment',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  PermissionSchema,\r\n  GetPermissionsResponseSchema,\r\n  GetPermissionsOptionsSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/permissions`;\r\n\r\nexport const permission = initContract().router({\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: PermissionSchema,\r\n    },\r\n    summary: 'Get a permission by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetPermissionsOptionsSchema,\r\n    responses: {\r\n      200: GetPermissionsResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of permissions',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  ProductSchema,\r\n  CreateProductSchema,\r\n  GetProductsOptionsSchema,\r\n  GetProductsResponseSchema,\r\n  UpdateProductSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/products`;\r\n\r\nexport const product = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    contentType: 'multipart/form-data',\r\n    responses: {\r\n      201: ProductSchema,\r\n    },\r\n    body: CreateProductSchema,\r\n    summary: 'Create a product',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: ProductSchema,\r\n    },\r\n    summary: 'Get a product by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetProductsOptionsSchema,\r\n    responses: {\r\n      200: GetProductsResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of products',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    contentType: 'multipart/form-data',\r\n    body: UpdateProductSchema,\r\n    responses: {\r\n      201: ProductSchema,\r\n    },\r\n    summary: 'Update product',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete product',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/qrcodes`;\r\n\r\nexport const qrcode = initContract().router({\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: z.object({\r\n      text: z.string(),\r\n      logo: z.string().optional(),\r\n    }),\r\n    responses: {\r\n      200: z.object({ qrcode: z.string() }),\r\n    },\r\n    summary: 'Generate qrcode',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  RoleSchema,\r\n  CreateRoleSchema,\r\n  GetRolesOptionsSchema,\r\n  GetRolesResponseSchema,\r\n  UpdateRoleSchema,\r\n  UpdateRolePermissionsSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/roles`;\r\n\r\nexport const role = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    responses: {\r\n      201: RoleSchema,\r\n    },\r\n    body: CreateRoleSchema,\r\n    summary: 'Create a role',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: RoleSchema,\r\n    },\r\n    summary: 'Get a role by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetRolesOptionsSchema,\r\n    responses: {\r\n      200: GetRolesResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of roles',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateRoleSchema,\r\n    responses: {\r\n      201: RoleSchema,\r\n    },\r\n    summary: 'Update role',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete role',\r\n  },\r\n  updatePermissions: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id/permissions`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateRolePermissionsSchema,\r\n    responses: {\r\n      201: RoleSchema,\r\n    },\r\n    summary: 'Update role permissions',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport { DashboardSchema, UnrestrictedSchema } from '../schemas';\r\n\r\nconst prefix = `/api/v1/statistics`;\r\n\r\nexport const statistic = initContract().router({\r\n  dashboard: {\r\n    method: 'GET',\r\n    path: `${prefix}/dashboard`,\r\n    query: UnrestrictedSchema,\r\n    responses: {\r\n      200: DashboardSchema,\r\n    },\r\n    summary: 'Get dashboard data',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  StoreSchema,\r\n  CreateStoreSchema,\r\n  GetStoresOptionsSchema,\r\n  GetStoresResponseSchema,\r\n  UpdateStoreSchema,\r\n  UpdateStoreConfigSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/stores`;\r\n\r\nexport const store = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    contentType: 'multipart/form-data',\r\n    responses: {\r\n      201: StoreSchema,\r\n    },\r\n    body: CreateStoreSchema,\r\n    summary: 'Create a store',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: StoreSchema,\r\n    },\r\n    summary: 'Get a store by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetStoresOptionsSchema,\r\n    responses: {\r\n      200: GetStoresResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of stores',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    contentType: 'multipart/form-data',\r\n    body: UpdateStoreSchema,\r\n    responses: {\r\n      201: StoreSchema,\r\n    },\r\n    summary: 'Update store',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete store',\r\n  },\r\n  updateConfig: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id/config`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateStoreConfigSchema,\r\n    responses: {\r\n      201: StoreSchema,\r\n    },\r\n    summary: 'Update store config',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  StoreRatingSchema,\r\n  CreateStoreRatingSchema,\r\n  GetStoreRatingsOptionsSchema,\r\n  GetStoreRatingsResponseSchema,\r\n  UpdateStoreRatingSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/store-ratings`;\r\n\r\nexport const storeRating = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    responses: {\r\n      201: StoreRatingSchema,\r\n    },\r\n    body: CreateStoreRatingSchema,\r\n    summary: 'Create a store rating',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: StoreRatingSchema,\r\n    },\r\n    summary: 'Get a store rating by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetStoreRatingsOptionsSchema,\r\n    responses: {\r\n      200: GetStoreRatingsResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of store ratings',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}`,\r\n    body: UpdateStoreRatingSchema,\r\n    responses: {\r\n      201: StoreRatingSchema,\r\n    },\r\n    summary: 'Update store rating',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete store rating',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  TagSchema,\r\n  CreateTagSchema,\r\n  GetTagsOptionsSchema,\r\n  GetTagsResponseSchema,\r\n  UpdateTagSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/tags`;\r\n\r\nexport const tag = initContract().router({\r\n  create: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    responses: {\r\n      201: TagSchema,\r\n    },\r\n    body: CreateTagSchema,\r\n    summary: 'Create a tag',\r\n  },\r\n  get: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: TagSchema,\r\n    },\r\n    summary: 'Get a tag by id',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetTagsOptionsSchema,\r\n    responses: {\r\n      200: GetTagsResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of tags',\r\n  },\r\n  update: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateTagSchema,\r\n    responses: {\r\n      201: TagSchema,\r\n    },\r\n    summary: 'Update tag',\r\n  },\r\n  delete: {\r\n    method: 'DELETE',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any().optional(),\r\n    responses: {\r\n      204: z.any().optional(),\r\n    },\r\n    summary: 'Delete tag',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  CreateTransactionSchema,\r\n  GetTransactionsOptionsSchema,\r\n  GetTransactionsResponseSchema,\r\n  PaySchema,\r\n  TransactionSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/transactions`;\r\n\r\nexport const transaction = initContract().router({\r\n  balance: {\r\n    method: 'GET',\r\n    path: `${prefix}/balance`,\r\n    responses: {\r\n      200: z.object({\r\n        balance: z.number(),\r\n      }),\r\n    },\r\n    summary: \"Get user's balance\",\r\n  },\r\n  generate: {\r\n    method: 'POST',\r\n    path: `${prefix}/generate`,\r\n    body: CreateTransactionSchema,\r\n    responses: {\r\n      201: TransactionSchema,\r\n    },\r\n    summary: 'Generate amount',\r\n  },\r\n  transfer: {\r\n    method: 'POST',\r\n    path: `${prefix}/transfer`,\r\n    body: CreateTransactionSchema,\r\n    responses: {\r\n      201: TransactionSchema,\r\n    },\r\n    summary: 'Transfer fund',\r\n  },\r\n  getAll: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: GetTransactionsOptionsSchema,\r\n    responses: {\r\n      200: GetTransactionsResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of transaction',\r\n  },\r\n  pay: {\r\n    method: 'POST',\r\n    path: `${prefix}/pay`,\r\n    body: PaySchema,\r\n    responses: {\r\n      201: TransactionSchema,\r\n    },\r\n    summary: 'Pay an order',\r\n  },\r\n});\r\n","import { initContract } from '@ts-rest/core';\r\nimport {\r\n  CreateUserSchema,\r\n  GetUsersResponseSchema,\r\n  PaginationOptionsSchema,\r\n  UpdateUserRoleSchema,\r\n  UpdateUserSchema,\r\n  UserSchema,\r\n} from '../schemas';\r\nimport { z } from 'zod';\r\n\r\nconst prefix = `/api/v1/users`;\r\n\r\nexport const user = initContract().router({\r\n  createUser: {\r\n    method: 'POST',\r\n    path: `${prefix}`,\r\n    responses: {\r\n      201: UserSchema,\r\n    },\r\n    body: CreateUserSchema,\r\n    summary: 'Create a user',\r\n  },\r\n  getUser: {\r\n    method: 'GET',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    responses: {\r\n      200: UserSchema,\r\n    },\r\n    summary: 'Get a user by id',\r\n  },\r\n  getUsers: {\r\n    method: 'GET',\r\n    path: `${prefix}`,\r\n    query: PaginationOptionsSchema,\r\n    responses: {\r\n      200: GetUsersResponseSchema,\r\n    },\r\n    summary: 'Get a paginated list of users',\r\n  },\r\n  updateUser: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateUserSchema,\r\n    responses: {\r\n      201: UserSchema,\r\n    },\r\n    summary: 'Update user',\r\n  },\r\n  assignRole: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id/assign-role`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateUserRoleSchema,\r\n    responses: {\r\n      201: UserSchema,\r\n    },\r\n    summary: 'Assign user role',\r\n  },\r\n  unassignRole: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id/unassign-role`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: UpdateUserRoleSchema,\r\n    responses: {\r\n      201: UserSchema,\r\n    },\r\n    summary: 'Assign user role',\r\n  },\r\n  assignAsStoreOwner: {\r\n    method: 'PATCH',\r\n    path: `${prefix}/:id/assign-as-store-owner`,\r\n    pathParams: z.object({\r\n      id: z.string().uuid(),\r\n    }),\r\n    body: z.any(),\r\n    responses: {\r\n      201: UserSchema,\r\n    },\r\n    summary: 'Assign user role',\r\n  },\r\n});\r\n","export class TransformCurrency {\r\n  to(v) {\r\n    return v * 100;\r\n  }\r\n  from(v) {\r\n    return v / 100;\r\n  }\r\n}\r\n","export const convertJsonToFormData = (\r\n  json: Record<string, any>,\r\n  formData = new FormData(),\r\n  parentKey = ''\r\n): FormData => {\r\n  for (const key in json) {\r\n    if (json[key]) {\r\n      const propName = parentKey ? `${parentKey}[${key}]` : key;\r\n      const value = json[key];\r\n\r\n      if (typeof value === 'object' && !(value instanceof File)) {\r\n        if (Array.isArray(value)) {\r\n          value.forEach((item: Record<string, any>, index: number) => {\r\n            const nestedPropName = `${propName}[${index}]`;\r\n            convertJsonToFormData(item, formData, nestedPropName); // Recursively convert nested array item\r\n          });\r\n        } else {\r\n          convertJsonToFormData(value, formData, propName); // Recursively convert nested object\r\n        }\r\n      } else {\r\n        formData.append(propName, value);\r\n      }\r\n    }\r\n  }\r\n\r\n  return formData;\r\n};\r\n\r\nexport const parseDataForm = (data: Record<string, any>) => {\r\n  for (const key of Object.keys(data)) {\r\n    if (typeof data[key] === 'string') {\r\n      data[key] = JSON.parse(data[key]);\r\n    } else if (typeof data[key] === 'object') {\r\n      parseDataForm(data);\r\n    }\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const cleanObject = (obj: Record<string, any>) => {\r\n  for (const key in obj) {\r\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n      cleanObject(obj[key]);\r\n    }\r\n    if ([undefined, null].includes(obj[key])) {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n","export * from './user.helper';\r\nexport * from './currency.helper';\r\nexport * from './form.helper';\r\nexport * from './notification.helper';\r\nexport * from './string.helper';\r\n","import { app } from '../constant';\r\nimport { Notification, NotificationType } from '../interfaces';\r\n\r\nexport const notificationMessage: Record<\r\n  NotificationType,\r\n  {\r\n    title: string;\r\n    description: string;\r\n    to: string;\r\n  }\r\n> = {\r\n  [NotificationType.AccountCreated]: {\r\n    title: 'Account Created',\r\n    description: 'You successfully created an account',\r\n    to: '/manage',\r\n  },\r\n  [NotificationType.AccountUpdated]: {\r\n    title: 'Account Updated',\r\n    description: 'You successfully updated your account',\r\n    to: '/manage',\r\n  },\r\n  [NotificationType.AmountReceived]: {\r\n    title: 'Amount Received',\r\n    description: `You received ${app.currencySymbol}:amount from :user`,\r\n    to: '/manage/wallet',\r\n  },\r\n  [NotificationType.AmountSent]: {\r\n    title: 'Amount Sent',\r\n    description: `You sent ${app.currencySymbol}:amount to :user`,\r\n    to: '/manage/wallet',\r\n  },\r\n  [NotificationType.OrderCreated]: {\r\n    title: 'Order Created',\r\n    description: 'Your order with reference id: :refId is created',\r\n    to: '/manage/orders/:orderId',\r\n  },\r\n  [NotificationType.OrderUpdated]: {\r\n    title: 'Order Updated',\r\n    description: 'Your order with reference id: :refId is updated',\r\n    to: '/manage/orders/:orderId',\r\n  },\r\n  [NotificationType.OrderDeleted]: {\r\n    title: 'Order Delete',\r\n    description: 'Your order with reference id: :refId is delete',\r\n    to: '/manage/orders',\r\n  },\r\n  [NotificationType.StoreOrderCreated]: {\r\n    title: 'Store Order Created',\r\n    description: 'An order with reference id: :refId is created',\r\n    to: '/manage/stores/:storeId',\r\n  },\r\n  [NotificationType.StoreOrderUpdated]: {\r\n    title: 'Store Order Updated',\r\n    description: 'You successfully updated order with reference id: :refId',\r\n    to: '/manage/stores/:storeId',\r\n  },\r\n  [NotificationType.StoreOrderDeleted]: {\r\n    title: 'Store Order Deleted',\r\n    description: 'You successfully deleted order with reference id: :refId',\r\n    to: '/manage/stores',\r\n  },\r\n};\r\n\r\nexport const getNotificationMessages = (notification: Notification) => {\r\n  const metadata = notification.metadata;\r\n\r\n  const messages = { ...notificationMessage[notification.type] };\r\n  messages.description = messages.description\r\n    .replace(':refId', metadata.order?.ref.toString() ?? '')\r\n    .replace(':user', metadata.user?.firstName ?? '')\r\n    .replace(':amount', metadata.amount?.toString() ?? '0');\r\n  messages.to = messages.to\r\n    .replace(':orderId', metadata.orderId ?? '')\r\n    .replace(':storeId', metadata.storeId ?? '');\r\n\r\n  return messages;\r\n};\r\n","export const isUUID = (str: string) => {\r\n  const uuidPattern =\r\n    /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\n  return uuidPattern.test(str);\r\n};\r\n\r\nexport const generateRandomColor = (text: string) => {\r\n  // Convert the text to a numerical value\r\n  let numericValue = 0;\r\n  for (let i = 0; i < text.length; i++) {\r\n    numericValue += text.charCodeAt(i);\r\n  }\r\n\r\n  // Generate RGB values based on the numerical value\r\n  const red = numericValue % 256;\r\n  const green = (numericValue * 2) % 256;\r\n  const blue = (numericValue * 3) % 256;\r\n\r\n  // Convert RGB values to hexadecimal\r\n  const redHex = red.toString(16).padStart(2, '0');\r\n  const greenHex = green.toString(16).padStart(2, '0');\r\n  const blueHex = blue.toString(16).padStart(2, '0');\r\n\r\n  // Return the generated color as a hexadecimal value\r\n  return `#${redHex}${greenHex}${blueHex}`;\r\n};\r\n\r\nexport const generatePastelColor = (text: string) => {\r\n  // Convert the text to a numerical value\r\n  let numericValue = 0;\r\n  for (let i = 0; i < text.length; i++) {\r\n    numericValue += text.charCodeAt(i);\r\n  }\r\n\r\n  // Generate pastel RGB values based on the numerical value\r\n  const hue = numericValue % 360;\r\n  const saturation = 50 + ((numericValue * 2) % 50); // Limit saturation to a range of 50-100\r\n  const lightness = 70 + ((numericValue * 3) % 10); // Limit lightness to a range of 70-80\r\n\r\n  // Convert HSL values to RGB\r\n  const { r, g, b } = hslToRgb(hue, saturation, lightness);\r\n\r\n  // Convert RGB values to hexadecimal\r\n  const redHex = Math.round(r).toString(16).padStart(2, '0');\r\n  const greenHex = Math.round(g).toString(16).padStart(2, '0');\r\n  const blueHex = Math.round(b).toString(16).padStart(2, '0');\r\n\r\n  // Return the generated color as a hexadecimal value\r\n  return `#${redHex}${greenHex}${blueHex}`;\r\n};\r\n\r\n// Helper function to convert HSL to RGB\r\nconst hslToRgb = (h: number, s: number, l: number) => {\r\n  const chroma = (1 - Math.abs(2 * (l / 100) - 1)) * (s / 100);\r\n  const x = chroma * (1 - Math.abs(((h / 60) % 2) - 1));\r\n  const m = l / 100 - chroma / 2;\r\n\r\n  let r = 0;\r\n  let g = 0;\r\n  let b = 0;\r\n\r\n  if (0 <= h && h < 60) {\r\n    r = chroma;\r\n    g = x;\r\n  } else if (60 <= h && h < 120) {\r\n    r = x;\r\n    g = chroma;\r\n  } else if (120 <= h && h < 180) {\r\n    g = chroma;\r\n    b = x;\r\n  } else if (180 <= h && h < 240) {\r\n    g = x;\r\n    b = chroma;\r\n  } else if (240 <= h && h < 300) {\r\n    r = x;\r\n    b = chroma;\r\n  } else if (300 <= h && h < 360) {\r\n    r = chroma;\r\n    b = x;\r\n  }\r\n\r\n  r = (r + m) * 255;\r\n  g = (g + m) * 255;\r\n  b = (b + m) * 255;\r\n\r\n  return { r, g, b };\r\n};\r\n\r\nexport const generateDarkColor = (text: string) => {\r\n  // Convert the text to a numerical value\r\n  let numericValue = 0;\r\n  for (let i = 0; i < text.length; i++) {\r\n    numericValue += text.charCodeAt(i);\r\n  }\r\n\r\n  // Generate dark RGB values based on the numerical value\r\n  const hue = numericValue % 360;\r\n  const saturation = 50 + ((numericValue * 2) % 50); // Limit saturation to a range of 50-100\r\n  const lightness = 20 + ((numericValue * 3) % 30); // Limit lightness to a range of 20-50\r\n\r\n  // Convert HSL values to RGB\r\n  const { r, g, b } = hslToRgb(hue, saturation, lightness);\r\n\r\n  // Convert RGB values to hexadecimal\r\n  const redHex = Math.round(r).toString(16).padStart(2, '0');\r\n  const greenHex = Math.round(g).toString(16).padStart(2, '0');\r\n  const blueHex = Math.round(b).toString(16).padStart(2, '0');\r\n\r\n  // Return the generated color as a hexadecimal value\r\n  return `#${redHex}${greenHex}${blueHex}`;\r\n};\r\n\r\nexport const generateColor = generateDarkColor;\r\n","import { TokenUser } from '../interfaces';\r\n\r\nexport const checkUserPermission = (user: TokenUser, permissions: string[]) => {\r\n  if (!user.roles.length) return false;\r\n\r\n  for (const role of user.roles) {\r\n    for (const permission of permissions) {\r\n      if (role.permissions?.find((code) => permission === code)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n","export * from './contracts';\r\nexport * from './schemas';\r\nexport * from './interfaces';\r\nexport * from './helpers';\r\nexport * from './constant';\r\n","import { z } from 'zod';\r\nimport {\r\n  ChangePasswordSchema,\r\n  LoginResponseSchema,\r\n  LoginSchema,\r\n  RegisterSchema,\r\n} from '../schemas';\r\n\r\nexport type Register = z.infer<typeof RegisterSchema>;\r\n\r\nexport type Login = z.infer<typeof LoginSchema>;\r\nexport type LoginResponse = z.infer<typeof LoginResponseSchema>;\r\n\r\nexport type ChangePassword = z.infer<typeof ChangePasswordSchema>;\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateCategorySchema,\r\n  GetCategoriesResponseSchema,\r\n  UpdateCategorySchema,\r\n  CategorySchema,\r\n  GetCategoriesOptionsSchema,\r\n} from '../schemas';\r\nimport { Store } from './store';\r\n\r\nexport type Category = z.infer<typeof CategorySchema> & {\r\n  store?: Store;\r\n};\r\n\r\nexport type CreateCategory = z.infer<typeof CreateCategorySchema>;\r\n\r\nexport type UpdateCategory = z.infer<typeof UpdateCategorySchema>;\r\n\r\nexport type GetCategoriesResponse = z.infer<typeof GetCategoriesResponseSchema>;\r\n\r\nexport type GetCategoriesOptions = z.infer<typeof GetCategoriesOptionsSchema>;\r\n\r\nexport interface ICategoryMetadata {\r\n  storeId?: string;\r\n}\r\n","export type ApiRouteResponse<T> = { status: number; body: T };\r\n","export enum Event {\r\n  NotificationStatus = 'notification:status',\r\n\r\n  StoreStatus = 'store:status',\r\n  StoreDashboard = 'store:dashboard',\r\n  StorePreparation = 'store:preparation',\r\n}\r\n","export * from './user';\r\nexport * from './auth';\r\nexport * from './pagination';\r\nexport * from './transaction';\r\nexport * from './permission';\r\nexport * from './category';\r\nexport * from './store';\r\nexport * from './product';\r\nexport * from './order';\r\nexport * from './payment';\r\nexport * from './role';\r\nexport * from './statistic';\r\nexport * from './notification';\r\nexport * from './store-rating';\r\nexport * from './tag';\r\nexport * from './common';\r\nexport * from './socket';\r\nexport * from './event';\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateNotificationSchema,\r\n  GetNotificationsOptionsSchema,\r\n  GetNotificationsResponseSchema,\r\n  NotificationSchema,\r\n  NotificationsCountSchema,\r\n} from '../schemas/notification';\r\n\r\nexport enum NotificationType {\r\n  StoreOrderCreated = 'store-order-created',\r\n  StoreOrderUpdated = 'store-order-updated',\r\n  StoreOrderDeleted = 'store-order-deleted',\r\n  OrderCreated = 'order-created',\r\n  OrderUpdated = 'order-updated',\r\n  OrderDeleted = 'order-deleted',\r\n  AccountCreated = 'account-created',\r\n  AccountUpdated = 'account-updated',\r\n  AmountSent = 'amount-sent',\r\n  AmountReceived = 'amount-received',\r\n}\r\n\r\nexport interface INotificationMetadata {\r\n  orderId?: string;\r\n  storeId?: string;\r\n  status?: string;\r\n  amount?: number;\r\n  userId?: string;\r\n}\r\n\r\nexport type Notification = z.infer<typeof NotificationSchema>;\r\n\r\nexport type CreateNotification = z.infer<typeof CreateNotificationSchema>;\r\n\r\nexport type GetNotificationsResponse = z.infer<\r\n  typeof GetNotificationsResponseSchema\r\n>;\r\n\r\nexport type GetNotificationsOptions = z.infer<\r\n  typeof GetNotificationsOptionsSchema\r\n>;\r\n\r\nexport type NotificationsCount = z.infer<typeof NotificationsCountSchema>;\r\n\r\nexport enum ENotificationEvent {\r\n  Status = 'status',\r\n}\r\n","import { z } from 'zod';\r\nimport {\r\n  OrderProductSchema,\r\n  CreateOrderSchema,\r\n  GetOrdersResponseSchema,\r\n  UpdateOrderSchema,\r\n  OrderSchema,\r\n  GetOrdersOptionsSchema,\r\n} from '../schemas';\r\n\r\nexport enum OrderStatus {\r\n  Pending = 'pending',\r\n  Cancelled = 'cancelled',\r\n  Preparing = 'preparing',\r\n  Ready = 'ready',\r\n  Completed = 'completed',\r\n}\r\n\r\nexport type OrderProduct = z.infer<typeof OrderProductSchema>;\r\n\r\nexport type Order = z.infer<typeof OrderSchema>;\r\n\r\nexport type CreateOrder = z.infer<typeof CreateOrderSchema>;\r\n\r\nexport type UpdateOrder = z.infer<typeof UpdateOrderSchema>;\r\n\r\nexport type GetOrdersResponse = z.infer<typeof GetOrdersResponseSchema>;\r\n\r\nexport type GetOrdersOptions = z.infer<typeof GetOrdersOptionsSchema>;\r\n","import { z } from 'zod';\r\nimport { PaginationOptionsSchema, PaginationResponseSchema } from '../schemas';\r\n\r\nexport type PaginationOptions = z.infer<typeof PaginationOptionsSchema>;\r\n\r\nexport type PaginationResponse = z.infer<typeof PaginationResponseSchema>;\r\n\r\nexport interface PaginationOrder {\r\n  by: string;\r\n  dir: 'ASC' | 'DESC';\r\n}\r\n","import { z } from 'zod';\r\nimport {\r\n  CreatePaymentSchema,\r\n  GetPaymentsResponseSchema,\r\n  UpdatePaymentSchema,\r\n  PaymentSchema,\r\n  GetPaymentsOptionsSchema,\r\n} from '../schemas';\r\n\r\nexport enum PaymentType {\r\n  Cash = 'cash',\r\n  Online = 'online',\r\n}\r\n\r\nexport type Payment = z.infer<typeof PaymentSchema>;\r\n\r\nexport type CreatePayment = z.infer<typeof CreatePaymentSchema>;\r\n\r\nexport type UpdatePayment = z.infer<typeof UpdatePaymentSchema>;\r\n\r\nexport type GetPaymentsResponse = z.infer<typeof GetPaymentsResponseSchema>;\r\n\r\nexport type GetPaymentsOptions = z.infer<typeof GetPaymentsOptionsSchema>;\r\n","import { z } from 'zod';\r\nimport {\r\n  GetPermissionsResponseSchema,\r\n  PermissionSchema,\r\n  GetPermissionsOptionsSchema,\r\n} from '../schemas';\r\n\r\nexport type Permission = z.infer<typeof PermissionSchema>;\r\n\r\nexport type GetPermissionsResponse = z.infer<\r\n  typeof GetPermissionsResponseSchema\r\n>;\r\n\r\nexport type GetPermissionsOptions = z.infer<typeof GetPermissionsOptionsSchema>;\r\n\r\nexport enum RolePermission {\r\n  AuthChangePassword = 'auth.change_password',\r\n\r\n  UserCreate = 'user.create',\r\n  UserGet = 'user.get',\r\n  UserUpdate = 'user.update',\r\n  UserUpdateUnrestricted = 'user.update.unrestricted',\r\n  UserGetAll = 'user.get_all',\r\n\r\n  TransactionBalance = 'transaction.balance',\r\n  TransactionGenerate = 'transaction.generate',\r\n  TransactionTransfer = 'transaction.transfer',\r\n  TransactionGetTransactions = 'transaction.get_transactions',\r\n\r\n  TagCreate = 'tag.create',\r\n  TagGet = 'tag.get',\r\n  TagUpdate = 'tag.update',\r\n  TagDelete = 'tag.delete',\r\n  TagGetAll = 'tag.get_all',\r\n\r\n  CategoryCreate = 'category.create',\r\n  CategoryGet = 'category.get',\r\n  CategoryUpdate = 'category.update',\r\n  CategoryDelete = 'category.delete',\r\n  CategoryGetAll = 'category.get_all',\r\n  CategoryGetAllUnrestricted = 'category.get_all_unrestricted',\r\n\r\n  StoreCreate = 'store.create',\r\n  StoreGet = 'store.get',\r\n  StoreUpdate = 'store.update',\r\n  StoreUpdateUnrestricted = 'store.update_unrestricted',\r\n  StoreDelete = 'store.delete',\r\n  StoreDeleteUnrestricted = 'store.delete_unrestricted',\r\n  StoreGetAll = 'store.get_all',\r\n  StoreGetAllUnrestricted = 'store.get_all_unrestricted',\r\n\r\n  ProductCreate = 'product.create',\r\n  ProductGet = 'product.get',\r\n  ProductUpdate = 'product.update',\r\n  ProductDelete = 'product.delete',\r\n  ProductGetAll = 'product.get_all',\r\n\r\n  OrderCreate = 'order.create',\r\n  OrderGet = 'order.get',\r\n  OrderUpdate = 'order.update',\r\n  OrderUpdateUnrestricted = 'order.update_unrestricted',\r\n  OrderDelete = 'order.delete',\r\n  OrderDeleteUnrestricted = 'order.delete_unrestricted',\r\n  OrderGetAll = 'order.get_all',\r\n  OrderGetAllUnrestricted = 'order.get_all_unrestricted',\r\n\r\n  PaymentCreate = 'payment.create',\r\n  PaymentGet = 'payment.get',\r\n  PaymentUpdate = 'payment.update',\r\n  PaymentDelete = 'payment.delete',\r\n  PaymentGetAll = 'payment.get_all',\r\n\r\n  RoleCreate = 'role.create',\r\n  RoleGet = 'role.get',\r\n  RoleUpdate = 'role.update',\r\n  RoleDelete = 'role.delete',\r\n  RoleGetAll = 'role.get_all',\r\n}\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateProductSchema,\r\n  GetProductsResponseSchema,\r\n  UpdateProductSchema,\r\n  GetProductsOptionsSchema,\r\n  NonCircularProductSchema,\r\n} from '../schemas';\r\nimport { Store } from './store';\r\n\r\nexport interface Product extends z.infer<typeof NonCircularProductSchema> {\r\n  store?: Store;\r\n}\r\n\r\nexport type CreateProduct = z.infer<typeof CreateProductSchema>;\r\n\r\nexport type UpdateProduct = z.infer<typeof UpdateProductSchema>;\r\n\r\nexport type GetProductsResponse = z.infer<typeof GetProductsResponseSchema>;\r\n\r\nexport type GetProductsOptions = z.infer<typeof GetProductsOptionsSchema>;\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateRoleSchema,\r\n  GetRolesResponseSchema,\r\n  UpdateRoleSchema,\r\n  RoleSchema,\r\n  GetRolesOptionsSchema,\r\n  UpdateRolePermissionsSchema,\r\n} from '../schemas';\r\n\r\nexport type Role = z.infer<typeof RoleSchema>;\r\n\r\nexport type CreateRole = z.infer<typeof CreateRoleSchema>;\r\n\r\nexport type UpdateRole = z.infer<typeof UpdateRoleSchema>;\r\n\r\nexport type UpdateRolePermissions = z.infer<typeof UpdateRolePermissionsSchema>;\r\n\r\nexport type GetRolesResponse = z.infer<typeof GetRolesResponseSchema>;\r\n\r\nexport type GetRolesOptions = z.infer<typeof GetRolesOptionsSchema>;\r\n","import { Socket } from 'socket.io-client';\r\n\r\nexport interface SocketExtended extends Socket {\r\n  handshake: {\r\n    query: Record<string, any>;\r\n  };\r\n}\r\n","import { z } from 'zod';\r\nimport { DashboardSchema } from '../schemas';\r\n\r\nexport type Dashboard = z.infer<typeof DashboardSchema>;\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateStoreRatingSchema,\r\n  GetStoreRatingsResponseSchema,\r\n  UpdateStoreRatingSchema,\r\n  StoreRatingSchema,\r\n  GetStoreRatingsOptionsSchema,\r\n} from '../schemas';\r\n\r\nexport type StoreRating = z.infer<typeof StoreRatingSchema>;\r\n\r\nexport type CreateStoreRating = z.infer<typeof CreateStoreRatingSchema>;\r\n\r\nexport type UpdateStoreRating = z.infer<typeof UpdateStoreRatingSchema>;\r\n\r\nexport type GetStoreRatingsResponse = z.infer<\r\n  typeof GetStoreRatingsResponseSchema\r\n>;\r\n\r\nexport type GetStoreRatingsOptions = z.infer<\r\n  typeof GetStoreRatingsOptionsSchema\r\n>;\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateStoreSchema,\r\n  GetStoresResponseSchema,\r\n  UpdateStoreSchema,\r\n  GetStoresOptionsSchema,\r\n  NonCircularStoreSchema,\r\n  CreateStoreConfigSchema,\r\n  UpdateStoreConfigSchema,\r\n  StoreConfigSchema,\r\n} from '../schemas';\r\nimport { Product } from './product';\r\nimport { Order } from './order';\r\n\r\nexport type CreateStoreConfig = z.infer<typeof CreateStoreConfigSchema>;\r\n\r\nexport type UpdateStoreConfig = z.infer<typeof UpdateStoreConfigSchema>;\r\n\r\nexport type StoreConfig = z.infer<typeof StoreConfigSchema>;\r\n\r\nexport interface Store extends z.infer<typeof NonCircularStoreSchema> {\r\n  products?: Product[];\r\n}\r\n\r\nexport type CreateStore = z.infer<typeof CreateStoreSchema>;\r\n\r\nexport type UpdateStore = z.infer<typeof UpdateStoreSchema>;\r\n\r\nexport type GetStoresResponse = z.infer<typeof GetStoresResponseSchema>;\r\n\r\nexport type GetStoresOptions = z.infer<typeof GetStoresOptionsSchema>;\r\n\r\nexport enum EStoreEvent {\r\n  Status = 'status',\r\n  Dashboard = 'dashboard',\r\n}\r\n\r\nexport type StoreStatusEvent = {\r\n  storeId: string;\r\n  preparing: Order[];\r\n  ready: Order[];\r\n};\r\n\r\nexport type StorePreparingEvent = {\r\n  storeId: string;\r\n  preparing: Order[];\r\n};\r\n\r\nexport type StoreDashboardEvent = {\r\n  storeId: string;\r\n  categoriesCount: number;\r\n  productsCount: number;\r\n  ordersCount: number;\r\n  paymentsCount: number;\r\n};\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateTagSchema,\r\n  GetTagsResponseSchema,\r\n  UpdateTagSchema,\r\n  TagSchema,\r\n  GetTagsOptionsSchema,\r\n} from '../schemas';\r\n\r\nexport type Tag = z.infer<typeof TagSchema>;\r\n\r\nexport type CreateTag = z.infer<typeof CreateTagSchema>;\r\n\r\nexport type UpdateTag = z.infer<typeof UpdateTagSchema>;\r\n\r\nexport type GetTagsResponse = z.infer<typeof GetTagsResponseSchema>;\r\n\r\nexport type GetTagsOptions = z.infer<typeof GetTagsOptionsSchema>;\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateTransactionSchema,\r\n  GetTransactionsOptionsSchema,\r\n  GetTransactionsResponseSchema,\r\n  PaySchema,\r\n  TransactionSchema,\r\n} from '../schemas';\r\n\r\nexport type CreateTransaction = z.infer<typeof CreateTransactionSchema>;\r\n\r\nexport type Transaction = z.infer<typeof TransactionSchema>;\r\n\r\nexport type GetTransactionsResponse = z.infer<\r\n  typeof GetTransactionsResponseSchema\r\n>;\r\n\r\nexport type GetTransactionsOptions = z.infer<\r\n  typeof GetTransactionsOptionsSchema\r\n>;\r\n\r\nexport type Pay = z.infer<typeof PaySchema>;\r\n","import { z } from 'zod';\r\nimport {\r\n  CreateUserSchema,\r\n  GetUsersResponseSchema,\r\n  TokenUserSchema,\r\n  UpdateUserSchema,\r\n  UpdateUserRoleSchema,\r\n  UserSchema,\r\n} from '../schemas';\r\n\r\nexport type User = z.infer<typeof UserSchema>;\r\n\r\nexport type CreateUser = z.infer<typeof CreateUserSchema>;\r\n\r\nexport type UpdateUser = z.infer<typeof UpdateUserSchema>;\r\n\r\nexport type CreateUserForm = {\r\n  firstName?: string;\r\n  lastName?: string;\r\n};\r\n\r\nexport type UpdateUserRole = z.infer<typeof UpdateUserRoleSchema>;\r\n\r\nexport type GetUsersResponse = z.infer<typeof GetUsersResponseSchema>;\r\n\r\nexport type TokenUser = z.infer<typeof TokenUserSchema>;\r\n","import { z } from 'zod';\r\nimport { PaginationResponseSchema } from './pagination';\r\nimport { CreateUserSchema, UserSchema } from './user';\r\n\r\nconst base = {\r\n  email: z.string().email(),\r\n  password: z.string(),\r\n};\r\n\r\nexport const AuthSchema = z.object({\r\n  id: z.string(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateAuthSchema = z.object(base);\r\n\r\nexport const RegisterSchema = CreateUserSchema.merge(CreateAuthSchema);\r\n\r\nexport const LoginSchema = z.object(base);\r\n\r\nexport const LoginResponseSchema = z.object({\r\n  accessToken: z.string(),\r\n  user: UserSchema,\r\n});\r\n\r\nexport const VerifyQuerySchema = z.object({\r\n  accessToken: z.string(),\r\n});\r\n\r\nexport const ChangePasswordSchema = z\r\n  .object({\r\n    currentPassword: z.string(),\r\n    newPassword: z.string(),\r\n    confirmPassword: z.string(),\r\n  })\r\n  .refine((data) => data.newPassword === data.confirmPassword, {\r\n    message: \"Passwords don't match\",\r\n    path: ['confirmPassword'],\r\n  });\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { NonCircularStoreSchema, StoreSchema } from './store';\r\n\r\nconst base = {\r\n  title: z.string(),\r\n  description: z.string(),\r\n  type: z.string(),\r\n};\r\n\r\nexport const NonCircularCategorySchema = z.object({\r\n  id: z.string(),\r\n  ...base,\r\n});\r\n\r\nexport const CategorySchema = z.object({\r\n  id: z.string(),\r\n  parent: NonCircularCategorySchema.optional(),\r\n  children: NonCircularCategorySchema.array().optional(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateCategorySchema = z.object({\r\n  ...base,\r\n  parent: z.string().uuid().optional(),\r\n  store: z.string().uuid().optional(),\r\n});\r\n\r\nexport const UpdateCategorySchema = z.object({\r\n  ...base,\r\n  parent: z.string().uuid().optional(),\r\n  store: z.string().uuid().optional(),\r\n});\r\n\r\nexport const GetCategoriesResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: CategorySchema.array() })\r\n);\r\n\r\nexport const GetCategoriesOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({\r\n    search: z.string().optional(),\r\n    type: z.string().optional(),\r\n    parent: z.string().uuid().optional(),\r\n    store: z.string().uuid().optional(),\r\n    isRoot: z.preprocess((a) => a && a === 'true', z.boolean().optional()),\r\n  })\r\n);\r\n","import { z } from 'zod';\r\n\r\nexport const CurrencySchema = z.number().max(1_000_000_000_000_000).min(0.01);\r\n","import { z } from 'zod';\r\n\r\nexport const FileSchema = z.object({\r\n  name: z.string(),\r\n  type: z.string(),\r\n  size: z.number().positive(),\r\n});\r\n","export * from './user';\r\nexport * from './auth';\r\nexport * from './pagination';\r\nexport * from './transaction';\r\nexport * from './category';\r\nexport * from './permission';\r\nexport * from './role';\r\nexport * from './store';\r\nexport * from './product';\r\nexport * from './order';\r\nexport * from './payment';\r\nexport * from './file';\r\nexport * from './unrestricted';\r\nexport * from './statistic';\r\nexport * from './notification';\r\nexport * from './store-rating';\r\nexport * from './tag';\r\nexport * from './common';\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { UserSchema } from './user';\r\nimport { NotificationType } from '../interfaces';\r\nimport { OrderSchema } from './order';\r\nimport { StoreSchema } from './store';\r\n\r\nconst base = {\r\n  type: z.enum([\r\n    NotificationType.AccountCreated,\r\n    NotificationType.AccountUpdated,\r\n    NotificationType.OrderCreated,\r\n    NotificationType.OrderUpdated,\r\n    NotificationType.OrderDeleted,\r\n    NotificationType.StoreOrderCreated,\r\n    NotificationType.StoreOrderUpdated,\r\n    NotificationType.StoreOrderDeleted,\r\n    NotificationType.AmountSent,\r\n    NotificationType.AmountReceived,\r\n  ]),\r\n  metadata: z.object({\r\n    orderId: z.string().uuid().optional(),\r\n    storeId: z.string().uuid().optional(),\r\n    status: z.string().uuid().optional(),\r\n    amount: z.number().optional(),\r\n    userId: z.string().uuid().optional(),\r\n    order: OrderSchema.optional(),\r\n    store: StoreSchema.optional(),\r\n    user: UserSchema.optional(),\r\n  }),\r\n};\r\n\r\nexport const NotificationSchema = z.object({\r\n  id: z.string(),\r\n  user: UserSchema,\r\n  opened: z.boolean(),\r\n  createdAt: z.date(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateNotificationSchema = z.object({\r\n  store: z.string(),\r\n  user: z.string().uuid(),\r\n  ...base,\r\n});\r\n\r\nexport const GetNotificationsResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: NotificationSchema.array() })\r\n);\r\n\r\nexport const GetNotificationsOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({\r\n    ids: z.string().array().optional(),\r\n    startDate: z.preprocess(\r\n      (a: string) => a && new Date(a),\r\n      z.date().optional()\r\n    ),\r\n    endDate: z.preprocess((a: string) => a && new Date(a), z.date().optional()),\r\n  })\r\n);\r\n\r\nexport const NotificationsCountSchema = z.object({\r\n  all: z.number(),\r\n  account: z.number(),\r\n  order: z.number(),\r\n  storeOrder: z.number(),\r\n  wallet: z.number(),\r\n  items: NotificationSchema.array(),\r\n});\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { StoreSchema } from './store';\r\nimport { UserSchema } from './user';\r\nimport { UnrestrictedSchema } from './unrestricted';\r\nimport { NonCircularPaymentSchema } from './payment';\r\n\r\nexport const OrderProductSchema = z.object({\r\n  title: z.string(),\r\n  description: z.string(),\r\n  price: z.number(),\r\n  count: z.number(),\r\n  image: z.string().optional(),\r\n});\r\n\r\nconst base = {\r\n  items: OrderProductSchema.array(),\r\n  status: z.string(),\r\n};\r\n\r\nexport const OrderSchema = z.object({\r\n  id: z.string(),\r\n  ref: z.number(),\r\n  store: StoreSchema.optional(),\r\n  user: UserSchema.optional(),\r\n  payment: NonCircularPaymentSchema,\r\n  createdAt: z.date(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateOrderSchema = z.object({\r\n  store: z.string(),\r\n  user: z.string().optional(),\r\n  ...base,\r\n});\r\n\r\nexport const UpdateOrderSchema = z.object({\r\n  store: z.string(),\r\n  user: z.string().optional(),\r\n  ...base,\r\n});\r\n\r\nexport const GetOrdersResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: OrderSchema.array() })\r\n);\r\n\r\nexport const GetOrdersOptionsSchema = PaginationOptionsSchema.merge(\r\n  z\r\n    .object({\r\n      ids: z.string().array().optional(),\r\n      storeIds: z.string().array().optional(),\r\n      isPaid: z.preprocess((a) => a === 'true', z.boolean().optional()),\r\n      userIds: z.string().array().optional(),\r\n      startDate: z.preprocess(\r\n        (a: string) => a && new Date(a),\r\n        z.date().optional()\r\n      ),\r\n      endDate: z.preprocess(\r\n        (a: string) => a && new Date(a),\r\n        z.date().optional()\r\n      ),\r\n      status: z.string().optional(),\r\n      ref: z.preprocess(\r\n        (a) => a && parseInt(z.string().parse(a)),\r\n        z.number().positive().optional()\r\n      ),\r\n    })\r\n    .merge(UnrestrictedSchema)\r\n);\r\n","import { z } from 'zod';\r\n\r\nexport const PaginationOptionsSchema = z.object({\r\n  search: z.string().optional(),\r\n  page: z.preprocess(\r\n    (a) => (a ? parseInt(z.string().parse(a)) : 1),\r\n    z.number().positive().optional()\r\n  ),\r\n  perPage: z.preprocess(\r\n    (a) => (a ? parseInt(z.string().parse(a)) : 5),\r\n    z.number().optional()\r\n  ),\r\n  orderBy: z.string().optional(),\r\n  orderDir: z.enum(['ASC', 'DESC']).optional(),\r\n});\r\n\r\nexport const PaginationResponseSchema = z.object({\r\n  count: z.number(),\r\n  page: z.number(),\r\n  perPage: z.number(),\r\n});\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { OrderSchema } from './order';\r\nimport { CurrencySchema } from './common';\r\n\r\nconst base = {\r\n  type: z.string(),\r\n  amountPaid: CurrencySchema,\r\n  totalCost: CurrencySchema,\r\n};\r\n\r\nexport const NonCircularPaymentSchema = z.object({\r\n  id: z.string(),\r\n  type: z.string(),\r\n  amountPaid: CurrencySchema,\r\n  totalCost: CurrencySchema,\r\n  change: CurrencySchema,\r\n  createdAt: z.date(),\r\n});\r\n\r\nexport const PaymentSchema = z.object({\r\n  id: z.string(),\r\n  order: z.lazy(() => OrderSchema),\r\n  change: CurrencySchema,\r\n  createdAt: z.date(),\r\n  ...base,\r\n});\r\n\r\nexport const CreatePaymentSchema = z\r\n  .object({\r\n    order: z.string(),\r\n    ...base,\r\n  })\r\n  .refine((obj) => obj.amountPaid >= obj.totalCost, {\r\n    message: 'Not enough amount',\r\n    path: ['amountPaid'],\r\n  });\r\n\r\nexport const UpdatePaymentSchema = z.object({\r\n  ...base,\r\n  order: z.string(),\r\n});\r\n\r\nexport const GetPaymentsResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: PaymentSchema.array() })\r\n);\r\n\r\nexport const GetPaymentsOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({\r\n    ids: z.string().array().optional(),\r\n  })\r\n);\r\n","import { z } from 'zod';\r\nimport { CategorySchema } from './category';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\n\r\nconst base = {\r\n  code: z.string(),\r\n  title: z.string(),\r\n  description: z.string(),\r\n  category: CategorySchema,\r\n};\r\n\r\nexport const PermissionSchema = z.object({\r\n  id: z.string(),\r\n  ...base,\r\n});\r\n\r\nexport const GetPermissionsResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: PermissionSchema.array() })\r\n);\r\n\r\nexport const GetPermissionsOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({})\r\n);\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { CategorySchema } from './category';\r\nimport { FileSchema } from './file';\r\nimport { StoreSchema } from './store';\r\nimport { CurrencySchema } from './common';\r\n\r\nconst base = {\r\n  title: z.string(),\r\n  description: z.string(),\r\n  price: CurrencySchema,\r\n};\r\n\r\nexport const NonCircularProductSchema = z.object({\r\n  id: z.string(),\r\n  category: CategorySchema,\r\n  categories: CategorySchema.array(),\r\n  image: z.string(),\r\n  ...base,\r\n});\r\n\r\nexport const ProductSchema = z.lazy(() =>\r\n  z.object({\r\n    id: z.string(),\r\n    store: StoreSchema,\r\n    category: CategorySchema,\r\n    categories: CategorySchema.array(),\r\n    image: z.string(),\r\n    ...base,\r\n  })\r\n);\r\n\r\nexport const CreateProductSchema = z.object({\r\n  ...base,\r\n  store: z.string(),\r\n  category: z.string(),\r\n  image: FileSchema.optional(),\r\n});\r\n\r\nexport const UpdateProductSchema = z.object({\r\n  ...base,\r\n  store: z.string(),\r\n  category: z.string(),\r\n  image: FileSchema.optional(),\r\n});\r\n\r\nexport const GetProductsResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: ProductSchema.array() })\r\n);\r\n\r\nexport const GetProductsOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({\r\n    store: z.string().optional(),\r\n    ids: z.string().array().optional(),\r\n    categoryIds: z.string().array().optional(),\r\n    minPrice: z.preprocess(\r\n      (a) => a && parseInt(z.string().parse(a)),\r\n      z.number().positive().optional()\r\n    ),\r\n    maxPrice: z.preprocess(\r\n      (a) => a && parseInt(z.string().parse(a)),\r\n      z.number().positive().optional()\r\n    ),\r\n  })\r\n);\r\n\r\nexport interface PriceRange {\r\n  minPrice: number;\r\n  maxPrice: number;\r\n}\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { PermissionSchema } from './permission';\r\n\r\nconst base = {\r\n  title: z.string(),\r\n  description: z.string(),\r\n};\r\n\r\nexport const RoleSchema = z.object({\r\n  id: z.string(),\r\n  permissions: PermissionSchema.array(),\r\n  createdAt: z.date(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateRoleSchema = z.object(base);\r\n\r\nexport const UpdateRoleSchema = z.object(base);\r\n\r\nexport const UpdateRolePermissionsSchema = z.object({\r\n  ids: z.string().array(),\r\n});\r\n\r\nexport const GetRolesResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: RoleSchema.array() })\r\n);\r\n\r\nexport const GetRolesOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({})\r\n);\r\n","import { z } from 'zod';\r\n\r\nexport const DashboardSchema = z.object({\r\n  myStoresCount: z.number(),\r\n  myOrdersCount: z.number(),\r\n  myStoresOrdersCount: z.number(),\r\n  storesCount: z.number().optional(),\r\n  ordersCount: z.number().optional(),\r\n  usersCount: z.number().optional(),\r\n  rolesCount: z.number().optional(),\r\n  categoriesCount: z.number().optional(),\r\n  circulatingAmount: z.number().optional(),\r\n});\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { UserSchema } from './user';\r\nimport { UnrestrictedSchema } from './unrestricted';\r\nimport { StoreSchema } from './store';\r\n\r\nconst base = {\r\n  rating: z.number().min(1).max(5),\r\n  comment: z.string().optional(),\r\n};\r\n\r\nexport const StoreRatingSchema = z.object({\r\n  id: z.string(),\r\n  user: UserSchema,\r\n  store: StoreSchema,\r\n  createdAt: z.date(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateStoreRatingSchema = z.object({\r\n  ...base,\r\n  user: z.string().uuid(),\r\n  store: z.string().uuid(),\r\n});\r\n\r\nexport const UpdateStoreRatingSchema = z.object({\r\n  ...base,\r\n  user: z.string().uuid(),\r\n  store: z.string().uuid(),\r\n});\r\n\r\nexport const GetStoreRatingsResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: StoreRatingSchema.array() })\r\n);\r\n\r\nexport const GetStoreRatingsOptionsSchema = PaginationOptionsSchema.merge(\r\n  z\r\n    .object({\r\n      store: z.string().optional(),\r\n      user: z.string().optional(),\r\n    })\r\n    .merge(UnrestrictedSchema)\r\n);\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { UserSchema } from './user';\r\nimport { FileSchema } from './file';\r\nimport { UnrestrictedSchema } from './unrestricted';\r\nimport { TagSchema } from './tag';\r\nimport { NonCircularProductSchema, ProductSchema } from './product';\r\nimport { Product, Store } from '../interfaces';\r\n\r\nconst base = {\r\n  title: z.string(),\r\n  description: z.string(),\r\n};\r\n\r\nexport const CreateStoreConfigSchema = z.object({\r\n  headerTextColor: z.string(),\r\n  primaryColor: z.string(),\r\n  secondaryColor: z.string(),\r\n});\r\n\r\nexport const UpdateStoreConfigSchema = z.object({\r\n  headerTextColor: z.string(),\r\n  primaryColor: z.string(),\r\n  secondaryColor: z.string(),\r\n});\r\n\r\nexport const StoreConfigSchema = z.object({\r\n  headerTextColor: z.string(),\r\n  primaryColor: z.string(),\r\n  secondaryColor: z.string(),\r\n});\r\n\r\nexport const NonCircularStoreSchema = z.object({\r\n  id: z.string(),\r\n  owner: UserSchema,\r\n  image: z.string().optional(),\r\n  rating: z.number(),\r\n  tags: TagSchema.array(),\r\n  config: StoreConfigSchema.optional(),\r\n  ...base,\r\n});\r\n\r\nexport const StoreSchema: z.ZodType<Store> = z.lazy(() =>\r\n  z.object({\r\n    id: z.string(),\r\n    image: z.string().optional(),\r\n    rating: z.number(),\r\n    owner: UserSchema,\r\n    tags: TagSchema.array(),\r\n    products: ProductSchema.array(),\r\n    config: StoreConfigSchema.optional(),\r\n    ...base,\r\n  })\r\n);\r\n\r\nexport const CreateStoreSchema = z.object({\r\n  ...base,\r\n  owner: z.string(),\r\n  image: FileSchema.optional(),\r\n  tags: z.string().array(),\r\n});\r\n\r\nexport const UpdateStoreSchema = z.object({\r\n  ...base,\r\n  owner: z.string(),\r\n  image: FileSchema.optional(),\r\n  tags: z.string().array(),\r\n  config: StoreConfigSchema.optional(),\r\n});\r\n\r\nexport const GetStoresResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: StoreSchema.array() })\r\n);\r\n\r\nexport const GetStoresOptionsSchema = PaginationOptionsSchema.merge(\r\n  z\r\n    .object({\r\n      search: z.string().uuid().optional(),\r\n      owner: z.string().uuid().optional(),\r\n      tags: z.string().uuid().array().optional(),\r\n    })\r\n    .merge(UnrestrictedSchema)\r\n);\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\n\r\nconst base = {\r\n  title: z.string(),\r\n  type: z.string(),\r\n};\r\n\r\nexport const TagSchema = z.object({\r\n  id: z.string(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateTagSchema = z.object({\r\n  ...base,\r\n});\r\n\r\nexport const UpdateTagSchema = z.object({\r\n  ...base,\r\n});\r\n\r\nexport const GetTagsResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: TagSchema.array() })\r\n);\r\n\r\nexport const GetTagsOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({\r\n    type: z.string().optional(),\r\n  })\r\n);\r\n","import { z } from 'zod';\r\nimport {\r\n  PaginationOptionsSchema,\r\n  PaginationResponseSchema,\r\n} from './pagination';\r\nimport { UserSchema } from './user';\r\nimport { CurrencySchema } from './common';\r\n\r\nconst base = {\r\n  receiver: z.string().length(13),\r\n  amount: CurrencySchema,\r\n};\r\n\r\nexport const TransactionSchema = z.object({\r\n  id: z.string(),\r\n  sender: UserSchema,\r\n  receiver: UserSchema,\r\n  amount: CurrencySchema,\r\n});\r\n\r\nexport const CreateTransactionSchema = z.object(base);\r\n\r\nexport const GetTransactionsResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({\r\n    list: TransactionSchema.merge(\r\n      z.object({\r\n        receiver: UserSchema.optional(),\r\n        sender: UserSchema.optional(),\r\n        createdAt: z.date(),\r\n      })\r\n    ).array(),\r\n  })\r\n);\r\n\r\nexport const GetTransactionsOptionsSchema = PaginationOptionsSchema.merge(\r\n  z.object({\r\n    ids: z.string().array().optional(),\r\n    userIds: z.string().array().optional(),\r\n  })\r\n);\r\n\r\nexport const PaySchema = z.object({\r\n  orderId: z.string(),\r\n});\r\n","import { z } from 'zod';\r\n\r\nexport const UnrestrictedSchema = z.object({\r\n  unrestricted: z.preprocess((a) => a && a === 'true', z.boolean().optional()),\r\n});\r\n","import { z } from 'zod';\r\nimport { PaginationResponseSchema } from './pagination';\r\nimport { RoleSchema } from './role';\r\n\r\nconst base = {\r\n  firstName: z.string(),\r\n  lastName: z.string(),\r\n};\r\n\r\nexport const UserSchema = z.object({\r\n  id: z.string(),\r\n  roles: RoleSchema.array(),\r\n  createdAt: z.date(),\r\n  uniqueCode: z.string(),\r\n  ...base,\r\n});\r\n\r\nexport const TokenUserSchema = z.object({\r\n  id: z.string(),\r\n  roles: RoleSchema.merge(\r\n    z.object({ permissions: z.string().array() })\r\n  ).array(),\r\n  createdAt: z.date(),\r\n  uniqueCode: z.string(),\r\n  ...base,\r\n});\r\n\r\nexport const CreateUserSchema = z.object(base);\r\n\r\nexport const UpdateUserSchema = z.object(base);\r\n\r\nexport const UpdateUserRoleSchema = z.object({ roleId: z.string() });\r\n\r\nexport const GetUsersResponseSchema = PaginationResponseSchema.merge(\r\n  z.object({ list: UserSchema.array() })\r\n);\r\n","import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport {\n  UserModule,\n  AuthModule,\n  MailModule,\n  TransactionModule,\n  CategoryModule,\n  StoreModule,\n  ProductModule,\n  OrderModule,\n  PaymentModule,\n  RoleModule,\n  StatisticModule,\n  PermissionModule,\n  NotificationModule,\n  StoreRatingModule,\n  TagModule,\n} from './modules';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport configuration from './config/configuration';\nimport { DatabaseModule } from './database';\nimport express from 'express';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { FileModule } from './file';\nimport { EventModule } from './event';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    ServeStaticModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => [\n        {\n          rootPath: join(\n            __dirname,\n            configService.get<string>('environment') === 'development'\n              ? '../../../dist/packages'\n              : '../',\n            'web'\n          ),\n        },\n      ],\n      inject: [ConfigService],\n    }),\n    DatabaseModule,\n    FileModule,\n    MailModule,\n    UserModule,\n    AuthModule,\n    TransactionModule,\n    CategoryModule,\n    StoreModule,\n    ProductModule,\n    OrderModule,\n    PaymentModule,\n    RoleModule,\n    PermissionModule,\n    StatisticModule,\n    NotificationModule,\n    StoreRatingModule,\n    TagModule,\n    EventModule,\n  ],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(express.static(configuration().multer.dest))\n      .forRoutes('/files');\n  }\n}\n","import entities from '../database/entities';\r\nimport seeds from '../database/seeds';\r\nimport factories from '../database/factories';\r\nimport { SnakeNamingStrategy } from 'typeorm-naming-strategies';\r\nimport { resolve } from 'path';\r\n\r\nexport default () => {\r\n  const isProduction = process.env.ENVIRONMENT === 'production';\r\n\r\n  return {\r\n    environment: process.env.ENVIRONMENT ?? 'development',\r\n    protocol: process.env.PROTOCOL ?? 'http',\r\n    host: process.env.HOST ?? 'localhost',\r\n    port: process.env.PORT ? parseInt(process.env.PORT, 10) : 3000,\r\n    database: {\r\n      type: process.env.DATABASE_TYPE as 'postgres',\r\n      host: process.env.DATABASE_HOST ?? 'localhost',\r\n      port: process.env.DATABASE_PORT\r\n        ? parseInt(process.env.DATABASE_PORT, 10)\r\n        : 5432,\r\n      username: process.env.DATABASE_USERNAME ?? 'postgres',\r\n      password: process.env.DATABASE_PASSWORD ?? 'password',\r\n      database: process.env.DATABASE_NAME ?? 'users_ms',\r\n      entities,\r\n      migrations: [resolve(__dirname, '../database/migrations/*.{ts,js}')],\r\n      seeds,\r\n      factories,\r\n      autoLoadEntities: true,\r\n      synchronize: false,\r\n      namingStrategy: new SnakeNamingStrategy(),\r\n      // logging: true,\r\n      ssl: isProduction ? { rejectUnauthorized: false } : false,\r\n    },\r\n    jwt: {\r\n      secret: process.env.JWT_SECRET ?? 'supersecret',\r\n      signOptions: { expiresIn: process.env.JWT_EXPIRES_IN ?? '60s' },\r\n    },\r\n    mail: {\r\n      transport: {\r\n        host: process.env.MAIL_HOST ?? 'smtp.gmail.com',\r\n        port: process.env.MAIL_PORT ?? 465,\r\n        secure: process.env.MAIL_SECURE === 'true',\r\n        auth: {\r\n          user: process.env.MAIL_USERNAME ?? '',\r\n          pass: process.env.MAIL_PASSWORD ?? '',\r\n        },\r\n      },\r\n      from: process.env.MAIL_FROM ?? 'admin@email.com',\r\n    },\r\n    multer: {\r\n      dest: resolve(\r\n        __dirname,\r\n        (isProduction ? './' : '../../../packages/api/') + 'storage/uploads'\r\n      ),\r\n    },\r\n    cloudinary: {\r\n      cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\r\n      api_key: process.env.CLOUDINARY_API_KEY,\r\n      api_secret: process.env.CLOUDINARY_API_SECRET,\r\n      secure: process.env.CLOUDINARY_SECURE,\r\n    },\r\n  };\r\n};\r\n","export const roles = [\r\n  {\r\n    title: 'Superadmin',\r\n    description: 'Root user of the system',\r\n  },\r\n  {\r\n    title: 'User',\r\n    description: 'User of the system',\r\n  },\r\n  {\r\n    title: 'Store Owner',\r\n    description: 'User that owns a store',\r\n  },\r\n];\r\n\r\nconst AuthPermissions = {\r\n  title: 'Auth',\r\n  description: 'Auth related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'auth.change_password',\r\n      title: 'Change Password',\r\n      description: 'Allow to change password',\r\n      roles: ['Superadmin', 'User'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst UserPermissions = {\r\n  title: 'User',\r\n  description: 'User related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'user.create',\r\n      title: 'Create User',\r\n      description: 'Allow to create user',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'user.get',\r\n      title: 'Get User',\r\n      description: 'Allow to get user',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'user.get_all',\r\n      title: 'Get All Users',\r\n      description: 'Allow to get all users',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'user.update',\r\n      title: 'Update User',\r\n      description: 'Allow to update user',\r\n      roles: ['Superadmin', 'User'],\r\n    },\r\n    {\r\n      code: 'user.update.unrestricted',\r\n      title: 'Update User Unrestricted',\r\n      description: 'Allow to update all user',\r\n      roles: ['Superadmin'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst TransactionPermissions = {\r\n  title: 'Transaction',\r\n  description: 'Transaction related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'transaction.balance',\r\n      title: 'Balance',\r\n      description: 'Allow to check balance',\r\n      roles: ['Superadmin', 'User'],\r\n    },\r\n    {\r\n      code: 'transaction.generate',\r\n      title: 'Generate',\r\n      description: 'Allow to generate money',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'transaction.transfer',\r\n      title: 'Transfer',\r\n      description: 'Allow to transfer money',\r\n      roles: ['Superadmin', 'User'],\r\n    },\r\n    {\r\n      code: 'transaction.get_transactions',\r\n      title: 'Get All Transactions',\r\n      description: 'Allow to get all transactions',\r\n      roles: ['Superadmin', 'User'],\r\n    },\r\n    {\r\n      code: 'transaction.get_transactions_unrestricted',\r\n      title: 'Get All Transactions Unrestricted',\r\n      description: 'Allow to get all transactions of all users',\r\n      roles: ['Superadmin'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst CategoryPermissions = {\r\n  title: 'Category',\r\n  description: 'Category related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'category.create',\r\n      title: 'Create Category',\r\n      description: 'Allow to create category',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'category.get',\r\n      title: 'Get Category',\r\n      description: 'Allow to get category',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'category.get_all',\r\n      title: 'Get All Categories',\r\n      description: 'Allow to get all categories',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'category.get_all_unrestricted',\r\n      title: 'Get All Categories',\r\n      description: 'Allow to get all categories unrestricted',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'category.update',\r\n      title: 'Update Category',\r\n      description: 'Allow to update category',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'category.delete',\r\n      title: 'Delete Category',\r\n      description: 'Allow to delete category',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst TagPermissions = {\r\n  title: 'Tag',\r\n  description: 'Tag related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'tag.create',\r\n      title: 'Create Tag',\r\n      description: 'Allow to create tag',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'tag.get',\r\n      title: 'Get Tag',\r\n      description: 'Allow to get tag',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'tag.get_all',\r\n      title: 'Get All Tags',\r\n      description: 'Allow to get all tags',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'tag.update',\r\n      title: 'Update Tag',\r\n      description: 'Allow to update tag',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'tag.delete',\r\n      title: 'Delete Tag',\r\n      description: 'Allow to delete tag',\r\n      roles: ['Superadmin'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst StorePermissions = {\r\n  title: 'Store',\r\n  description: 'Store related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'store.create',\r\n      title: 'Create Store',\r\n      description: 'Allow to create store',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'store.get',\r\n      title: 'Get Store',\r\n      description: 'Allow to get store',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'store.get_all',\r\n      title: 'Get All Stores',\r\n      description: 'Allow to get all stores',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'store.get_all_unrestricted',\r\n      title: 'Get All Stores Unrestricted',\r\n      description: 'Allow to get all stores of all users',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'store.update',\r\n      title: 'Update Store',\r\n      description: 'Allow to update store',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'store.update_unrestricted',\r\n      title: 'Update Store Unrestricted',\r\n      description: 'Allow to update store unrestricted',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'store.delete',\r\n      title: 'Delete Store',\r\n      description: 'Allow to delete store',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'store.delete_unrestricted',\r\n      title: 'Delete Store Unrestricted',\r\n      description: 'Allow to delete store unrestricted',\r\n      roles: ['Superadmin'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst ProductPermissions = {\r\n  title: 'Product',\r\n  description: 'Product related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'product.create',\r\n      title: 'Create Product',\r\n      description: 'Allow to create product',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'product.get',\r\n      title: 'Get Product',\r\n      description: 'Allow to get product',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'product.get_all',\r\n      title: 'Get All Products',\r\n      description: 'Allow to get all products',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'product.update',\r\n      title: 'Update Product',\r\n      description: 'Allow to update product',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'product.delete',\r\n      title: 'Delete Product',\r\n      description: 'Allow to delete product',\r\n      roles: ['Superadmin', 'Store Owner'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst OrderPermissions = {\r\n  title: 'Order',\r\n  description: 'Order related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'order.create',\r\n      title: 'Create Order',\r\n      description: 'Allow to create order',\r\n      roles: ['Superadmin', 'User'],\r\n    },\r\n    {\r\n      code: 'order.get',\r\n      title: 'Get Order',\r\n      description: 'Allow to get order',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'order.get_all',\r\n      title: 'Get All Orders',\r\n      description: 'Allow to get all orders',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'order.get_all_unrestricted',\r\n      title: 'Get All Orders Unrestricted',\r\n      description: 'Allow to get all orders unrestricted',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'order.update',\r\n      title: 'Update Order',\r\n      description: 'Allow to update order',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'order.update_unrestricted',\r\n      title: 'Update Order Unrestricted',\r\n      description: 'Allow to update order unrestricted',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'order.delete',\r\n      title: 'Delete Order',\r\n      description: 'Allow to delete order',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'order.delete_unrestricted',\r\n      title: 'Delete Order Unrestricted',\r\n      description: 'Allow to delete order unrestricted',\r\n      roles: ['Superadmin'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst PaymentPermissions = {\r\n  title: 'Payment',\r\n  description: 'Payment related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'payment.create',\r\n      title: 'Create Payment',\r\n      description: 'Allow to create payment',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'payment.get',\r\n      title: 'Get Payment',\r\n      description: 'Allow to get payment',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'payment.get_all',\r\n      title: 'Get All Payments',\r\n      description: 'Allow to get all payments',\r\n      roles: ['Superadmin', 'User', 'Store Owner'],\r\n    },\r\n    {\r\n      code: 'payment.update',\r\n      title: 'Update Payment',\r\n      description: 'Allow to update payment',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'payment.delete',\r\n      title: 'Delete Payment',\r\n      description: 'Allow to delete payment',\r\n      roles: ['Superadmin'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst RolePermissions = {\r\n  title: 'Role',\r\n  description: 'Role related permissions',\r\n  permissions: [\r\n    {\r\n      code: 'role.create',\r\n      title: 'Create Role',\r\n      description: 'Allow to create role',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'role.get',\r\n      title: 'Get Role',\r\n      description: 'Allow to get role',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'role.get_all',\r\n      title: 'Get All Roles',\r\n      description: 'Allow to get all categories',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'role.update',\r\n      title: 'Update Role',\r\n      description: 'Allow to update role',\r\n      roles: ['Superadmin'],\r\n    },\r\n    {\r\n      code: 'role.delete',\r\n      title: 'Delete Role',\r\n      description: 'Allow to delete role',\r\n      roles: ['Superadmin'],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const permissions = [\r\n  AuthPermissions,\r\n  UserPermissions,\r\n  TransactionPermissions,\r\n  CategoryPermissions,\r\n  TagPermissions,\r\n  StorePermissions,\r\n  ProductPermissions,\r\n  OrderPermissions,\r\n  PaymentPermissions,\r\n  RolePermissions,\r\n];\r\n","import {\r\n  OnGatewayConnection,\r\n  OnGatewayDisconnect,\r\n  WebSocketGateway,\r\n  WebSocketServer,\r\n} from '@nestjs/websockets';\r\nimport { SocketExtended, Event } from '@nx-monorepo-template/global';\r\nimport { Server } from 'socket.io';\r\n\r\n@WebSocketGateway({\r\n  cors: '*',\r\n})\r\nexport abstract class BaseGateway\r\n  implements OnGatewayConnection, OnGatewayDisconnect\r\n{\r\n  @WebSocketServer()\r\n  protected server: Server;\r\n\r\n  public async handleConnection(client: SocketExtended) {\r\n    console.log('connected', (await this.server.fetchSockets()).length);\r\n  }\r\n\r\n  public async handleDisconnect(client: SocketExtended) {\r\n    console.log('connected', (await this.server.fetchSockets()).length);\r\n  }\r\n\r\n  get sockets() {\r\n    return this.server.sockets.sockets as unknown as Map<\r\n      string,\r\n      SocketExtended\r\n    >;\r\n  }\r\n\r\n  getSocket(userId: string): SocketExtended | undefined {\r\n    return Array.from(this.sockets).find(\r\n      ([, socket]) => socket.handshake.query.userId === userId\r\n    )?.[1];\r\n  }\r\n\r\n  emitToUser(userId: string, event: Event, any) {\r\n    this.sockets.forEach((socket) => {\r\n      if (socket.handshake.query.userId === userId) {\r\n        socket.emit(event, any);\r\n      }\r\n    });\r\n  }\r\n\r\n  emitToUsers(userIds: string[], event: Event, any) {\r\n    this.sockets.forEach((socket) => {\r\n      if (userIds.includes(socket.handshake.query.userId)) {\r\n        socket.emit(event, any);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { PaginationOptions, cleanObject } from '@nx-monorepo-template/global';\r\nimport {\r\n  DataSource,\r\n  DeepPartial,\r\n  EntityTarget,\r\n  FindManyOptions,\r\n  FindOptionsOrder,\r\n  FindOptionsRelations,\r\n  FindOptionsWhere,\r\n  In,\r\n  ObjectLiteral,\r\n  Raw,\r\n  Repository,\r\n} from 'typeorm';\r\n\r\n@Injectable()\r\nexport class BaseRepository<\r\n  Entity extends ObjectLiteral,\r\n  C = Record<string, any>,\r\n  U = Record<string, any>,\r\n  F extends PaginationOptions = PaginationOptions\r\n> extends Repository<Entity> {\r\n  constructor(\r\n    protected entity: EntityTarget<Entity>,\r\n    private dataSource: DataSource\r\n  ) {\r\n    super(entity, dataSource.createEntityManager());\r\n  }\r\n\r\n  protected searchFields(): string[] {\r\n    return [];\r\n  }\r\n\r\n  protected mapRelations(): Record<\r\n    string,\r\n    BaseRepository<unknown> | ((input: C | U) => any)\r\n  > {\r\n    return undefined;\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<Entity> {\r\n    return {};\r\n  }\r\n\r\n  protected modifyWhere(\r\n    conditions: FindOptionsWhere<Entity>\r\n  ): FindOptionsWhere<Entity> | FindOptionsWhere<Entity>[] {\r\n    return conditions;\r\n  }\r\n\r\n  protected async modifyResult(item: Entity): Promise<any> {\r\n    return item;\r\n  }\r\n\r\n  private mapWhere(input: Record<string, any>) {\r\n    const reducer = (curr, key) => ({\r\n      ...curr,\r\n      [key]: this.relations()[key]\r\n        ? { id: Array.isArray(input[key]) ? In(input[key]) : input[key] }\r\n        : input[key],\r\n    });\r\n\r\n    return Object.keys(input).reduce(reducer, {});\r\n  }\r\n\r\n  async paginated(options?: F) {\r\n    const {\r\n      search,\r\n      page = 1,\r\n      perPage = 10,\r\n      orderBy,\r\n      orderDir = 'ASC',\r\n      ...otherOptions\r\n    } = options;\r\n    const mappedWhere = this.mapWhere(otherOptions);\r\n    const findAndCountOptions: FindManyOptions<Entity> = {\r\n      ...otherOptions,\r\n      relations: this.relations(),\r\n      where: this.modifyWhere(mappedWhere),\r\n    };\r\n\r\n    if (search) {\r\n      findAndCountOptions.where = this.searchFields().map((key) => ({\r\n        ...this.modifyWhere(mappedWhere),\r\n        [key]: Raw((alias) => `LOWER(${alias}) LIKE LOWER(:value)`, {\r\n          value: `%${search}%`,\r\n        }),\r\n      })) as FindOptionsWhere<Entity>[];\r\n    }\r\n\r\n    if (perPage > -1) {\r\n      findAndCountOptions.take = perPage;\r\n      findAndCountOptions.skip = (page - 1) * perPage;\r\n    }\r\n\r\n    const convertStringToObject = (str: string, dir: string) => {\r\n      const keys = str.split('.');\r\n      const result = {};\r\n\r\n      let currentObj = result;\r\n      for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        currentObj[key] = i === keys.length - 1 ? dir : {};\r\n        currentObj = currentObj[key];\r\n      }\r\n\r\n      return result;\r\n    };\r\n\r\n    if (orderBy) {\r\n      findAndCountOptions.order = convertStringToObject(\r\n        orderBy,\r\n        orderDir\r\n      ) as unknown as FindOptionsOrder<Entity>;\r\n    }\r\n\r\n    const [list, count] = await this.findAndCount(findAndCountOptions);\r\n\r\n    return {\r\n      list: await Promise.all(\r\n        list.map(async (item) => await this.modifyResult(item))\r\n      ),\r\n      count,\r\n      page,\r\n      perPage,\r\n    };\r\n  }\r\n\r\n  async get(\r\n    where: FindOptionsWhere<Entity> | FindOptionsWhere<Entity>[]\r\n  ): Promise<Entity> {\r\n    return this.modifyResult(\r\n      await this.findOne({\r\n        where,\r\n      })\r\n    );\r\n  }\r\n\r\n  async getWithRelations(\r\n    where: FindOptionsWhere<Entity> | FindOptionsWhere<Entity>[]\r\n  ): Promise<Entity> {\r\n    return this.modifyResult(\r\n      await this.findOne({\r\n        where,\r\n        relations: this.relations(),\r\n      })\r\n    );\r\n  }\r\n\r\n  async getById(id: string): Promise<Entity> {\r\n    return this.modifyResult(\r\n      await this.findOne({\r\n        where: { id: id as any },\r\n      })\r\n    );\r\n  }\r\n\r\n  async getByIdWithRelations(id: string): Promise<Entity> {\r\n    return this.modifyResult(\r\n      await this.findOne({\r\n        where: { id: id as any },\r\n        relations: this.relations(),\r\n      })\r\n    );\r\n  }\r\n\r\n  async getManyByIds(ids: string[]) {\r\n    const items = await this.find({\r\n      where: { id: In(ids) as any },\r\n    });\r\n    return await Promise.all(\r\n      items.map(async (item) => await this.modifyResult(item))\r\n    );\r\n  }\r\n\r\n  async getManyByIdsWithRelations(ids: string[]) {\r\n    const items = await this.find({\r\n      where: { id: In(ids) as any },\r\n      relations: this.relations(),\r\n    });\r\n    return await Promise.all(\r\n      items.map(async (item) => await this.modifyResult(item))\r\n    );\r\n  }\r\n\r\n  private async getPropertyValue(input: Record<string, any>, key: string) {\r\n    const getValue = async (key: string, value: any) => {\r\n      return typeof this.mapRelations()[key] === 'function'\r\n        ? (\r\n            (await this.mapRelations()[key]) as (\r\n              input: Record<string, any>\r\n            ) => any\r\n          )(input)\r\n        : (this.mapRelations()[key] as BaseRepository<unknown>).getById(value);\r\n    };\r\n    return this.mapRelations()?.[key]\r\n      ? await getValue(key, input[key])\r\n      : input[key];\r\n  }\r\n\r\n  public async createWithRelations(input: C) {\r\n    const newItem = this.create(await this.createRelationsInput(input));\r\n    await this.save(newItem);\r\n    return this.getByIdWithRelations(newItem.id);\r\n  }\r\n\r\n  public async updateWithRelations(id: string | Record<string, any>, input: U) {\r\n    const data = await this.updateRelationsInput(id, input);\r\n    await this.save(data);\r\n    return this.getByIdWithRelations(data.id);\r\n  }\r\n\r\n  private async createRelationsInput(input: C): Promise<DeepPartial<Entity>> {\r\n    for (const key of Object.keys(input)) {\r\n      input[key] = await this.getPropertyValue(input, key);\r\n    }\r\n\r\n    return input as DeepPartial<Entity>;\r\n  }\r\n\r\n  private async updateRelationsInput(\r\n    id: string | Record<string, any>,\r\n    input: U\r\n  ): Promise<Entity> {\r\n    const data =\r\n      typeof id === 'string'\r\n        ? await this.findOneBy({ id: id as any })\r\n        : await this.findOneBy(id);\r\n    if (!data) {\r\n      throw new NotFoundException();\r\n    }\r\n\r\n    for (const key of Object.keys(input)) {\r\n      data[key as keyof typeof data] = await this.getPropertyValue(input, key);\r\n    }\r\n\r\n    return cleanObject(data) as Entity;\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { FindOptionsWhere, ObjectLiteral } from 'typeorm';\r\nimport { BaseRepository } from './base.repository';\r\nimport { PaginationOptions } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class BaseService<\r\n  Entity extends ObjectLiteral,\r\n  C = Record<string, any>,\r\n  U = Record<string, any>,\r\n  F = PaginationOptions\r\n> {\r\n  constructor(protected readonly repository: BaseRepository<Entity>) {}\r\n\r\n  get(\r\n    where: FindOptionsWhere<Entity> | FindOptionsWhere<Entity>[]\r\n  ): Promise<Entity> {\r\n    return this.repository.getWithRelations(where);\r\n  }\r\n\r\n  getById(id: string): Promise<Entity> {\r\n    return this.repository.getByIdWithRelations(id);\r\n  }\r\n\r\n  getManyByIds(ids: string[]) {\r\n    return this.repository.getManyByIdsWithRelations(ids);\r\n  }\r\n\r\n  async create(input: C) {\r\n    const res = await this.repository.createWithRelations(input);\r\n    this.onCreated(res);\r\n    return res;\r\n  }\r\n\r\n  getAll(query: F) {\r\n    return this.repository.paginated(query);\r\n  }\r\n\r\n  async update(id: string | Record<string, any>, input: U): Promise<Entity> {\r\n    const prev =\r\n      typeof id === 'string'\r\n        ? await this.getById(id)\r\n        : await this.repository.findOne(id);\r\n    const res = await this.repository.updateWithRelations(id, input);\r\n    this.onUpdated(res, prev);\r\n    return res;\r\n  }\r\n\r\n  async delete(id: string, soft?: boolean) {\r\n    const res = await this.getById(id);\r\n    if (soft) {\r\n      await this.repository.softDelete({ id: id as any });\r\n    } else {\r\n      await this.repository.delete({ id: id as any });\r\n    }\r\n    this.onDeleted(res);\r\n    return;\r\n  }\r\n\r\n  protected onCreated(value: Entity) {\r\n    return;\r\n  }\r\n\r\n  protected onUpdated(value: Entity, prevValue: Entity) {\r\n    return;\r\n  }\r\n\r\n  protected onDeleted(value: Entity) {\r\n    return;\r\n  }\r\n}\r\n","export * from './base.service';\r\nexport * from './base.repository';\r\nexport * from './base.gateway';\r\n","import { Module, Global } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport repositories from './repositories';\r\nimport { ConfigModule, ConfigService } from '@nestjs/config';\r\n\r\n@Global()\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forRootAsync({\r\n      imports: [ConfigModule],\r\n      useFactory: (configService: ConfigService) =>\r\n        configService.get('database'),\r\n      inject: [ConfigService],\r\n    }),\r\n  ],\r\n  controllers: [],\r\n  providers: [...repositories],\r\n  exports: [...repositories],\r\n})\r\nexport class DatabaseModule {}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n  OneToMany,\r\n  Index,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { StoreEntity } from './store.entity';\r\n\r\n@Entity('categories')\r\n@Index(['parent', 'title', 'type'], { unique: true })\r\nexport class CategoryEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @ManyToOne(() => CategoryEntity, (category) => category.children)\r\n  parent?: CategoryEntity;\r\n\r\n  @OneToMany(() => CategoryEntity, (category) => category.parent)\r\n  children?: CategoryEntity[];\r\n\r\n  @Column()\r\n  title: string;\r\n\r\n  @Column()\r\n  description: string;\r\n\r\n  @Column()\r\n  type: string;\r\n\r\n  @ManyToOne(() => StoreEntity, (store) => store.categories, { nullable: true })\r\n  @JoinColumn({\r\n    name: 'store_id',\r\n    foreignKeyConstraintName: 'id',\r\n  })\r\n  store?: StoreEntity[];\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  Column,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  UpdateDateColumn,\r\n  OneToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { UserEntity } from './user.entity';\r\n\r\n@Entity('credentials')\r\nexport class CredentialEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @OneToOne(() => UserEntity, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  @JoinColumn()\r\n  user: UserEntity;\r\n\r\n  @Column({ unique: true })\r\n  email: string;\r\n\r\n  @Column({ length: 60 })\r\n  password: string;\r\n\r\n  @Column({ default: false })\r\n  verified: boolean;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @UpdateDateColumn()\r\n  updatedAt: Date;\r\n}\r\n","export * from './user.entity';\r\nexport * from './credential.entity';\r\nexport * from './transaction.entity';\r\nexport * from './category.entity';\r\nexport * from './permission.entity';\r\nexport * from './role.entity';\r\nexport * from './store.entity';\r\nexport * from './product.entity';\r\nexport * from './order.entity';\r\nexport * from './payment.entity';\r\nexport * from './notification.entity';\r\nexport * from './store-rating.entity';\r\nexport * from './tag.entity';\r\n\r\nimport { CategoryEntity } from './category.entity';\r\nimport { CredentialEntity } from './credential.entity';\r\nimport { NotificationEntity } from './notification.entity';\r\nimport { OrderEntity } from './order.entity';\r\nimport { PaymentEntity } from './payment.entity';\r\nimport { PermissionEntity } from './permission.entity';\r\nimport { ProductEntity } from './product.entity';\r\nimport { RoleEntity } from './role.entity';\r\nimport { StoreRatingEntity } from './store-rating.entity';\r\nimport { StoreEntity } from './store.entity';\r\nimport { TagEntity } from './tag.entity';\r\nimport { TransactionEntity } from './transaction.entity';\r\nimport { UserEntity } from './user.entity';\r\n\r\nexport default [\r\n  UserEntity,\r\n  CredentialEntity,\r\n  TransactionEntity,\r\n  CategoryEntity,\r\n  PermissionEntity,\r\n  RoleEntity,\r\n  StoreEntity,\r\n  ProductEntity,\r\n  OrderEntity,\r\n  PaymentEntity,\r\n  NotificationEntity,\r\n  StoreRatingEntity,\r\n  TagEntity,\r\n];\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n  DeleteDateColumn,\r\n} from 'typeorm';\r\nimport { UserEntity } from './user.entity';\r\nimport { INotificationMetadata } from '@nx-monorepo-template/global';\r\n\r\nexport enum NotificationType {\r\n  StoreOrderCreated = 'store-order-created',\r\n  StoreOrderUpdated = 'store-order-updated',\r\n  StoreOrderDeleted = 'store-order-deleted',\r\n  OrderCreated = 'order-created',\r\n  OrderUpdated = 'order-updated',\r\n  OrderDeleted = 'order-deleted',\r\n  AccountCreated = 'account-created',\r\n  AccountUpdated = 'account-updated',\r\n  AmountSent = 'amount-sent',\r\n  AmountReceived = 'amount-received',\r\n}\r\n\r\n@Entity('notifications')\r\nexport class NotificationEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @ManyToOne(() => UserEntity)\r\n  user: UserEntity;\r\n\r\n  @Column({ default: false })\r\n  opened: boolean;\r\n\r\n  @Column({\r\n    type: 'enum',\r\n    enum: NotificationType,\r\n  })\r\n  type: NotificationType;\r\n\r\n  @Column({\r\n    type: 'jsonb',\r\n  })\r\n  metadata: INotificationMetadata;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @DeleteDateColumn()\r\n  deletedAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n  UpdateDateColumn,\r\n  OneToOne,\r\n  JoinColumn,\r\n  Generated,\r\n} from 'typeorm';\r\nimport { StoreEntity } from './store.entity';\r\nimport { UserEntity } from './user.entity';\r\nimport { PaymentEntity } from './payment.entity';\r\nimport { OrderProduct } from '@nx-monorepo-template/global';\r\n\r\nenum OrderStatus {\r\n  Pending = 'pending',\r\n  Cancelled = 'cancelled',\r\n  Preparing = 'preparing',\r\n  Ready = 'ready',\r\n  Completed = 'completed',\r\n}\r\n\r\n@Entity('orders')\r\nexport class OrderEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @Generated('increment')\r\n  @Column()\r\n  ref: number;\r\n\r\n  @ManyToOne(() => StoreEntity)\r\n  store: StoreEntity;\r\n\r\n  @ManyToOne(() => UserEntity, undefined, { nullable: true })\r\n  user: UserEntity;\r\n\r\n  @Column({\r\n    type: 'jsonb',\r\n    transformer: {\r\n      to: (v) =>\r\n        v.map((item) => ({\r\n          ...item,\r\n          price: item.price / 100,\r\n        })),\r\n      from: (v) =>\r\n        v.map((item) => ({\r\n          ...item,\r\n          price: item.price * 100,\r\n        })),\r\n    },\r\n  })\r\n  items: OrderProduct[];\r\n\r\n  @Column({\r\n    type: 'enum',\r\n    enum: OrderStatus,\r\n    default: OrderStatus.Pending,\r\n  })\r\n  status: OrderStatus;\r\n\r\n  @OneToOne(() => PaymentEntity, (payment) => payment.order, { nullable: true })\r\n  @JoinColumn()\r\n  payment: PaymentEntity;\r\n\r\n  @UpdateDateColumn()\r\n  updatedAt: Date;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  OneToOne,\r\n  BeforeInsert,\r\n  BeforeUpdate,\r\n} from 'typeorm';\r\nimport { OrderEntity } from './order.entity';\r\n\r\nenum PaymentType {\r\n  Cash = 'cash',\r\n  Online = 'online',\r\n}\r\n\r\n@Entity('payments')\r\nexport class PaymentEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @OneToOne(() => OrderEntity, (order) => order.payment)\r\n  order: OrderEntity;\r\n\r\n  @Column({\r\n    type: 'enum',\r\n    enum: PaymentType,\r\n    default: PaymentType.Cash,\r\n  })\r\n  type: PaymentType;\r\n\r\n  @Column({\r\n    type: 'bigint',\r\n    transformer: {\r\n      to: (v) => v * 100,\r\n      from: (v) => v / 100,\r\n    },\r\n  })\r\n  amountPaid: number;\r\n\r\n  @Column({\r\n    type: 'bigint',\r\n    transformer: {\r\n      to: (v) => v * 100,\r\n      from: (v) => v / 100,\r\n    },\r\n  })\r\n  totalCost: number;\r\n\r\n  @Column({\r\n    type: 'bigint',\r\n    transformer: {\r\n      to: (v) => v * 100,\r\n      from: (v) => v / 100,\r\n    },\r\n  })\r\n  change: number;\r\n\r\n  @BeforeInsert()\r\n  @BeforeUpdate()\r\n  calcChange(): void {\r\n    this.change = this.amountPaid - this.totalCost;\r\n  }\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n} from 'typeorm';\r\nimport { CategoryEntity } from './category.entity';\r\n\r\n@Entity('permissions')\r\nexport class PermissionEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @Column({ unique: true })\r\n  code: string;\r\n\r\n  @Column()\r\n  title: string;\r\n\r\n  @Column()\r\n  description: string;\r\n\r\n  @ManyToOne(() => CategoryEntity)\r\n  category: CategoryEntity;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n  Index,\r\n} from 'typeorm';\r\nimport { CategoryEntity } from './category.entity';\r\nimport { StoreEntity } from './store.entity';\r\n\r\n@Entity('products')\r\n@Index(['title', 'store'], { unique: true })\r\nexport class ProductEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @ManyToOne(() => CategoryEntity)\r\n  category: CategoryEntity;\r\n\r\n  @ManyToOne(() => StoreEntity, (store) => store.products)\r\n  store: StoreEntity;\r\n\r\n  @Column()\r\n  title: string;\r\n\r\n  @Column()\r\n  description: string;\r\n\r\n  @Column({\r\n    type: 'bigint',\r\n    transformer: {\r\n      to: (v) => v * 100,\r\n      from: (v) => v / 100,\r\n    },\r\n  })\r\n  price: number;\r\n\r\n  @Column({ nullable: true })\r\n  image: string;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToMany,\r\n  JoinTable,\r\n} from 'typeorm';\r\nimport { PermissionEntity } from './permission.entity';\r\nimport { UserEntity } from './user.entity';\r\n\r\n@Entity('roles')\r\nexport class RoleEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @Column({ unique: true })\r\n  title: string;\r\n\r\n  @Column()\r\n  description: string;\r\n\r\n  @ManyToMany(() => PermissionEntity)\r\n  @JoinTable({ name: 'role_permissions' })\r\n  permissions: PermissionEntity[];\r\n\r\n  @ManyToMany(() => UserEntity, (user) => user.roles)\r\n  users: PermissionEntity[];\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n  UpdateDateColumn,\r\n  PrimaryColumn,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { StoreEntity } from './store.entity';\r\nimport { UserEntity } from './user.entity';\r\n\r\n@Entity('store_ratings')\r\nexport class StoreRatingEntity {\r\n  @PrimaryColumn()\r\n  storeId: string;\r\n\r\n  @ManyToOne(() => StoreEntity)\r\n  @JoinColumn({ name: 'store_id' })\r\n  store: StoreEntity;\r\n\r\n  @PrimaryColumn()\r\n  userId: string;\r\n\r\n  @ManyToOne(() => UserEntity)\r\n  @JoinColumn({ name: 'user_id' })\r\n  user: UserEntity;\r\n\r\n  @Column({\r\n    type: 'int',\r\n  })\r\n  rating: number;\r\n\r\n  @Column({\r\n    type: 'text',\r\n    nullable: true,\r\n  })\r\n  comment: string;\r\n\r\n  @UpdateDateColumn()\r\n  updatedAt: Date;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n  Index,\r\n  OneToMany,\r\n  ManyToMany,\r\n  JoinTable,\r\n  DeleteDateColumn,\r\n} from 'typeorm';\r\nimport { UserEntity } from './user.entity';\r\nimport { ProductEntity } from './product.entity';\r\nimport { TagEntity } from './tag.entity';\r\nimport { CategoryEntity } from './category.entity';\r\nimport { StoreConfig } from '@nx-monorepo-template/global';\r\n\r\n@Entity('stores')\r\n@Index(['title', 'owner'], { unique: true })\r\nexport class StoreEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @ManyToOne(() => UserEntity, (user) => user.stores)\r\n  owner?: UserEntity;\r\n\r\n  @OneToMany(() => ProductEntity, (product) => product.store)\r\n  products: ProductEntity[];\r\n\r\n  @Column()\r\n  title: string;\r\n\r\n  @Column({ nullable: true })\r\n  image: string;\r\n\r\n  @Column()\r\n  description: string;\r\n\r\n  @ManyToMany(() => TagEntity, (tag) => tag.stores)\r\n  @JoinTable({ name: 'store_tags' })\r\n  tags: TagEntity[];\r\n\r\n  @OneToMany(() => CategoryEntity, (category) => category.store)\r\n  @JoinTable({ name: 'store_categories' })\r\n  categories: CategoryEntity[];\r\n\r\n  @Column({ type: 'jsonb', nullable: true })\r\n  config?: StoreConfig;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @Column({ select: false, insert: false, readonly: true, nullable: true })\r\n  rating: number;\r\n\r\n  @DeleteDateColumn()\r\n  deletedAt?: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  Index,\r\n  ManyToMany,\r\n} from 'typeorm';\r\nimport { StoreEntity } from './store.entity';\r\n\r\n@Entity('tags')\r\n@Index(['title', 'type'], { unique: true })\r\nexport class TagEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @Column()\r\n  title: string;\r\n\r\n  @Column()\r\n  type: string;\r\n\r\n  @ManyToMany(() => StoreEntity, (store) => store.tags)\r\n  stores: StoreEntity[];\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  Column,\r\n  ManyToOne,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { UserEntity } from './user.entity';\r\n\r\n@Entity('transactions')\r\nexport class TransactionEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @ManyToOne(() => UserEntity, (user) => user.transactions)\r\n  @JoinColumn({ name: 'sender' })\r\n  sender?: UserEntity;\r\n\r\n  @ManyToOne(() => UserEntity, (user) => user.transactions)\r\n  @JoinColumn({ name: 'receiver' })\r\n  receiver?: UserEntity;\r\n\r\n  @Column({\r\n    type: 'bigint',\r\n    transformer: {\r\n      to: (v) => v * 100,\r\n      from: (v) => v / 100,\r\n    },\r\n  })\r\n  amount: number;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n}\r\n","import {\r\n  Entity,\r\n  Column,\r\n  PrimaryGeneratedColumn,\r\n  CreateDateColumn,\r\n  UpdateDateColumn,\r\n  DeleteDateColumn,\r\n  OneToOne,\r\n  OneToMany,\r\n  ManyToMany,\r\n  JoinTable,\r\n  BeforeInsert,\r\n} from 'typeorm';\r\nimport { CredentialEntity } from './credential.entity';\r\nimport { RoleEntity } from './role.entity';\r\nimport { TransactionEntity } from './transaction.entity';\r\nimport { StoreEntity } from './store.entity';\r\n\r\n@Entity('users')\r\nexport class UserEntity {\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @Column({ unique: true })\r\n  uniqueCode: string;\r\n\r\n  @OneToOne(() => CredentialEntity, (credential) => credential.user)\r\n  credential: CredentialEntity;\r\n\r\n  @OneToMany(\r\n    () => TransactionEntity,\r\n    (transaction) => transaction.sender ?? transaction.receiver\r\n  )\r\n  transactions: TransactionEntity[];\r\n\r\n  @Column()\r\n  firstName: string;\r\n\r\n  @Column()\r\n  lastName: string;\r\n\r\n  @ManyToMany(() => RoleEntity, (role) => role.users)\r\n  @JoinTable({ name: 'user_roles' })\r\n  roles: RoleEntity[];\r\n\r\n  @OneToMany(() => StoreEntity, (store) => store.owner)\r\n  stores: StoreEntity[];\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @UpdateDateColumn()\r\n  updatedAt: Date;\r\n\r\n  @DeleteDateColumn()\r\n  deletedAt: Date;\r\n\r\n  @BeforeInsert()\r\n  async generateRandomString() {\r\n    const timestamp = new Date().getTime().toString();\r\n    const characters = 'T5NYVA3ISZU7M';\r\n    let uniqueCode = '';\r\n\r\n    for (let i = 0; i < timestamp.length; i++) {\r\n      const digit = parseInt(timestamp[i]);\r\n      uniqueCode += characters.charAt(digit);\r\n    }\r\n\r\n    this.uniqueCode = uniqueCode;\r\n  }\r\n}\r\n","import userFactory from './user.factory';\r\n\r\nexport default [userFactory];\r\n","import { setSeederFactory } from 'typeorm-extension';\r\nimport { UserEntity } from '../entities';\r\n\r\nexport default setSeederFactory(UserEntity, (faker) => {\r\n  const user = new UserEntity();\r\n  user.firstName = faker.name.firstName('male');\r\n  user.lastName = faker.name.lastName('male');\r\n\r\n  return user;\r\n});\r\n","export * from './entities';\r\nexport * from './repositories';\r\nexport * from './database.module';\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  DataSource,\r\n  FindOptionsRelations,\r\n  FindOptionsWhere,\r\n  IsNull,\r\n  Not,\r\n} from 'typeorm';\r\nimport { CategoryEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { CreateCategory, UpdateCategory } from '@nx-monorepo-template/global';\r\nimport { StoreRepository } from './store.repository';\r\n\r\n@Injectable()\r\nexport class CategoryRepository extends BaseRepository<\r\n  CategoryEntity,\r\n  CreateCategory,\r\n  UpdateCategory\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    private readonly storeRepository: StoreRepository\r\n  ) {\r\n    super(CategoryEntity, dataSource);\r\n  }\r\n\r\n  getParentsByCategoryId(id: string): Promise<CategoryEntity[]> {\r\n    return this.query(`\r\n      WITH RECURSIVE category_tree AS (\r\n        SELECT\r\n          id,\r\n          title,\r\n          parent_id,\r\n          description,\r\n          type,\r\n          created_at,\r\n          1 AS level\r\n        FROM\r\n          categories\r\n        WHERE\r\n          id = '${id}'\r\n      \r\n        UNION ALL\r\n      \r\n        SELECT\r\n          c.id,\r\n          c.title,\r\n          c.parent_id,\r\n          c.description,\r\n          c.type,\r\n          c.created_at,\r\n          ct.level + 1 AS level\r\n        FROM\r\n          categories c\r\n        JOIN\r\n          category_tree ct ON c.id = ct.parent_id\r\n      )\r\n      SELECT\r\n        id,\r\n        title,\r\n        level\r\n        description,\r\n        type,\r\n        created_at\r\n      FROM\r\n        category_tree\r\n      ORDER BY\r\n        level DESC, id;\r\n    `);\r\n  }\r\n\r\n  searchFields(): string[] {\r\n    return ['title'];\r\n  }\r\n\r\n  protected mapRelations(): Record<string, BaseRepository<unknown>> {\r\n    return { parent: this, store: this.storeRepository };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<CategoryEntity> {\r\n    return { parent: true, children: true, store: true };\r\n  }\r\n\r\n  protected modifyWhere({\r\n    isRoot,\r\n    ...conditions\r\n  }: FindOptionsWhere<CategoryEntity> & {\r\n    isRoot: boolean;\r\n  }): FindOptionsWhere<CategoryEntity> {\r\n    if (isRoot !== undefined) {\r\n      conditions.parent = isRoot ? IsNull() : Not(IsNull());\r\n    }\r\n    return conditions;\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { DataSource } from 'typeorm';\r\nimport { CredentialEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\n\r\n@Injectable()\r\nexport class CredentialRepository extends BaseRepository<CredentialEntity> {\r\n  constructor(dataSource: DataSource) {\r\n    super(CredentialEntity, dataSource);\r\n  }\r\n}\r\n","export * from './user.repository';\r\nexport * from './credential.repository';\r\nexport * from './transaction.repository';\r\nexport * from './role.repository';\r\nexport * from './category.repository';\r\nexport * from './store.repository';\r\nexport * from './product.repository';\r\nexport * from './order.repository';\r\nexport * from './payment.repository';\r\nexport * from './permission.repository';\r\nexport * from './notification.repository';\r\nexport * from './store-rating.repository';\r\nexport * from './tag.repository';\r\n\r\nimport { UserRepository } from './user.repository';\r\nimport { CredentialRepository } from './credential.repository';\r\nimport { TransactionRepository } from './transaction.repository';\r\nimport { RoleRepository } from './role.repository';\r\nimport { CategoryRepository } from './category.repository';\r\nimport { StoreRepository } from './store.repository';\r\nimport { ProductRepository } from './product.repository';\r\nimport { OrderRepository } from './order.repository';\r\nimport { PaymentRepository } from './payment.repository';\r\nimport { PermissionRepository } from './permission.repository';\r\nimport { NotificationRepository } from './notification.repository';\r\nimport { StoreRatingRepository } from './store-rating.repository';\r\nimport { TagRepository } from './tag.repository';\r\n\r\nexport default [\r\n  UserRepository,\r\n  CredentialRepository,\r\n  TransactionRepository,\r\n  RoleRepository,\r\n  CategoryRepository,\r\n  StoreRepository,\r\n  ProductRepository,\r\n  OrderRepository,\r\n  PaymentRepository,\r\n  PermissionRepository,\r\n  NotificationRepository,\r\n  StoreRatingRepository,\r\n  TagRepository,\r\n];\r\n","import { Injectable } from '@nestjs/common';\r\nimport { DataSource, FindOptionsRelations } from 'typeorm';\r\nimport { NotificationEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport {\r\n  CreateNotification,\r\n  GetNotificationsOptions,\r\n  Notification,\r\n} from '@nx-monorepo-template/global';\r\nimport { UserRepository } from './user.repository';\r\nimport { OrderRepository } from './order.repository';\r\nimport { StoreRepository } from './store.repository';\r\n\r\n@Injectable()\r\nexport class NotificationRepository extends BaseRepository<\r\n  NotificationEntity,\r\n  CreateNotification,\r\n  unknown,\r\n  GetNotificationsOptions & { user: string }\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    private readonly userRepository: UserRepository,\r\n    private readonly orderRepository: OrderRepository,\r\n    private readonly storeRepository: StoreRepository\r\n  ) {\r\n    super(NotificationEntity, dataSource);\r\n  }\r\n\r\n  protected mapRelations(): Record<string, BaseRepository<unknown>> {\r\n    return {\r\n      user: this.userRepository,\r\n    };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<NotificationEntity> {\r\n    return {\r\n      user: true,\r\n    };\r\n  }\r\n\r\n  protected async modifyResult(\r\n    item: NotificationEntity\r\n  ): Promise<Notification> {\r\n    return {\r\n      ...item,\r\n      metadata: {\r\n        ...item.metadata,\r\n        order:\r\n          item.metadata.orderId &&\r\n          (await this.orderRepository.getByIdWithRelations(\r\n            item.metadata.orderId\r\n          )),\r\n        store:\r\n          item.metadata.storeId &&\r\n          (await this.storeRepository.getByIdWithRelations(\r\n            item.metadata.storeId\r\n          )),\r\n        user:\r\n          item.metadata.userId &&\r\n          (await this.userRepository.getByIdWithRelations(\r\n            item.metadata.userId\r\n          )),\r\n      },\r\n    };\r\n  }\r\n\r\n  public async getItems(userId: string) {\r\n    const result = await this.createQueryBuilder('notifications')\r\n      .leftJoinAndSelect('notifications.user', 'user')\r\n      .where('notifications.user_id = :userId', { userId })\r\n      .take(5)\r\n      .orderBy('notifications.createdAt', 'DESC')\r\n      .getMany();\r\n\r\n    return Promise.all(\r\n      result.map(async (item) => ({\r\n        ...item,\r\n        metadata: {\r\n          ...item.metadata,\r\n          order:\r\n            item.metadata.orderId &&\r\n            (await this.orderRepository.getByIdWithRelations(\r\n              item.metadata.orderId\r\n            )),\r\n          store:\r\n            item.metadata.storeId &&\r\n            (await this.storeRepository.getByIdWithRelations(\r\n              item.metadata.storeId\r\n            )),\r\n          user:\r\n            item.metadata.userId &&\r\n            (await this.userRepository.getByIdWithRelations(\r\n              item.metadata.userId\r\n            )),\r\n        },\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  Between,\r\n  DataSource,\r\n  FindOptionsRelations,\r\n  FindOptionsWhere,\r\n  In,\r\n  IsNull,\r\n  LessThanOrEqual,\r\n  MoreThanOrEqual,\r\n  Not,\r\n} from 'typeorm';\r\nimport { OrderEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { UserRepository } from './user.repository';\r\nimport { StoreRepository } from './store.repository';\r\nimport { PaymentRepository } from './payment.repository';\r\nimport { CreateOrder, UpdateOrder } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class OrderRepository extends BaseRepository<\r\n  OrderEntity,\r\n  CreateOrder,\r\n  UpdateOrder\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    private readonly userRepository: UserRepository,\r\n    private readonly storeRepository: StoreRepository,\r\n    private readonly paymenRepository: PaymentRepository\r\n  ) {\r\n    super(OrderEntity, dataSource);\r\n  }\r\n\r\n  protected mapRelations(): Record<string, BaseRepository<unknown>> {\r\n    return {\r\n      user: this.userRepository,\r\n      store: this.storeRepository,\r\n      payment: this.paymenRepository,\r\n    };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<OrderEntity> {\r\n    return {\r\n      user: true,\r\n      payment: true,\r\n      store: { owner: true },\r\n    };\r\n  }\r\n\r\n  protected modifyWhere({\r\n    ids,\r\n    storeIds,\r\n    isPaid,\r\n    userIds,\r\n    startDate,\r\n    endDate,\r\n    ...conditions\r\n  }: FindOptionsWhere<OrderEntity> & {\r\n    ids?: string[];\r\n    storeIds?: string[];\r\n    isPaid?: boolean;\r\n    userIds?: string[];\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n  }): FindOptionsWhere<OrderEntity> {\r\n    if (ids) conditions.id = In(ids);\r\n    if (storeIds) {\r\n      conditions.store = { id: In(storeIds) };\r\n    }\r\n    if (isPaid !== undefined) {\r\n      conditions.payment = isPaid ? Not(IsNull()) : IsNull();\r\n    }\r\n    if (userIds) {\r\n      conditions.user = { id: In(userIds) };\r\n    }\r\n    if (startDate && endDate) {\r\n      conditions.createdAt = Between(startDate, endDate);\r\n    } else if (startDate) {\r\n      conditions.createdAt = MoreThanOrEqual(startDate);\r\n    } else if (endDate) {\r\n      conditions.createdAt = LessThanOrEqual(endDate);\r\n    }\r\n    return conditions;\r\n  }\r\n}\r\n","import { Inject, Injectable, forwardRef } from '@nestjs/common';\r\nimport { DataSource, FindOptionsRelations } from 'typeorm';\r\nimport { PaymentEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { OrderRepository } from './order.repository';\r\nimport { CreatePayment, UpdatePayment } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class PaymentRepository extends BaseRepository<\r\n  PaymentEntity,\r\n  CreatePayment,\r\n  UpdatePayment\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    @Inject(forwardRef(() => OrderRepository))\r\n    protected readonly orderRepository: OrderRepository\r\n  ) {\r\n    super(PaymentEntity, dataSource);\r\n  }\r\n\r\n  protected mapRelations(): Record<string, BaseRepository<unknown>> {\r\n    return {\r\n      order: this.orderRepository,\r\n    };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<PaymentEntity> {\r\n    return {\r\n      order: true,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { DataSource, FindOptionsRelations } from 'typeorm';\r\nimport { PermissionEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\n\r\n@Injectable()\r\nexport class PermissionRepository extends BaseRepository<PermissionEntity> {\r\n  constructor(dataSource: DataSource) {\r\n    super(PermissionEntity, dataSource);\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<PermissionEntity> {\r\n    return {\r\n      category: true,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  Between,\r\n  DataSource,\r\n  FindOptionsRelations,\r\n  FindOptionsWhere,\r\n  In,\r\n  LessThanOrEqual,\r\n  MoreThanOrEqual,\r\n} from 'typeorm';\r\nimport { CategoryEntity, ProductEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { StoreRepository } from './store.repository';\r\nimport { CategoryRepository } from './category.repository';\r\nimport { CreateProduct, UpdateProduct } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class ProductRepository extends BaseRepository<\r\n  ProductEntity,\r\n  CreateProduct,\r\n  UpdateProduct\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    private readonly storeRepository: StoreRepository,\r\n    private readonly categoryRepository: CategoryRepository\r\n  ) {\r\n    super(ProductEntity, dataSource);\r\n  }\r\n\r\n  protected async modifyResult(\r\n    item: ProductEntity\r\n  ): Promise<ProductEntity & { categories: CategoryEntity[] }> {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n    return {\r\n      ...item,\r\n      categories: await this.categoryRepository.getParentsByCategoryId(\r\n        item.category.id\r\n      ),\r\n    };\r\n  }\r\n\r\n  protected searchFields(): string[] {\r\n    return ['title'];\r\n  }\r\n\r\n  protected mapRelations(): Record<string, BaseRepository<unknown>> {\r\n    return {\r\n      store: this.storeRepository,\r\n      category: this.categoryRepository,\r\n    };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<ProductEntity> {\r\n    return {\r\n      store: true,\r\n      category: true,\r\n    };\r\n  }\r\n\r\n  protected modifyWhere({\r\n    ids,\r\n    categoryIds,\r\n    minPrice,\r\n    maxPrice,\r\n    ...conditions\r\n  }: FindOptionsWhere<ProductEntity> & {\r\n    ids?: string[];\r\n    categoryIds?: string[];\r\n    minPrice?: number;\r\n    maxPrice?: number;\r\n  }): FindOptionsWhere<ProductEntity> {\r\n    if (ids) conditions.id = In(ids);\r\n    if (categoryIds) {\r\n      conditions.category = [\r\n        { id: In(categoryIds) },\r\n        { parent: In(categoryIds) },\r\n      ];\r\n    }\r\n    if (minPrice && maxPrice) {\r\n      conditions.price = Between(minPrice, maxPrice);\r\n    } else if (minPrice) {\r\n      conditions.price = MoreThanOrEqual(minPrice);\r\n    } else if (maxPrice) {\r\n      conditions.price = LessThanOrEqual(maxPrice);\r\n    }\r\n    return conditions;\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { DataSource, FindOptionsRelations } from 'typeorm';\r\nimport { RoleEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { CreateRole, UpdateRole } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class RoleRepository extends BaseRepository<\r\n  RoleEntity,\r\n  CreateRole,\r\n  UpdateRole\r\n> {\r\n  constructor(dataSource: DataSource) {\r\n    super(RoleEntity, dataSource);\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<RoleEntity> {\r\n    return {\r\n      permissions: true,\r\n    };\r\n  }\r\n}\r\n","import { Inject, Injectable, forwardRef } from '@nestjs/common';\r\nimport { DataSource, FindOptionsRelations } from 'typeorm';\r\nimport { StoreRatingEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { UserRepository } from './user.repository';\r\nimport { CreateStore, UpdateStore } from '@nx-monorepo-template/global';\r\nimport { StoreRepository } from './store.repository';\r\n\r\n@Injectable()\r\nexport class StoreRatingRepository extends BaseRepository<\r\n  StoreRatingEntity,\r\n  CreateStore,\r\n  UpdateStore\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    @Inject(forwardRef(() => StoreRepository))\r\n    private readonly storeRepository: StoreRepository,\r\n    private readonly userRepository: UserRepository\r\n  ) {\r\n    super(StoreRatingEntity, dataSource);\r\n  }\r\n\r\n  protected mapRelations(): Record<string, BaseRepository<unknown>> {\r\n    return {\r\n      store: this.storeRepository,\r\n      user: this.userRepository,\r\n    };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<StoreRatingEntity> {\r\n    return {\r\n      store: true,\r\n      user: true,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  DataSource,\r\n  FindOptionsRelations,\r\n  FindOptionsWhere,\r\n  In,\r\n} from 'typeorm';\r\nimport { StoreEntity, TagEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { UserRepository } from './user.repository';\r\nimport {\r\n  CreateStore,\r\n  UpdateStore,\r\n  isUUID,\r\n} from '@nx-monorepo-template/global';\r\nimport { StoreRatingRepository } from './store-rating.repository';\r\nimport { TagRepository } from './tag.repository';\r\n\r\n@Injectable()\r\nexport class StoreRepository extends BaseRepository<\r\n  StoreEntity,\r\n  CreateStore,\r\n  UpdateStore\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    private readonly ownerRepository: UserRepository,\r\n    private readonly storeRatingRepository: StoreRatingRepository,\r\n    private readonly tagRepository: TagRepository\r\n  ) {\r\n    super(StoreEntity, dataSource);\r\n  }\r\n\r\n  searchFields(): string[] {\r\n    return ['title'];\r\n  }\r\n\r\n  protected async modifyResult(item: StoreEntity): Promise<StoreEntity> {\r\n    if (!item) {\r\n      return null;\r\n    }\r\n    const rating = await this.storeRatingRepository.average('rating', {\r\n      storeId: item.id,\r\n    });\r\n\r\n    return {\r\n      ...item,\r\n      rating,\r\n    };\r\n  }\r\n\r\n  protected mapRelations(): Record<\r\n    string,\r\n    BaseRepository<unknown> | ((input: Record<string, any>) => any)\r\n  > {\r\n    return {\r\n      owner: this.ownerRepository,\r\n      tags: async (input: CreateStore | UpdateStore) => {\r\n        return await this.getTags(input.tags);\r\n      },\r\n    };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<StoreEntity> {\r\n    return {\r\n      owner: true,\r\n      tags: true,\r\n      products: true,\r\n    };\r\n  }\r\n\r\n  async getTags(items: string[]) {\r\n    const tags: TagEntity[] = [];\r\n\r\n    for (const item of items) {\r\n      if (isUUID(item)) {\r\n        const tag = await this.tagRepository.getById(item);\r\n        tags.push(tag);\r\n      } else {\r\n        let tag = await this.tagRepository.findOneBy({\r\n          title: item,\r\n          type: 'product',\r\n        });\r\n        if (!tag) {\r\n          tag = await this.tagRepository.createWithRelations({\r\n            title: item,\r\n            type: 'product',\r\n          });\r\n        }\r\n        tags.push(tag);\r\n      }\r\n    }\r\n\r\n    return tags;\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { DataSource, FindOptionsRelations } from 'typeorm';\r\nimport { TagEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { CreateTag, UpdateTag } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class TagRepository extends BaseRepository<\r\n  TagEntity,\r\n  CreateTag,\r\n  UpdateTag\r\n> {\r\n  constructor(dataSource: DataSource) {\r\n    super(TagEntity, dataSource);\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<TagEntity> {\r\n    return {\r\n      stores: true,\r\n    };\r\n  }\r\n\r\n  searchFields(): string[] {\r\n    return ['title'];\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  DataSource,\r\n  FindOptionsRelations,\r\n  FindOptionsWhere,\r\n  In,\r\n} from 'typeorm';\r\nimport { TransactionEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { UserRepository } from './user.repository';\r\nimport { CreateTransaction } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class TransactionRepository extends BaseRepository<\r\n  TransactionEntity,\r\n  CreateTransaction\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    private readonly userRepository: UserRepository\r\n  ) {\r\n    super(TransactionEntity, dataSource);\r\n  }\r\n\r\n  protected mapRelations(): Record<string, BaseRepository<unknown>> {\r\n    return {\r\n      sender: this.userRepository,\r\n      receiver: this.userRepository,\r\n    };\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<TransactionEntity> {\r\n    return {\r\n      sender: true,\r\n      receiver: true,\r\n    };\r\n  }\r\n\r\n  protected modifyWhere({\r\n    ids,\r\n    userIds,\r\n    ...conditions\r\n  }: FindOptionsWhere<TransactionEntity> & {\r\n    ids?: string[];\r\n    userIds?: string[];\r\n  }):\r\n    | FindOptionsWhere<TransactionEntity>\r\n    | FindOptionsWhere<TransactionEntity>[] {\r\n    if (ids) conditions.id = In(ids);\r\n    if (userIds) {\r\n      return [\r\n        { ...conditions, sender: In(userIds) },\r\n        { ...conditions, receiver: In(userIds) },\r\n      ];\r\n    }\r\n    return conditions;\r\n  }\r\n\r\n  async balance(userId: string) {\r\n    const result = await this.createQueryBuilder()\r\n      .select(\r\n        `SUM(\r\n            amount *\r\n            (\r\n                CASE\r\n                    WHEN receiver = :userId\r\n                    THEN 1\r\n                    ELSE -1\r\n                END\r\n            )\r\n          )`,\r\n        'balance'\r\n      )\r\n      .where(\r\n        `(receiver != sender OR receiver IS NULL OR sender IS NULL) AND (receiver = :userId OR sender = :userId)`\r\n      )\r\n      .setParameters({ userId })\r\n      .getRawOne();\r\n\r\n    return +(result?.balance ?? 0) / 100;\r\n  }\r\n\r\n  async systemCirculatingAmount() {\r\n    const result = await this.createQueryBuilder()\r\n      .select(\r\n        `SUM(\r\n            amount *\r\n            (\r\n                CASE\r\n                    WHEN receiver IS NULL\r\n                    THEN -1\r\n                    ELSE 1\r\n                END\r\n            )\r\n          )`,\r\n        'balance'\r\n      )\r\n      .where(`receiver IS NULL OR sender IS NULL`)\r\n      .getRawOne();\r\n\r\n    return +(result?.balance ?? 0) / 100;\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { DataSource, FindOptionsRelations } from 'typeorm';\r\nimport { UserEntity } from '../entities';\r\nimport { BaseRepository } from '../../core';\r\nimport { CreateUser, UpdateUser } from '@nx-monorepo-template/global';\r\nimport { RoleRepository } from './role.repository';\r\n\r\n@Injectable()\r\nexport class UserRepository extends BaseRepository<\r\n  UserEntity,\r\n  CreateUser,\r\n  UpdateUser\r\n> {\r\n  constructor(\r\n    dataSource: DataSource,\r\n    private readonly roleRepository: RoleRepository\r\n  ) {\r\n    super(UserEntity, dataSource);\r\n  }\r\n\r\n  protected relations(): FindOptionsRelations<UserEntity> {\r\n    return {\r\n      roles: { permissions: true },\r\n    };\r\n  }\r\n}\r\n","import RoleSeeder from './role.seeder';\r\n\r\nexport default [RoleSeeder];\r\n","import { Seeder } from 'typeorm-extension';\r\nimport { DataSource } from 'typeorm';\r\nimport { CategoryEntity, PermissionEntity, RoleEntity } from '../entities';\r\nimport { roles, permissions } from '../../config/roles-permissions';\r\n\r\nexport default class RoleSeeder implements Seeder {\r\n  public async run(dataSource: DataSource): Promise<void> {\r\n    const categoryRepository = dataSource.getRepository(CategoryEntity);\r\n    const permissionRepository = dataSource.getRepository(PermissionEntity);\r\n    const roleRepository = dataSource.getRepository(RoleEntity);\r\n\r\n    const rolesPermissions: Record<string, PermissionEntity[]> = roles.reduce(\r\n      (curr, item) => ({ ...curr, [item.title]: [] }),\r\n      {}\r\n    );\r\n\r\n    for (const item of permissions) {\r\n      const { generatedMaps } = await categoryRepository.upsert(\r\n        {\r\n          title: item.title,\r\n          description: item.description,\r\n          type: 'permission',\r\n        },\r\n        ['title', 'type', 'parent']\r\n      );\r\n\r\n      const newPermissions = await permissionRepository.upsert(\r\n        item.permissions.map((permission) => ({\r\n          ...permission,\r\n          category: generatedMaps[0],\r\n        })),\r\n        ['code']\r\n      );\r\n      newPermissions.generatedMaps.forEach((permission, i) => {\r\n        item.permissions[i].roles.forEach((key) => {\r\n          rolesPermissions[key].push(permission as PermissionEntity);\r\n        });\r\n      });\r\n    }\r\n\r\n    for (const role of roles) {\r\n      const newRole =\r\n        (await roleRepository.findOneBy({ title: role.title })) ??\r\n        new RoleEntity();\r\n      newRole.title = role.title;\r\n      newRole.description = role.description;\r\n      newRole.permissions = rolesPermissions[role.title];\r\n      await roleRepository.save(newRole);\r\n    }\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { EventGateway } from './gateways';\r\n\r\n@Global()\r\n@Module({\r\n  providers: [EventGateway],\r\n  exports: [EventGateway],\r\n})\r\nexport class EventModule {}\r\n","import {\r\n  SubscribeMessage,\r\n  WebSocketGateway,\r\n  MessageBody,\r\n  ConnectedSocket,\r\n} from '@nestjs/websockets';\r\nimport { BaseGateway } from '../../core';\r\nimport { Event, OrderStatus } from '@nx-monorepo-template/global';\r\nimport {\r\n  NotificationService,\r\n  OrderService,\r\n  StatisticService,\r\n  StoreService,\r\n} from '../../modules';\r\nimport { Socket } from 'socket.io-client';\r\nimport { Inject, forwardRef } from '@nestjs/common';\r\n\r\n@WebSocketGateway({\r\n  cors: '*',\r\n})\r\nexport class EventGateway extends BaseGateway {\r\n  constructor(\r\n    @Inject(forwardRef(() => NotificationService))\r\n    private readonly notificationService: NotificationService,\r\n    @Inject(forwardRef(() => StoreService))\r\n    private readonly storeService: StoreService,\r\n    @Inject(forwardRef(() => StatisticService))\r\n    private readonly statisticService: StatisticService,\r\n    @Inject(forwardRef(() => OrderService))\r\n    private readonly orderService: OrderService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  @SubscribeMessage(Event.NotificationStatus)\r\n  async notificationStatus(\r\n    @MessageBody() userId: string,\r\n    @ConnectedSocket() client: Socket\r\n  ) {\r\n    client.emit(\r\n      Event.NotificationStatus,\r\n      await this.notificationService.getStatus(userId)\r\n    );\r\n  }\r\n\r\n  @SubscribeMessage(Event.StoreStatus)\r\n  async storeStatus(\r\n    @MessageBody() storeId: string,\r\n    @ConnectedSocket() client: Socket\r\n  ) {\r\n    client.emit(Event.StoreStatus, await this.storeService.getStatus(storeId));\r\n  }\r\n\r\n  @SubscribeMessage(Event.StoreDashboard)\r\n  async storeDashboard(\r\n    @MessageBody() storeId: string,\r\n    @ConnectedSocket() client: Socket\r\n  ) {\r\n    client.emit(\r\n      Event.StoreDashboard,\r\n      await this.statisticService.getStoreDashboard(storeId)\r\n    );\r\n  }\r\n\r\n  @SubscribeMessage(Event.StorePreparation)\r\n  async storePreparation(\r\n    @MessageBody() storeId: string,\r\n    @ConnectedSocket() client: Socket\r\n  ) {\r\n    const orderResult = await this.orderService.getAll({\r\n      storeIds: [storeId],\r\n      perPage: 10,\r\n      orderBy: 'createdAt',\r\n      status: OrderStatus.Preparing,\r\n    });\r\n\r\n    client.emit(Event.StorePreparation, {\r\n      storeId,\r\n      preparing: orderResult.list,\r\n    });\r\n  }\r\n}\r\n","export * from './event.gateway';\r\n","export * from './event.module';\r\nexport * from './gateways';\r\n","import { Module, Global } from '@nestjs/common';\r\nimport { FileService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  providers: [FileService],\r\n  exports: [FileService],\r\n})\r\nexport class FileModule {}\r\n","export * from './services';\r\n\r\nexport * from './file.module';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport cloudinary, { UploadApiResponse } from 'cloudinary';\r\nimport streamifier from 'streamifier';\r\n\r\n@Injectable()\r\nexport class FileService {\r\n  constructor(private configService: ConfigService) {}\r\n\r\n  async uploadFile(\r\n    folder: string,\r\n    fileBuffer: Buffer\r\n  ): Promise<UploadApiResponse> {\r\n    const cloudinaryConfig = this.configService.get('cloudinary');\r\n\r\n    cloudinary.v2.config(cloudinaryConfig);\r\n\r\n    return new Promise((res, rej) => {\r\n      try {\r\n        const cld_upload_stream = cloudinary.v2.uploader.upload_stream(\r\n          { folder },\r\n          function (error, result) {\r\n            if (error) {\r\n              rej(error);\r\n            }\r\n            res(result);\r\n          }\r\n        );\r\n\r\n        streamifier.createReadStream(fileBuffer).pipe(cld_upload_stream);\r\n      } catch (err) {\r\n        rej(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  //   async getFile(bucketName: string, fileKey: string): Promise<Buffer> {\r\n  //     const response = await this.awsConfig.s3\r\n  //       .getObject({\r\n  //         Bucket: bucketName,\r\n  //         Key: fileKey,\r\n  //       })\r\n  //       .promise();\r\n\r\n  //     return response.Body as Buffer;\r\n  //   }\r\n\r\n  //   async deleteFile(bucketName: string, fileKey: string): Promise<void> {\r\n  //     await this.awsConfig.s3\r\n  //       .deleteObject({\r\n  //         Bucket: bucketName,\r\n  //         Key: fileKey,\r\n  //       })\r\n  //       .promise();\r\n  //   }\r\n}\r\n","export * from './file.service';\r\n","export * from './password.helper';\r\nexport * from './storage.helper';\r\n","import * as bcrypt from 'bcrypt';\r\n\r\nexport const hashPassword = async (password: string) => {\r\n  const salt = await bcrypt.genSalt();\r\n  return await bcrypt.hash(password, salt);\r\n};\r\n\r\nexport const checkPassword = async (password: string, hash: string) =>\r\n  bcrypt.compare(password, hash);\r\n","import { diskStorage } from 'multer';\r\nimport configuration from '../config/configuration';\r\n\r\nexport const generateUploadName = (fileName: string) => {\r\n  const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1e9);\r\n  return uniqueSuffix + '-' + fileName;\r\n};\r\n\r\nexport const uploadStorage = diskStorage({\r\n  destination: configuration().multer.dest,\r\n  filename: (req, file, callback) => {\r\n    callback(null, generateUploadName(file.originalname));\r\n  },\r\n});\r\n","export * from './parse-body.interceptor';\r\n","import {\r\n  Injectable,\r\n  NestInterceptor,\r\n  ExecutionContext,\r\n  CallHandler,\r\n} from '@nestjs/common';\r\nimport { parseDataForm } from '@nx-monorepo-template/global';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ParseBodyInterceptor implements NestInterceptor {\r\n  intercept(context: ExecutionContext, next: CallHandler): Observable<unknown> {\r\n    // console.log('Before request execution');\r\n\r\n    const request = context.switchToHttp().getRequest();\r\n    // Modify the request or perform any necessary operations\r\n\r\n    request.body = parseDataForm(request.body);\r\n\r\n    return next.handle().pipe(\r\n      tap(() => {\r\n        // console.log('After request execution');\r\n        // Modify the response or perform any necessary operations\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { AuthController } from './controllers';\r\nimport { AuthService } from './services';\r\nimport { JwtStrategy, LocalStrategy } from './strategies';\r\n\r\n@Global()\r\n@Module({\r\n  imports: [\r\n    PassportModule,\r\n    JwtModule.registerAsync({\r\n      useFactory: (configService: ConfigService) => configService.get('jwt'),\r\n      inject: [ConfigService],\r\n    }),\r\n  ],\r\n  controllers: [AuthController],\r\n  providers: [AuthService, LocalStrategy, JwtStrategy],\r\n})\r\nexport class AuthModule {}\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { Controller, UseGuards, Request } from '@nestjs/common';\r\nimport { contract, RolePermission } from '@nx-monorepo-template/global';\r\nimport { AuthService } from '../services';\r\nimport { JwtAuthGuard, LocalAuthGuard, PermissionGuard } from '../guards';\r\nimport { Permissions } from '../decorators';\r\n\r\nconst c = nestControllerContract(contract.auth);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@Controller()\r\nexport class AuthController implements NestControllerInterface<typeof c> {\r\n  constructor(private readonly authService: AuthService) {}\r\n\r\n  @TsRest(c.register)\r\n  async register(@TsRestRequest() { body }: RequestShapes['register']) {\r\n    const user = await this.authService.register(body);\r\n\r\n    return { status: 201 as const, body: user };\r\n  }\r\n\r\n  @UseGuards(LocalAuthGuard)\r\n  @TsRest(c.login)\r\n  async login(@Request() { user }) {\r\n    const result = await this.authService.login(user);\r\n\r\n    return { status: 201 as const, body: result };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @TsRest(c.verify)\r\n  async verify(@Request() { user }) {\r\n    return { status: 201 as const, body: user };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.AuthChangePassword)\r\n  @TsRest(c.changePassword)\r\n  async changePassword(\r\n    @Request() { user },\r\n    @TsRestRequest()\r\n    { body }: RequestShapes['changePassword']\r\n  ) {\r\n    await this.authService.changePassword(user.id, body);\r\n    return { status: 201 as const, body: user };\r\n  }\r\n\r\n  @TsRest(c.verifyEmail)\r\n  async verifyEmail(\r\n    @TsRestRequest()\r\n    { query }: RequestShapes['verifyEmail']\r\n  ) {\r\n    const user = await this.authService.verifyEmail(query.accessToken);\r\n    return { status: 201 as const, body: user };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @TsRest(c.resendVerifyEmail)\r\n  async resendVerifyEmail(@Request() { user }) {\r\n    const result = await this.authService.resendVerifyEmail(user.id);\r\n    return { status: 201 as const, body: result };\r\n  }\r\n}\r\n","export * from './auth.controller';\r\n","import { SetMetadata } from '@nestjs/common';\r\n\r\nexport const Auth = () => SetMetadata('auth', true);\r\n","export * from './permission.decorator';\r\nexport * from './auth.decorator';\r\n","import { SetMetadata } from '@nestjs/common';\r\n\r\nexport const Permissions = (...permissions: string[]) =>\r\n  SetMetadata('permissions', permissions);\r\n","import { SetMetadata } from '@nestjs/common';\r\n\r\nexport const AllowUnauthorize = () => SetMetadata('ALLOW_UNAUTHORIZE', true);\r\n","export * from './local-auth.guard';\r\nexport * from './jwt-auth.guard';\r\nexport * from './permission.guard';\r\nexport * from './allow-unauthorize.guard';\r\n","import { ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {\r\n  constructor(private readonly reflector: Reflector) {\r\n    super();\r\n  }\r\n\r\n  canActivate(context: ExecutionContext) {\r\n    const allowUnauthorize = this.reflector.get(\r\n      'ALLOW_UNAUTHORIZE',\r\n      context.getHandler()\r\n    );\r\n\r\n    const request = context.switchToHttp().getRequest();\r\n    if (allowUnauthorize && !request.headers.authorization) {\r\n      return true;\r\n    }\r\n    // Add your custom logic before calling the parent canActivate() method\r\n    // For example, you can perform additional checks or validations\r\n    // You can access the request using context.switchToHttp().getRequest()\r\n\r\n    return super.canActivate(context);\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class LocalAuthGuard extends AuthGuard('local') {}\r\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { TokenUser, checkUserPermission } from '@nx-monorepo-template/global';\r\n\r\n@Injectable()\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private reflector: Reflector) {}\r\n\r\n  canActivate(\r\n    context: ExecutionContext\r\n  ): boolean | Promise<boolean> | Observable<boolean> {\r\n    const permissions = this.reflector.get<string[]>(\r\n      'permissions',\r\n      context.getHandler()\r\n    );\r\n    if (!permissions) return true;\r\n    const request = context.switchToHttp().getRequest();\r\n    const user = request.user as TokenUser;\r\n\r\n    return checkUserPermission(user, permissions);\r\n  }\r\n}\r\n","export * from './auth.module';\r\nexport * from './guards';\r\nexport * from './decorators';\r\n","import {\r\n  Injectable,\r\n  UnauthorizedException,\r\n  ForbiddenException,\r\n  BadRequestException,\r\n} from '@nestjs/common';\r\nimport { ChangePassword, Login, Register } from '@nx-monorepo-template/global';\r\nimport { DataSource } from 'typeorm';\r\nimport {\r\n  CredentialRepository,\r\n  RoleRepository,\r\n  UserEntity,\r\n  UserRepository,\r\n} from '../../../database';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { MailService } from '../../mail/';\r\nimport { checkPassword, hashPassword } from '../../../helpers';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private readonly dataSource: DataSource,\r\n    private readonly credentialRepository: CredentialRepository,\r\n    private readonly userRepository: UserRepository,\r\n    private readonly roleRepository: RoleRepository,\r\n    private readonly jwtService: JwtService,\r\n    private readonly mailService: MailService\r\n  ) {}\r\n\r\n  async register({ firstName, lastName, email, password }: Register) {\r\n    if (await this.credentialRepository.findOneBy({ email })) {\r\n      throw new BadRequestException('Email already exists');\r\n    }\r\n    const queryRunner = this.dataSource.createQueryRunner();\r\n    await queryRunner.connect();\r\n    const user = this.userRepository.create({ firstName, lastName });\r\n    const credential = this.credentialRepository.create({\r\n      email,\r\n      password: await hashPassword(password),\r\n    });\r\n    await queryRunner.startTransaction();\r\n\r\n    try {\r\n      user.roles = [\r\n        await this.roleRepository.findOne({ where: { title: 'User' } }),\r\n      ];\r\n      await queryRunner.manager.save(user);\r\n      credential.user = user;\r\n      await queryRunner.manager.save(credential);\r\n      await queryRunner.commitTransaction();\r\n    } catch (err) {\r\n      await queryRunner.rollbackTransaction();\r\n      throw err;\r\n    } finally {\r\n      await queryRunner.release();\r\n    }\r\n\r\n    const accessToken = this.jwtService.sign(\r\n      { sub: user.id },\r\n      { expiresIn: '15m' }\r\n    );\r\n\r\n    delete credential.user;\r\n\r\n    user.credential = credential;\r\n    await this.mailService.sendUserConfirmation(user, accessToken);\r\n\r\n    return user;\r\n  }\r\n\r\n  async validateUser({ email, password }: Login) {\r\n    const credential = await this.credentialRepository.findOne({\r\n      where: { email },\r\n      relations: ['user'],\r\n    });\r\n\r\n    if (!credential || !(await checkPassword(password, credential.password))) {\r\n      throw new UnauthorizedException();\r\n    }\r\n\r\n    return credential.user;\r\n  }\r\n\r\n  async login(user: UserEntity) {\r\n    const payload = { sub: user.id };\r\n    return {\r\n      accessToken: this.jwtService.sign(payload),\r\n      user,\r\n    };\r\n  }\r\n\r\n  async changePassword(\r\n    id: string,\r\n    { currentPassword, newPassword }: ChangePassword\r\n  ) {\r\n    const credential = await this.credentialRepository.findOneBy({\r\n      user: { id },\r\n    });\r\n\r\n    if (\r\n      !credential ||\r\n      !(await checkPassword(currentPassword, credential.password))\r\n    ) {\r\n      throw new ForbiddenException();\r\n    }\r\n\r\n    credential.password = await hashPassword(newPassword);\r\n\r\n    await this.credentialRepository.save(credential);\r\n  }\r\n\r\n  async verifyEmail(token: string) {\r\n    try {\r\n      const result = await this.jwtService.verify(token);\r\n      const credential = await this.credentialRepository.findOne({\r\n        where: {\r\n          user: { id: result.sub },\r\n        },\r\n        relations: ['user'],\r\n      });\r\n\r\n      credential.verified = true;\r\n\r\n      await this.credentialRepository.save(credential);\r\n\r\n      return 'Thank you for verifying your email!';\r\n    } catch (err) {\r\n      throw new UnauthorizedException();\r\n    }\r\n  }\r\n\r\n  async resendVerifyEmail(id: string) {\r\n    const payload = { sub: id };\r\n    const user = await this.userRepository.findOne({\r\n      where: { id },\r\n      relations: ['credential'],\r\n    });\r\n\r\n    const accessToken = this.jwtService.sign(payload, { expiresIn: '15m' });\r\n\r\n    await this.mailService.sendUserConfirmation(user, accessToken);\r\n\r\n    return {\r\n      accessToken,\r\n    };\r\n  }\r\n\r\n  async verifyClientToken(token) {\r\n    try {\r\n      const result = await this.jwtService.verify(token);\r\n      return this.userRepository.findOneBy({ id: result.sub });\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","export * from './auth.service';\r\n","export * from './local.strategy';\r\nexport * from './jwt.strategy';\r\n","import { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { UserRepository } from '../../../database';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(\r\n    private readonly configService: ConfigService,\r\n    private readonly userRepository: UserRepository\r\n  ) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: configService.get('jwt').secret,\r\n    });\r\n  }\r\n\r\n  async validate(payload: { sub: string }) {\r\n    const user = await this.userRepository.findOne({\r\n      where: { id: payload.sub },\r\n      relations: {\r\n        roles: {\r\n          permissions: true,\r\n        },\r\n      },\r\n    });\r\n    if (!user) throw new UnauthorizedException();\r\n\r\n    return {\r\n      ...user,\r\n      roles: user.roles.map((role) => {\r\n        return {\r\n          ...role,\r\n          permissions: role.permissions.map(({ code }) => code),\r\n        };\r\n      }),\r\n    };\r\n  }\r\n}\r\n","import { Strategy } from 'passport-local';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { UserEntity } from '../../../database';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private readonly authService: AuthService) {\r\n    super({\r\n      usernameField: 'email',\r\n      passwordField: 'password',\r\n    });\r\n  }\r\n\r\n  async validate(email: string, password: string): Promise<UserEntity> {\r\n    const user = await this.authService.validateUser({ email, password });\r\n    if (!user) {\r\n      throw new UnauthorizedException();\r\n    }\r\n    return user;\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { CategoryController } from './controllers';\r\nimport { CategoryService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [CategoryController],\r\n  providers: [CategoryService],\r\n  exports: [CategoryService],\r\n})\r\nexport class CategoryModule {}\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { ConflictException, Controller, UseGuards } from '@nestjs/common';\r\nimport { contract, RolePermission } from '@nx-monorepo-template/global';\r\nimport { JwtAuthGuard, PermissionGuard } from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\nimport { CategoryService } from '../services';\r\nimport { ProductService } from '../../product';\r\n\r\nconst c = nestControllerContract(contract.category);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@Controller()\r\nexport class CategoryController implements NestControllerInterface<typeof c> {\r\n  constructor(\r\n    private readonly categoryService: CategoryService,\r\n    private readonly productService: ProductService\r\n  ) {}\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.CategoryCreate)\r\n  @TsRest(c.create)\r\n  async create(@TsRestRequest() { body }: RequestShapes['create']) {\r\n    const category = await this.categoryService.create(body);\r\n\r\n    return { status: 201 as const, body: category };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.CategoryGet)\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const category = await this.categoryService.getById(params.id);\r\n\r\n    if (!category) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: category };\r\n  }\r\n\r\n  // @Permissions(RolePermission.CategoryGetAll)\r\n  @TsRest(c.getAll)\r\n  async getAll(@TsRestRequest() { query }: RequestShapes['getAll']) {\r\n    const categories = await this.categoryService.getAll(query);\r\n\r\n    return { status: 200 as const, body: categories };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.CategoryUpdate)\r\n  @TsRest(c.update)\r\n  async update(@TsRestRequest() { params, body }: RequestShapes['update']) {\r\n    const updatedUser = await this.categoryService.update(params.id, body);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.CategoryDelete)\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    const subCategory = await this.categoryService.get({\r\n      parent: { id: params.id },\r\n    });\r\n\r\n    if (subCategory) {\r\n      throw new ConflictException(`Category still has sub-category`);\r\n    }\r\n\r\n    const product = await this.productService.get({\r\n      category: { id: params.id },\r\n    });\r\n\r\n    if (product) {\r\n      throw new ConflictException(`Category still linked to a product`);\r\n    }\r\n\r\n    await this.categoryService.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n}\r\n","export * from './category.controller';\r\n","export * from './category.module';\r\nexport * from './services';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { CategoryEntity, CategoryRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class CategoryService extends BaseService<CategoryEntity> {\r\n  constructor(protected readonly repository: CategoryRepository) {\r\n    super(repository);\r\n  }\r\n}\r\n","export * from './category.service';\r\n","export * from './user';\r\nexport * from './auth';\r\nexport * from './mail';\r\nexport * from './transaction';\r\nexport * from './category';\r\nexport * from './store';\r\nexport * from './product';\r\nexport * from './order';\r\nexport * from './payment';\r\nexport * from './role';\r\nexport * from './statistic';\r\nexport * from './permission';\r\nexport * from './notification';\r\nexport * from './store-rating';\r\nexport * from './tag';\r\n","export * from './services';\r\nexport * from './mail.module';\r\n","import { MailerModule } from '@nestjs-modules/mailer';\r\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\r\nimport { Module, Global } from '@nestjs/common';\r\nimport { MailService } from './services';\r\nimport { resolve } from 'path';\r\nimport { ConfigService } from '@nestjs/config';\r\n\r\n@Global()\r\n@Module({\r\n  imports: [\r\n    MailerModule.forRootAsync({\r\n      useFactory: async (config: ConfigService) => ({\r\n        transport: config.get('mail.transport'),\r\n        defaults: {\r\n          from: `\"No Reply\" <${config.get('mail.from')}>`,\r\n        },\r\n        template: {\r\n          dir: resolve(__dirname, './assets/templates'),\r\n          adapter: new HandlebarsAdapter(),\r\n          options: {\r\n            strict: true,\r\n          },\r\n        },\r\n      }),\r\n      inject: [ConfigService],\r\n    }),\r\n  ],\r\n  providers: [MailService],\r\n  exports: [MailService], // 👈 export for DI\r\n})\r\nexport class MailModule {}\r\n","export * from './mail.service';\r\n","import { MailerService } from '@nestjs-modules/mailer';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { UserEntity } from '../../../database';\r\n\r\n@Injectable()\r\nexport class MailService {\r\n  constructor(\r\n    private mailerService: MailerService,\r\n    private configService: ConfigService\r\n  ) {}\r\n\r\n  async sendUserConfirmation(user: UserEntity, token: string) {\r\n    const url = `${this.configService.get('host')}:${this.configService.get(\r\n      'port'\r\n    )}/api/v1/auth/verify-email?accessToken=${token}`;\r\n\r\n    await this.mailerService.sendMail({\r\n      to: user.credential.email,\r\n      // from: '\"Support Team\" <support@example.com>', // override default from\r\n      subject: 'Please confirm your Email',\r\n      template: 'verification',\r\n      context: {\r\n        name: user.firstName,\r\n        url,\r\n      },\r\n    });\r\n  }\r\n}\r\n","export * from './notification.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport {\r\n  Controller,\r\n  NotFoundException,\r\n  Request,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { contract } from '@nx-monorepo-template/global';\r\nimport { JwtAuthGuard } from '../../auth/guards';\r\nimport { NotificationService } from '../services';\r\n\r\nconst c = nestControllerContract(contract.notification);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard)\r\n@Controller()\r\nexport class NotificationController\r\n  implements NestControllerInterface<typeof c>\r\n{\r\n  constructor(private readonly service: NotificationService) {}\r\n\r\n  @TsRest(c.get)\r\n  async get(\r\n    @TsRestRequest() { params }: RequestShapes['get'],\r\n    @Request() { user }\r\n  ) {\r\n    const notification = await this.service.getById(params.id);\r\n\r\n    if (!notification || notification.user.id !== user.id) {\r\n      throw new NotFoundException();\r\n    }\r\n\r\n    return { status: 200 as const, body: notification };\r\n  }\r\n\r\n  @TsRest(c.getAll)\r\n  async getAll(\r\n    @TsRestRequest() { query }: RequestShapes['getAll'],\r\n    @Request() { user }\r\n  ) {\r\n    const notifications = await this.service.getAll({\r\n      ...query,\r\n      user: user.id,\r\n    });\r\n\r\n    return { status: 200 as const, body: notifications };\r\n  }\r\n\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    await this.service.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n\r\n  @TsRest(c.read)\r\n  async read(@TsRestRequest() { params }: RequestShapes['read']) {\r\n    await this.service.read(params.id);\r\n\r\n    return { status: 202 as const, body: '' };\r\n  }\r\n\r\n  @TsRest(c.readAll)\r\n  async readAll(@Request() { user }) {\r\n    await this.service.readAll(user.id);\r\n\r\n    return { status: 202 as const, body: '' };\r\n  }\r\n}\r\n","export * from './notification.module';\r\nexport * from './services';\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { NotificationController } from './controllers';\r\nimport { NotificationService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [NotificationController],\r\n  providers: [NotificationService],\r\n  exports: [NotificationService],\r\n})\r\nexport class NotificationModule {}\r\n","export * from './notification.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  NotificationEntity,\r\n  NotificationRepository,\r\n  NotificationType,\r\n} from '../../../database';\r\nimport { BaseService } from '../../../core';\r\nimport {\r\n  CreateNotification,\r\n  Event,\r\n  GetNotificationsOptions,\r\n} from '@nx-monorepo-template/global';\r\nimport { In } from 'typeorm';\r\nimport { EventGateway } from '../../../event';\r\n\r\n@Injectable()\r\nexport class NotificationService extends BaseService<\r\n  NotificationEntity,\r\n  CreateNotification,\r\n  unknown,\r\n  GetNotificationsOptions & { user: string }\r\n> {\r\n  constructor(\r\n    protected readonly repository: NotificationRepository,\r\n    protected readonly eventGateway: EventGateway\r\n  ) {\r\n    super(repository);\r\n  }\r\n\r\n  async getStatus(userId: string) {\r\n    const user = { id: userId };\r\n\r\n    const all = await this.repository.count({\r\n      where: {\r\n        user,\r\n        opened: false,\r\n      },\r\n    });\r\n\r\n    const account = await this.repository.count({\r\n      where: {\r\n        user,\r\n        opened: false,\r\n        type: In([\r\n          NotificationType.AccountCreated,\r\n          NotificationType.AccountUpdated,\r\n        ]),\r\n      },\r\n    });\r\n    const order = await this.repository.count({\r\n      where: {\r\n        user,\r\n        opened: false,\r\n        type: In([\r\n          NotificationType.OrderCreated,\r\n          NotificationType.OrderUpdated,\r\n          NotificationType.OrderDeleted,\r\n        ]),\r\n      },\r\n    });\r\n\r\n    const storeOrder = await this.repository.count({\r\n      where: {\r\n        user,\r\n        opened: false,\r\n        type: In([\r\n          NotificationType.StoreOrderCreated,\r\n          NotificationType.StoreOrderUpdated,\r\n          NotificationType.StoreOrderDeleted,\r\n        ]),\r\n      },\r\n    });\r\n\r\n    const wallet = await this.repository.count({\r\n      where: {\r\n        user,\r\n        opened: false,\r\n        type: In([\r\n          NotificationType.AmountReceived,\r\n          NotificationType.AmountSent,\r\n        ]),\r\n      },\r\n    });\r\n\r\n    const items =\r\n      (\r\n        await this.repository.paginated({\r\n          perPage: 5,\r\n          orderBy: 'createdAt',\r\n          orderDir: 'DESC',\r\n          user: userId,\r\n        })\r\n      ).list ?? [];\r\n\r\n    return {\r\n      all,\r\n      account,\r\n      order,\r\n      storeOrder,\r\n      wallet,\r\n      items,\r\n    };\r\n  }\r\n\r\n  async read(notificationId: string) {\r\n    const notification = await this.repository.getByIdWithRelations(\r\n      notificationId\r\n    );\r\n    notification.opened = true;\r\n    await this.repository.save(notification);\r\n    this.userNotificationStatusEvent(notification.user.id);\r\n  }\r\n\r\n  async readAll(userId: string) {\r\n    await this.repository.update({ user: { id: userId } }, { opened: true });\r\n    this.userNotificationStatusEvent(userId);\r\n  }\r\n\r\n  protected async onCreated(value: NotificationEntity) {\r\n    this.userNotificationStatusEvent(value.user.id);\r\n  }\r\n\r\n  public async userNotificationStatusEvent(userId: string) {\r\n    this.eventGateway.emitToUser(\r\n      userId,\r\n      Event.NotificationStatus,\r\n      await this.getStatus(userId)\r\n    );\r\n  }\r\n}\r\n","export * from './order.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport {\r\n  Controller,\r\n  ForbiddenException,\r\n  Request,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport {\r\n  checkUserPermission,\r\n  contract,\r\n  RolePermission,\r\n} from '@nx-monorepo-template/global';\r\nimport {\r\n  AllowUnauthorize,\r\n  JwtAuthGuard,\r\n  PermissionGuard,\r\n} from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\nimport { OrderService } from '../services';\r\nimport { StoreService } from '../../store/services';\r\n\r\nconst c = nestControllerContract(contract.order);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard, PermissionGuard)\r\n@Controller()\r\nexport class OrderController implements NestControllerInterface<typeof c> {\r\n  constructor(\r\n    private readonly orderService: OrderService,\r\n    private readonly storeService: StoreService\r\n  ) {}\r\n\r\n  @AllowUnauthorize()\r\n  @TsRest(c.create)\r\n  async create(@TsRestRequest() { body }: RequestShapes['create']) {\r\n    const order = await this.orderService.create(body);\r\n\r\n    return { status: 201 as const, body: order };\r\n  }\r\n\r\n  @AllowUnauthorize()\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const order = await this.orderService.getById(params.id);\r\n\r\n    if (!order) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: order };\r\n  }\r\n\r\n  @Permissions(\r\n    RolePermission.OrderGetAll,\r\n    RolePermission.OrderGetAllUnrestricted\r\n  )\r\n  @TsRest(c.getAll)\r\n  async getAll(\r\n    @TsRestRequest() { query }: RequestShapes['getAll'],\r\n    @Request() { user }\r\n  ) {\r\n    const { unrestricted, ...rest } = query;\r\n    if (!unrestricted && rest.storeIds) {\r\n      const stores = await this.storeService.getManyByIds(rest.storeIds);\r\n      const storeIds = stores.reduce((curr, item) => {\r\n        return item.owner.id === user.id ? [...curr, item.id] : curr;\r\n      }, []);\r\n      rest.storeIds = storeIds;\r\n    } else if (!unrestricted && user) {\r\n      rest.userIds = [user.id];\r\n    } else if (\r\n      !checkUserPermission(user, [RolePermission.OrderGetAllUnrestricted])\r\n    ) {\r\n      throw new ForbiddenException();\r\n    }\r\n    const users = await this.orderService.getAll(rest);\r\n\r\n    return { status: 200 as const, body: users };\r\n  }\r\n\r\n  @Permissions(RolePermission.OrderUpdate)\r\n  @TsRest(c.update)\r\n  async update(\r\n    @TsRestRequest() { query, params, body }: RequestShapes['update'],\r\n    @Request() { user }\r\n  ) {\r\n    const { unrestricted } = query;\r\n    const order = await this.orderService.getById(params.id);\r\n\r\n    if (\r\n      !unrestricted &&\r\n      order.store.owner.id !== user.id &&\r\n      !checkUserPermission(user, [RolePermission.OrderUpdateUnrestricted])\r\n    ) {\r\n      throw new ForbiddenException();\r\n    }\r\n    const updatedUser = await this.orderService.update(params.id, body);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @Permissions(RolePermission.OrderDelete)\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    await this.orderService.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n}\r\n","export * from './order.module';\r\nexport * from './services';\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { OrderController } from './controllers';\r\nimport { OrderService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [OrderController],\r\n  providers: [OrderService],\r\n  exports: [OrderService],\r\n})\r\nexport class OrderModule {}\r\n","export * from './order.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { OrderEntity, OrderRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\nimport {\r\n  CreateOrder,\r\n  Event,\r\n  GetOrdersOptions,\r\n  INotificationMetadata,\r\n  NotificationType,\r\n  OrderStatus,\r\n  UpdateOrder,\r\n} from '@nx-monorepo-template/global';\r\nimport { StoreService } from '../../store';\r\nimport { EventGateway } from '../../../event';\r\nimport { StatisticService } from '../../statistic';\r\nimport { NotificationService } from '../../notification';\r\n\r\n@Injectable()\r\nexport class OrderService extends BaseService<\r\n  OrderEntity,\r\n  CreateOrder,\r\n  UpdateOrder,\r\n  GetOrdersOptions\r\n> {\r\n  constructor(\r\n    protected readonly repository: OrderRepository,\r\n    protected readonly notificationService: NotificationService,\r\n    protected readonly storeService: StoreService,\r\n    protected readonly statisticService: StatisticService,\r\n    protected readonly eventGateway: EventGateway\r\n  ) {\r\n    super(repository);\r\n  }\r\n\r\n  protected async onCreated(order: OrderEntity): Promise<void> {\r\n    const storeId = order.store.id;\r\n    this.eventGateway.emitToUser(\r\n      order.store.owner.id,\r\n      Event.StoreDashboard,\r\n      await this.statisticService.getStoreDashboard(storeId)\r\n    );\r\n    if (order.user) {\r\n      await this.notificationService.create({\r\n        user: order.user.id,\r\n        type: NotificationType.OrderCreated,\r\n        metadata: {\r\n          orderId: order.id,\r\n        },\r\n      });\r\n    }\r\n    await this.notificationService.create({\r\n      user: order.store.owner.id,\r\n      type: NotificationType.StoreOrderCreated,\r\n      metadata: {\r\n        orderId: order.id,\r\n        storeId: order.store.id,\r\n      },\r\n    });\r\n    return;\r\n  }\r\n\r\n  protected async onUpdated(\r\n    order: OrderEntity,\r\n    prev: OrderEntity\r\n  ): Promise<void> {\r\n    const baseMetadata: INotificationMetadata = {\r\n      orderId: order.id,\r\n    };\r\n    if (prev.status !== order.status) {\r\n      const storeId = order.store.id;\r\n\r\n      this.eventGateway.emitToUser(\r\n        order.store.owner.id,\r\n        Event.StoreStatus,\r\n        await this.storeService.getStatus(storeId)\r\n      );\r\n      const orderResult = await this.getAll({\r\n        storeIds: [storeId],\r\n        perPage: 10,\r\n        orderBy: 'createdAt',\r\n        status: OrderStatus.Preparing,\r\n      });\r\n      this.eventGateway.emitToUser(\r\n        order.store.owner.id,\r\n        Event.StorePreparation,\r\n        {\r\n          storeId,\r\n          preparing: orderResult.list,\r\n        }\r\n      );\r\n      baseMetadata.status = order.status;\r\n    }\r\n    if (prev.payment?.id !== order.payment?.id) {\r\n      baseMetadata.amount = order.payment.totalCost;\r\n    }\r\n    if (order.user) {\r\n      await this.notificationService.create({\r\n        user: order.user.id,\r\n        type: NotificationType.OrderUpdated,\r\n        metadata: {\r\n          ...baseMetadata,\r\n        },\r\n      });\r\n    }\r\n    await this.notificationService.create({\r\n      user: order.store.owner.id,\r\n      type: NotificationType.StoreOrderUpdated,\r\n      metadata: {\r\n        ...baseMetadata,\r\n        storeId: order.store.id,\r\n      },\r\n    });\r\n    return;\r\n  }\r\n\r\n  protected async onDeleted(order: OrderEntity): Promise<void> {\r\n    if (order.user) {\r\n      await this.notificationService.create({\r\n        user: order.user.id,\r\n        type: NotificationType.OrderDeleted,\r\n        metadata: {\r\n          orderId: order.id,\r\n        },\r\n      });\r\n    }\r\n    await this.notificationService.create({\r\n      user: order.store.owner.id,\r\n      type: NotificationType.StoreOrderDeleted,\r\n      metadata: {\r\n        orderId: order.id,\r\n        storeId: order.store.id,\r\n      },\r\n    });\r\n    return;\r\n  }\r\n}\r\n","export * from './payment.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport {\r\n  Controller,\r\n  ForbiddenException,\r\n  Request,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { contract, RolePermission } from '@nx-monorepo-template/global';\r\nimport { JwtAuthGuard, PermissionGuard } from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\nimport { PaymentService } from '../services';\r\nimport { OrderService } from '../../order';\r\n\r\nconst c = nestControllerContract(contract.payment);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@Controller()\r\nexport class PaymentController implements NestControllerInterface<typeof c> {\r\n  constructor(\r\n    private readonly paymentService: PaymentService,\r\n    private readonly orderService: OrderService\r\n  ) {}\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.PaymentCreate)\r\n  @TsRest(c.create)\r\n  async create(\r\n    @TsRestRequest() { body }: RequestShapes['create'],\r\n    @Request() { user }\r\n  ) {\r\n    const order = await this.orderService.getById(body.order);\r\n    if (order.user !== user.id && order.store.owner.id !== user.id) {\r\n      throw new ForbiddenException();\r\n    }\r\n\r\n    const payment = await this.paymentService.create(body);\r\n\r\n    return { status: 201 as const, body: payment };\r\n  }\r\n\r\n  @Permissions(RolePermission.PaymentGet)\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const payment = await this.paymentService.getById(params.id);\r\n\r\n    if (!payment) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: payment };\r\n  }\r\n\r\n  @Permissions(RolePermission.PaymentGetAll)\r\n  @TsRest(c.getAll)\r\n  async getAll(@TsRestRequest() { query }: RequestShapes['getAll']) {\r\n    const users = await this.paymentService.getAll(query);\r\n\r\n    return { status: 200 as const, body: users };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.PaymentUpdate)\r\n  @TsRest(c.update)\r\n  async update(@TsRestRequest() { params, body }: RequestShapes['update']) {\r\n    const updatedUser = await this.paymentService.update(params.id, body);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.PaymentDelete)\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    await this.paymentService.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n}\r\n","export * from './payment.module';\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { PaymentController } from './controllers';\r\nimport { PaymentService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [PaymentController],\r\n  providers: [PaymentService],\r\n  exports: [PaymentService],\r\n})\r\nexport class PaymentModule {}\r\n","export * from './payment.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PaymentEntity, PaymentRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class PaymentService extends BaseService<PaymentEntity> {\r\n  constructor(protected readonly repository: PaymentRepository) {\r\n    super(repository);\r\n  }\r\n}\r\n","export * from './permission.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { Controller, UseGuards } from '@nestjs/common';\r\nimport { contract } from '@nx-monorepo-template/global';\r\nimport { JwtAuthGuard } from '../../auth/guards';\r\nimport { PermissionService } from '../services';\r\n\r\nconst c = nestControllerContract(contract.permission);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard)\r\n@Controller()\r\nexport class PermissionController implements NestControllerInterface<typeof c> {\r\n  constructor(private readonly service: PermissionService) {}\r\n\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const role = await this.service.getById(params.id);\r\n\r\n    if (!role) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: role };\r\n  }\r\n\r\n  @TsRest(c.getAll)\r\n  async getAll(@TsRestRequest() { query }: RequestShapes['getAll']) {\r\n    const users = await this.service.getAll(query);\r\n\r\n    return { status: 200 as const, body: users };\r\n  }\r\n}\r\n","export * from './permission.module';\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { PermissionController } from './controllers';\r\nimport { PermissionService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [PermissionController],\r\n  providers: [PermissionService],\r\n  exports: [PermissionService],\r\n})\r\nexport class PermissionModule {}\r\n","export * from './permission.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PermissionEntity, PermissionRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class PermissionService extends BaseService<PermissionEntity> {\r\n  constructor(protected readonly repository: PermissionRepository) {\r\n    super(repository);\r\n  }\r\n}\r\n","export * from './product.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport {\r\n  Controller,\r\n  UploadedFile,\r\n  UseGuards,\r\n  UseInterceptors,\r\n} from '@nestjs/common';\r\nimport {\r\n  contract,\r\n  CreateProduct,\r\n  RolePermission,\r\n  UpdateProduct,\r\n} from '@nx-monorepo-template/global';\r\nimport { JwtAuthGuard, PermissionGuard } from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\nimport { ProductService } from '../services';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport { ParseBodyInterceptor } from '../../../interceptors';\r\nimport { FileService } from '../../../file';\r\n\r\nconst c = nestControllerContract(contract.product);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@Controller()\r\nexport class ProductController implements NestControllerInterface<typeof c> {\r\n  constructor(\r\n    private readonly productService: ProductService,\r\n    private readonly fileService: FileService\r\n  ) {}\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.ProductCreate)\r\n  @UseInterceptors(FileInterceptor('image'), ParseBodyInterceptor)\r\n  @TsRest(c.create)\r\n  async create(\r\n    @TsRestRequest() { body }: RequestShapes['create'],\r\n    @UploadedFile() image: Express.Multer.File\r\n  ) {\r\n    const input = body as CreateProduct & { image?: string };\r\n\r\n    if (image) {\r\n      const uploadedFile = await this.fileService.uploadFile(\r\n        'product',\r\n        image.buffer\r\n      );\r\n      input.image = uploadedFile.secure_url;\r\n    }\r\n\r\n    const product = await this.productService.create(input);\r\n\r\n    return { status: 201 as const, body: product };\r\n  }\r\n\r\n  @Permissions(RolePermission.ProductGet)\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const product = await this.productService.getById(params.id);\r\n\r\n    if (!product) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: product };\r\n  }\r\n\r\n  @Permissions(RolePermission.ProductGetAll)\r\n  @TsRest(c.getAll)\r\n  async getAll(@TsRestRequest() { query }: RequestShapes['getAll']) {\r\n    const users = await this.productService.getAll(query);\r\n\r\n    return { status: 200 as const, body: users };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.ProductUpdate)\r\n  @UseInterceptors(FileInterceptor('image'), ParseBodyInterceptor)\r\n  @TsRest(c.update)\r\n  async update(\r\n    @TsRestRequest() { params, body }: RequestShapes['update'],\r\n    @UploadedFile() image: Express.Multer.File\r\n  ) {\r\n    const input = body as UpdateProduct & { image?: string };\r\n\r\n    if (image) {\r\n      const uploadedFile = await this.fileService.uploadFile(\r\n        'product',\r\n        image.buffer\r\n      );\r\n      input.image = uploadedFile.secure_url;\r\n    }\r\n\r\n    const updatedUser = await this.productService.update(params.id, input);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.ProductDelete)\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    await this.productService.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n}\r\n","export * from './product.module';\r\nexport * from './services';\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { ProductController } from './controllers';\r\nimport { ProductService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [ProductController],\r\n  providers: [ProductService],\r\n  exports: [ProductService],\r\n})\r\nexport class ProductModule {}\r\n","export * from './product.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { ProductEntity, ProductRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class ProductService extends BaseService<ProductEntity> {\r\n  constructor(protected readonly repository: ProductRepository) {\r\n    super(repository);\r\n  }\r\n}\r\n","export * from './role.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { Controller, UseGuards } from '@nestjs/common';\r\nimport { contract, RolePermission } from '@nx-monorepo-template/global';\r\nimport { JwtAuthGuard, PermissionGuard } from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\nimport { RoleService } from '../services';\r\n\r\nconst c = nestControllerContract(contract.role);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@Controller()\r\nexport class RoleController implements NestControllerInterface<typeof c> {\r\n  constructor(private readonly service: RoleService) {}\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.RoleCreate)\r\n  @TsRest(c.create)\r\n  async create(@TsRestRequest() { body }: RequestShapes['create']) {\r\n    const role = await this.service.create(body);\r\n\r\n    return { status: 201 as const, body: role };\r\n  }\r\n\r\n  @Permissions(RolePermission.RoleGet)\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const role = await this.service.getById(params.id);\r\n\r\n    if (!role) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: role };\r\n  }\r\n\r\n  @Permissions(RolePermission.RoleGetAll)\r\n  @TsRest(c.getAll)\r\n  async getAll(@TsRestRequest() { query }: RequestShapes['getAll']) {\r\n    const users = await this.service.getAll(query);\r\n\r\n    return { status: 200 as const, body: users };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.RoleUpdate)\r\n  @TsRest(c.update)\r\n  async update(@TsRestRequest() { params, body }: RequestShapes['update']) {\r\n    const updatedRole = await this.service.update(params.id, body);\r\n\r\n    return { status: 201 as const, body: updatedRole };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.RoleDelete)\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    await this.service.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard, PermissionGuard)\r\n  @Permissions(RolePermission.RoleUpdate)\r\n  @TsRest(c.updatePermissions)\r\n  async updatePermissions(\r\n    @TsRestRequest() { params, body }: RequestShapes['updatePermissions']\r\n  ) {\r\n    const updatedRole = await this.service.updatePermissions(params.id, body.ids);\r\n\r\n    return { status: 204 as const, body: updatedRole };\r\n  }\r\n}\r\n","export * from './role.module';\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { RoleController } from './controllers';\r\nimport { RoleService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [RoleController],\r\n  providers: [RoleService],\r\n  exports: [RoleService],\r\n})\r\nexport class RoleModule {}\r\n","export * from './role.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  PermissionRepository,\r\n  RoleEntity,\r\n  RoleRepository,\r\n} from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class RoleService extends BaseService<RoleEntity> {\r\n  constructor(\r\n    protected readonly repository: RoleRepository,\r\n    protected readonly permissionRepository: PermissionRepository\r\n  ) {\r\n    super(repository);\r\n  }\r\n\r\n  public async updatePermissions(id: string, permissionIds: string[]) {\r\n    const role = await this.repository.findOne({\r\n      where: { id },\r\n      relations: { permissions: true },\r\n    });\r\n\r\n    const permissionIdsSet = new Set(permissionIds);\r\n\r\n    role.permissions = role.permissions.filter(({ id }) => {\r\n      if (permissionIdsSet.has(id)) {\r\n        permissionIdsSet.delete(id);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    for (const permissionId of Array.from(permissionIdsSet)) {\r\n      const permission = await this.permissionRepository.findOneBy({\r\n        id: permissionId,\r\n      });\r\n      role.permissions.push(permission);\r\n    }\r\n\r\n    return this.repository.save(role);\r\n  }\r\n}\r\n","export * from './statistic.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { Controller, Request, UseGuards } from '@nestjs/common';\r\nimport {\r\n  checkUserPermission,\r\n  contract,\r\n  Dashboard,\r\n  RolePermission,\r\n  TokenUser,\r\n} from '@nx-monorepo-template/global';\r\nimport { JwtAuthGuard } from '../../auth/guards';\r\nimport { StatisticService } from '../services';\r\n\r\nconst c = nestControllerContract(contract.statistic);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard)\r\n@Controller()\r\nexport class StatisticController implements NestControllerInterface<typeof c> {\r\n  constructor(private readonly service: StatisticService) {}\r\n\r\n  @TsRest(c.dashboard)\r\n  async dashboard(\r\n    @TsRestRequest() { query }: RequestShapes['dashboard'],\r\n    @Request() { user }: { user: TokenUser }\r\n  ) {\r\n    const { unrestricted } = query;\r\n    const body: Dashboard = {};\r\n\r\n    body.myStoresCount = await this.service.getStoresCount(user.id);\r\n    body.myOrdersCount = await this.service.getOrdersCount(user.id);\r\n    body.myStoresOrdersCount = await this.service.getStoresOrdersCount(user.id);\r\n\r\n    if (unrestricted) {\r\n      if (checkUserPermission(user, [RolePermission.UserGetAll])) {\r\n        body.usersCount = await this.service.getOrdersCount();\r\n      }\r\n      if (checkUserPermission(user, [RolePermission.RoleGetAll])) {\r\n        body.rolesCount = await this.service.getRolesCount();\r\n      }\r\n      if (checkUserPermission(user, [RolePermission.CategoryGetAll])) {\r\n        body.categoriesCount = await this.service.getCategoriesCount();\r\n      }\r\n\r\n      body.storesCount = await this.service.getStoresCount();\r\n      body.ordersCount = await this.service.getOrdersCount();\r\n      body.circulatingAmount = await this.service.getCirculatingAmount();\r\n    }\r\n\r\n    return { status: 200 as const, body };\r\n  }\r\n}\r\n","export * from './statistic.module';\r\nexport * from './services';\r\n","export * from './statistic.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  CategoryRepository,\r\n  OrderRepository,\r\n  ProductRepository,\r\n  RoleRepository,\r\n  StoreRepository,\r\n  TransactionRepository,\r\n  UserRepository,\r\n} from '../../../database';\r\nimport { IsNull, Not } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class StatisticService {\r\n  constructor(\r\n    private readonly userRepository: UserRepository,\r\n    private readonly roleRepository: RoleRepository,\r\n    private readonly storeRepository: StoreRepository,\r\n    private readonly orderRepository: OrderRepository,\r\n    private readonly categoryRepository: CategoryRepository,\r\n    private readonly transactionRepository: TransactionRepository,\r\n    private readonly productRepository: ProductRepository\r\n  ) {}\r\n\r\n  async getStoresCount(userId?: string): Promise<number> {\r\n    const options = userId\r\n      ? {\r\n          where: { owner: { id: userId } },\r\n        }\r\n      : undefined;\r\n\r\n    return this.storeRepository.count(options);\r\n  }\r\n\r\n  async getOrdersCount(userId?: string): Promise<number> {\r\n    const options = userId\r\n      ? {\r\n          where: { user: { id: userId } },\r\n        }\r\n      : undefined;\r\n\r\n    return this.orderRepository.count(options);\r\n  }\r\n\r\n  async getStoresOrdersCount(userId: string): Promise<number> {\r\n    return this.orderRepository.count({\r\n      where: { store: { owner: { id: userId } } },\r\n    });\r\n  }\r\n\r\n  async getStoreOrdersCount(storeId: string): Promise<number> {\r\n    return this.orderRepository.count({\r\n      where: { store: { id: storeId } },\r\n    });\r\n  }\r\n\r\n  async getStorePaymentsCount(storeId: string): Promise<number> {\r\n    return this.orderRepository.count({\r\n      where: {\r\n        store: { id: storeId },\r\n        payment: {\r\n          id: Not(IsNull()),\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async getStoreCategoriesCount(storeId: string): Promise<number> {\r\n    return this.categoryRepository.count({\r\n      where: {\r\n        store: { id: storeId },\r\n      },\r\n    });\r\n  }\r\n\r\n  async getStoreProductsCount(storeId: string): Promise<number> {\r\n    return this.productRepository.count({\r\n      where: {\r\n        store: { id: storeId },\r\n      },\r\n    });\r\n  }\r\n\r\n  async getUsersCount(): Promise<number> {\r\n    return this.userRepository.count();\r\n  }\r\n\r\n  async getRolesCount(): Promise<number> {\r\n    return this.roleRepository.count();\r\n  }\r\n\r\n  async getCategoriesCount(): Promise<number> {\r\n    return this.categoryRepository.count();\r\n  }\r\n\r\n  async getCirculatingAmount(): Promise<number> {\r\n    return this.transactionRepository.systemCirculatingAmount();\r\n  }\r\n\r\n  async getStoreDashboard(storeId: string) {\r\n    return {\r\n      storeId,\r\n      categoriesCount: await this.getStoreCategoriesCount(storeId),\r\n      productsCount: await this.getStoreProductsCount(storeId),\r\n      ordersCount: await this.getStoreOrdersCount(storeId),\r\n      paymentsCount: await this.getStorePaymentsCount(storeId),\r\n    };\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { StatisticController } from './controllers';\r\nimport { StatisticService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [StatisticController],\r\n  providers: [StatisticService],\r\n  exports: [StatisticService],\r\n})\r\nexport class StatisticModule {}\r\n","export * from './store-rating.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { Controller, UseGuards, UseInterceptors } from '@nestjs/common';\r\nimport { contract } from '@nx-monorepo-template/global';\r\nimport {\r\n  AllowUnauthorize,\r\n  JwtAuthGuard,\r\n  PermissionGuard,\r\n} from '../../auth/guards';\r\nimport { StoreRatingService } from '../services';\r\nimport { ParseBodyInterceptor } from '../../../interceptors';\r\n\r\nconst c = nestControllerContract(contract.storeRating);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard, PermissionGuard)\r\n@Controller()\r\nexport class StoreRatingController\r\n  implements NestControllerInterface<typeof c>\r\n{\r\n  constructor(private readonly storeRatingService: StoreRatingService) {}\r\n  @TsRest(c.create)\r\n  async create(@TsRestRequest() { body }: RequestShapes['create']) {\r\n    const store = await this.storeRatingService.create(body);\r\n\r\n    return { status: 201 as const, body: store };\r\n  }\r\n\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const store = await this.storeRatingService.getById(params.id);\r\n\r\n    if (!store) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: store };\r\n  }\r\n\r\n  @AllowUnauthorize()\r\n  @TsRest(c.getAll)\r\n  async getAll(@TsRestRequest() { query }: RequestShapes['getAll']) {\r\n    const stores = await this.storeRatingService.getAll(query);\r\n\r\n    return { status: 200 as const, body: stores };\r\n  }\r\n\r\n  @UseInterceptors(ParseBodyInterceptor)\r\n  @TsRest(c.update)\r\n  async update(@TsRestRequest() { body }: RequestShapes['update']) {\r\n    const updatedUser = await this.storeRatingService.update(\r\n      {\r\n        userId: body.user,\r\n        storeId: body.store,\r\n      },\r\n      body\r\n    );\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    await this.storeRatingService.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n}\r\n","export * from './store-rating.module';\r\nexport * from './services';\r\n","export * from './store-rating.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { StoreRatingEntity, StoreRatingRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class StoreRatingService extends BaseService<StoreRatingEntity> {\r\n  constructor(protected readonly repository: StoreRatingRepository) {\r\n    super(repository);\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { StoreRatingController } from './controllers';\r\nimport { StoreRatingService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [StoreRatingController],\r\n  providers: [StoreRatingService],\r\n  exports: [StoreRatingService],\r\n})\r\nexport class StoreRatingModule {}\r\n","export * from './store.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport {\r\n  ConflictException,\r\n  Controller,\r\n  Request,\r\n  UploadedFile,\r\n  UseGuards,\r\n  UseInterceptors,\r\n} from '@nestjs/common';\r\nimport {\r\n  contract,\r\n  CreateStore,\r\n  RolePermission,\r\n  UpdateStore,\r\n} from '@nx-monorepo-template/global';\r\nimport {\r\n  AllowUnauthorize,\r\n  JwtAuthGuard,\r\n  PermissionGuard,\r\n} from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\nimport { StoreService } from '../services';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport { ParseBodyInterceptor } from '../../../interceptors';\r\nimport { FileService } from '../../../file';\r\nimport { CategoryService } from '../../category';\r\n\r\nconst c = nestControllerContract(contract.store);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard, PermissionGuard)\r\n@Controller()\r\nexport class StoreController implements NestControllerInterface<typeof c> {\r\n  constructor(\r\n    private readonly storeService: StoreService,\r\n    private readonly fileService: FileService,\r\n    private readonly categoryService: CategoryService\r\n  ) {}\r\n  @Permissions(RolePermission.StoreCreate)\r\n  @UseInterceptors(FileInterceptor('image'), ParseBodyInterceptor)\r\n  @TsRest(c.create)\r\n  async create(\r\n    @TsRestRequest() { body }: RequestShapes['create'],\r\n    @UploadedFile() image: Express.Multer.File\r\n  ) {\r\n    const input = body as CreateStore & { image?: string };\r\n\r\n    if (image) {\r\n      const uploadedFile = await this.fileService.uploadFile(\r\n        'shop',\r\n        image.buffer\r\n      );\r\n      input.image = uploadedFile.secure_url;\r\n    }\r\n\r\n    const store = await this.storeService.create(input);\r\n\r\n    return { status: 201 as const, body: store };\r\n  }\r\n\r\n  @AllowUnauthorize()\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const store = await this.storeService.getById(params.id);\r\n\r\n    if (!store) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: store };\r\n  }\r\n\r\n  @AllowUnauthorize()\r\n  @TsRest(c.getAll)\r\n  async getAll(\r\n    @TsRestRequest() { query }: RequestShapes['getAll'],\r\n    @Request() { user }\r\n  ) {\r\n    const { unrestricted, ...rest } = query;\r\n    if (!unrestricted && user) {\r\n      rest.owner = user.id;\r\n    }\r\n    const stores = await this.storeService.getAll(rest);\r\n\r\n    return { status: 200 as const, body: stores };\r\n  }\r\n\r\n  @Permissions(RolePermission.StoreUpdate)\r\n  @UseInterceptors(FileInterceptor('image'), ParseBodyInterceptor)\r\n  @TsRest(c.update)\r\n  async update(\r\n    @TsRestRequest() { params, body }: RequestShapes['update'],\r\n    @UploadedFile() image: Express.Multer.File\r\n  ) {\r\n    const input = body as UpdateStore & { image?: string };\r\n\r\n    if (image) {\r\n      const uploadedFile = await this.fileService.uploadFile(\r\n        'shop',\r\n        image.buffer\r\n      );\r\n      input.image = uploadedFile.secure_url;\r\n    }\r\n    const updatedUser = await this.storeService.update(params.id, input);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @Permissions(RolePermission.StoreDelete)\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    const category = await this.categoryService.get({\r\n      store: { id: params.id },\r\n    });\r\n\r\n    if (category) {\r\n      throw new ConflictException(`Store still linked to a category`);\r\n    }\r\n\r\n    await this.storeService.delete(params.id, true);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n\r\n  @Permissions(RolePermission.StoreUpdate)\r\n  @TsRest(c.updateConfig)\r\n  async updateConfig(\r\n    @TsRestRequest() { params, body }: RequestShapes['updateConfig']\r\n  ) {\r\n    const updatedUser = await this.storeService.updateConfig(params.id, body);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n}\r\n","export * from './store.module';\r\nexport * from './services';\r\n","export * from './store.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport {\r\n  OrderRepository,\r\n  StoreEntity,\r\n  StoreRepository,\r\n} from '../../../database';\r\nimport { BaseService } from '../../../core';\r\nimport {\r\n  EStoreEvent,\r\n  OrderStatus,\r\n  UpdateStoreConfig,\r\n} from '@nx-monorepo-template/global';\r\nimport { StatisticService } from '../../statistic';\r\nimport { EventGateway } from '../../../event';\r\n\r\n@Injectable()\r\nexport class StoreService extends BaseService<StoreEntity> {\r\n  constructor(\r\n    protected readonly repository: StoreRepository,\r\n    protected readonly orderRepository: OrderRepository,\r\n    protected readonly eventGateway: EventGateway,\r\n    protected readonly statisticService: StatisticService\r\n  ) {\r\n    super(repository);\r\n  }\r\n\r\n  async getStatus(storeId: string) {\r\n    return {\r\n      storeId,\r\n      preparing: await this.orderRepository.find({\r\n        where: {\r\n          status: OrderStatus.Preparing,\r\n          store: {\r\n            id: storeId,\r\n          },\r\n        },\r\n      }),\r\n      ready: await this.orderRepository.find({\r\n        where: {\r\n          status: OrderStatus.Ready,\r\n          store: {\r\n            id: storeId,\r\n          },\r\n        },\r\n      }),\r\n    };\r\n  }\r\n\r\n  public async storeStatusEvent(storeId: string) {\r\n    const store = await this.repository.getByIdWithRelations(storeId);\r\n    const socket = this.eventGateway.getSocket(store.owner.id);\r\n\r\n    socket?.emit(EStoreEvent.Status, await this.getStatus(storeId));\r\n  }\r\n\r\n  async storeDashboardEvent(storeId: string) {\r\n    const store = await this.repository.getByIdWithRelations(storeId);\r\n    const socket = this.eventGateway.getSocket(store.owner.id);\r\n\r\n    socket?.emit(\r\n      EStoreEvent.Dashboard,\r\n      await this.statisticService.getStoreDashboard(storeId)\r\n    );\r\n  }\r\n\r\n  async updateConfig(storeId: string, input: UpdateStoreConfig) {\r\n    await this.repository.updateWithRelations(storeId, { config: input });\r\n    return this.getById(storeId);\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { StoreController } from './controllers';\r\nimport { StoreService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [StoreController],\r\n  providers: [StoreService],\r\n  exports: [StoreService],\r\n})\r\nexport class StoreModule {}\r\n","export * from './tag.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { ConflictException, Controller, UseGuards } from '@nestjs/common';\r\nimport { contract } from '@nx-monorepo-template/global';\r\nimport {\r\n  AllowUnauthorize,\r\n  JwtAuthGuard,\r\n  PermissionGuard,\r\n} from '../../auth/guards';\r\nimport { TagService } from '../services';\r\nimport { StoreService } from '../../store';\r\n\r\nconst c = nestControllerContract(contract.tag);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard, PermissionGuard)\r\n@Controller()\r\nexport class TagController implements NestControllerInterface<typeof c> {\r\n  constructor(\r\n    private readonly tagService: TagService,\r\n    private readonly storeService: StoreService\r\n  ) {}\r\n\r\n  @TsRest(c.create)\r\n  async create(@TsRestRequest() { body }: RequestShapes['create']) {\r\n    const tag = await this.tagService.create(body);\r\n\r\n    return { status: 201 as const, body: tag };\r\n  }\r\n\r\n  @TsRest(c.get)\r\n  async get(@TsRestRequest() { params }: RequestShapes['get']) {\r\n    const tag = await this.tagService.getById(params.id);\r\n\r\n    if (!tag) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: tag };\r\n  }\r\n\r\n  @AllowUnauthorize()\r\n  @TsRest(c.getAll)\r\n  async getAll(@TsRestRequest() { query }: RequestShapes['getAll']) {\r\n    const categories = await this.tagService.getAll(query);\r\n\r\n    return { status: 200 as const, body: categories };\r\n  }\r\n\r\n  @TsRest(c.update)\r\n  async update(@TsRestRequest() { params, body }: RequestShapes['update']) {\r\n    const updatedUser = await this.tagService.update(params.id, body);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @TsRest(c.delete)\r\n  async delete(@TsRestRequest() { params }: RequestShapes['delete']) {\r\n    const store = await this.storeService.get({ tags: { id: params.id } });\r\n\r\n    if (store) {\r\n      throw new ConflictException(`Tag still linked to a store`);\r\n    }\r\n\r\n    await this.tagService.delete(params.id);\r\n\r\n    return { status: 204 as const, body: '' };\r\n  }\r\n}\r\n","export * from './tag.module';\r\n","export * from './tag.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { TagEntity, TagRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class TagService extends BaseService<TagEntity> {\r\n  constructor(protected readonly repository: TagRepository) {\r\n    super(repository);\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { TagController } from './controllers';\r\nimport { TagService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [TagController],\r\n  providers: [TagService],\r\n  exports: [TagService],\r\n})\r\nexport class TagModule {}\r\n","export * from './transaction.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport { Controller, UseGuards, Request } from '@nestjs/common';\r\nimport { contract, RolePermission } from '@nx-monorepo-template/global';\r\nimport { TransactionService } from '../services';\r\nimport { JwtAuthGuard, PermissionGuard } from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\n\r\nconst c = nestControllerContract(contract.transaction);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard, PermissionGuard)\r\n@Controller()\r\nexport class TransactionController\r\n  implements NestControllerInterface<typeof c>\r\n{\r\n  constructor(private readonly transactionService: TransactionService) {}\r\n\r\n  @Permissions(RolePermission.TransactionBalance)\r\n  @TsRest(c.balance)\r\n  async balance(@Request() { user }) {\r\n    const result = await this.transactionService.balance(user.id);\r\n    return { status: 200 as const, body: result };\r\n  }\r\n\r\n  @Permissions(RolePermission.TransactionGenerate)\r\n  @TsRest(c.generate)\r\n  async generate(\r\n    @TsRestRequest()\r\n    { body }: RequestShapes['generate']\r\n  ) {\r\n    const result = await this.transactionService.generate(body);\r\n    return { status: 201 as const, body: result };\r\n  }\r\n\r\n  @Permissions(RolePermission.TransactionTransfer)\r\n  @TsRest(c.transfer)\r\n  async transfer(\r\n    @Request() { user },\r\n    @TsRestRequest()\r\n    { body }: RequestShapes['transfer']\r\n  ) {\r\n    const result = await this.transactionService.transfer(body, user.id);\r\n    return { status: 201 as const, body: result };\r\n  }\r\n\r\n  @Permissions(RolePermission.TransactionGetTransactions)\r\n  @TsRest(c.getAll)\r\n  async getAll(\r\n    @TsRestRequest()\r\n    { query }: RequestShapes['getAll']\r\n  ) {\r\n    const result = await this.transactionService.getAll(query);\r\n    return { status: 200 as const, body: result };\r\n  }\r\n\r\n  @TsRest(c.pay)\r\n  async pay(\r\n    @Request() { user },\r\n    @TsRestRequest()\r\n    { body }: RequestShapes['pay']\r\n  ) {\r\n    const result = await this.transactionService.pay(body, user.id);\r\n    return { status: 201 as const, body: result };\r\n  }\r\n}\r\n","export * from './services';\r\nexport * from './transaction.module';\r\n","export * from './transaction.service';\r\n","import { BadRequestException, Injectable } from '@nestjs/common';\r\nimport {\r\n  CreateTransaction,\r\n  NotificationType,\r\n  OrderProduct,\r\n  Pay,\r\n  PaymentType,\r\n} from '@nx-monorepo-template/global';\r\nimport {\r\n  NotificationRepository,\r\n  OrderRepository,\r\n  PaymentRepository,\r\n  TransactionEntity,\r\n  TransactionRepository,\r\n  UserRepository,\r\n} from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class TransactionService extends BaseService<TransactionEntity> {\r\n  constructor(\r\n    protected readonly repository: TransactionRepository,\r\n    private readonly userRepository: UserRepository,\r\n    private readonly orderRepository: OrderRepository,\r\n    private readonly paymentRepository: PaymentRepository,\r\n    private readonly notificationRepository: NotificationRepository\r\n  ) {\r\n    super(repository);\r\n  }\r\n\r\n  async balance(userId: string) {\r\n    const balance = await this.repository.balance(userId);\r\n\r\n    return { balance };\r\n  }\r\n\r\n  async generate(input: CreateTransaction) {\r\n    const receiverData = await this.userRepository.findOneBy({\r\n      uniqueCode: input.receiver,\r\n    });\r\n    if (!receiverData) throw new BadRequestException(\"The user doesn't exists\");\r\n\r\n    const transaction = this.repository.create({\r\n      receiver: { id: receiverData.id },\r\n      amount: input.amount,\r\n    });\r\n\r\n    const createdTransaction = await this.repository.save(transaction);\r\n\r\n    await this.notificationRepository.createWithRelations({\r\n      type: NotificationType.AmountReceived,\r\n      user: receiverData.id,\r\n      metadata: {\r\n        amount: input.amount,\r\n      },\r\n    });\r\n\r\n    return createdTransaction;\r\n  }\r\n\r\n  async transfer(input: CreateTransaction, sender: string) {\r\n    const receiverData = await this.userRepository.findOneBy({\r\n      uniqueCode: input.receiver,\r\n    });\r\n    if (!receiverData) throw new BadRequestException(\"The user doesn't exists\");\r\n\r\n    const result = await this.balance(sender);\r\n\r\n    if (input.amount > +(result?.balance ?? 0)) {\r\n      throw new BadRequestException('Balance is not enough');\r\n    }\r\n\r\n    if (input.receiver === sender) {\r\n      throw new BadRequestException(\"Can't send amount to yourself\");\r\n    }\r\n\r\n    const transaction = this.repository.create({\r\n      receiver: { id: receiverData.id },\r\n      sender: { id: sender },\r\n      amount: input.amount,\r\n    });\r\n\r\n    const createdTransaction = await this.repository.save(transaction);\r\n\r\n    await this.notificationRepository.createWithRelations({\r\n      type: NotificationType.AmountReceived,\r\n      user: receiverData.id,\r\n      metadata: {\r\n        amount: input.amount,\r\n        userId: sender,\r\n      },\r\n    });\r\n\r\n    await this.notificationRepository.createWithRelations({\r\n      type: NotificationType.AmountSent,\r\n      user: sender,\r\n      metadata: {\r\n        amount: input.amount,\r\n        userId: receiverData.id,\r\n      },\r\n    });\r\n\r\n    return createdTransaction;\r\n  }\r\n\r\n  async pay(input: Pay, sender: string) {\r\n    const orderData = await this.orderRepository.findOne({\r\n      where: {\r\n        id: input.orderId,\r\n      },\r\n      relations: ['store', 'store.owner'],\r\n    });\r\n    if (!orderData) throw new BadRequestException(\"The order doesn't exists\");\r\n\r\n    const result = await this.balance(sender);\r\n\r\n    const reducer = (curr, item: OrderProduct) => {\r\n      return curr + Math.floor(item.price * item.count * 100) / 100;\r\n    };\r\n\r\n    const totalCost = orderData.items.reduce(reducer, 0);\r\n\r\n    if (totalCost > +(result?.balance ?? 0)) {\r\n      throw new BadRequestException('Balance is not enough');\r\n    }\r\n\r\n    const transaction = this.repository.create({\r\n      receiver: { id: orderData.store.owner.id },\r\n      sender: { id: sender },\r\n      amount: totalCost,\r\n    });\r\n    const createdTransaction = await this.repository.save(transaction);\r\n\r\n    const payment = this.paymentRepository.create({\r\n      order: { id: orderData.id },\r\n      amountPaid: totalCost,\r\n      totalCost,\r\n      change: 0,\r\n      type: PaymentType.Online,\r\n    });\r\n    await this.paymentRepository.save(payment);\r\n\r\n    await this.notificationRepository.createWithRelations({\r\n      type: NotificationType.AmountReceived,\r\n      user: transaction.receiver.id,\r\n      metadata: {\r\n        orderId: orderData.id,\r\n        storeId: orderData.store.id,\r\n        amount: totalCost,\r\n        userId: sender,\r\n      },\r\n    });\r\n\r\n    await this.notificationRepository.createWithRelations({\r\n      type: NotificationType.AmountSent,\r\n      user: sender,\r\n      metadata: {\r\n        orderId: orderData.id,\r\n        amount: totalCost,\r\n        userId: transaction.receiver.id,\r\n      },\r\n    });\r\n\r\n    return createdTransaction;\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { TransactionController } from './controllers';\r\nimport { TransactionService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [TransactionController],\r\n  providers: [TransactionService],\r\n  exports: [TransactionService],\r\n})\r\nexport class TransactionModule {}\r\n","export * from './user.controller';\r\n","import {\r\n  nestControllerContract,\r\n  NestControllerInterface,\r\n  NestRequestShapes,\r\n  TsRest,\r\n  TsRestRequest,\r\n} from '@ts-rest/nest';\r\nimport {\r\n  Controller,\r\n  UseGuards,\r\n  Request,\r\n  ForbiddenException,\r\n} from '@nestjs/common';\r\nimport {\r\n  checkUserPermission,\r\n  contract,\r\n  RolePermission,\r\n} from '@nx-monorepo-template/global';\r\nimport { UserService } from '../services';\r\nimport { JwtAuthGuard, PermissionGuard } from '../../auth/guards';\r\nimport { Permissions } from '../../auth';\r\n\r\nconst c = nestControllerContract(contract.user);\r\ntype RequestShapes = NestRequestShapes<typeof c>;\r\n\r\n@UseGuards(JwtAuthGuard, PermissionGuard)\r\n@Controller()\r\nexport class UserController implements NestControllerInterface<typeof c> {\r\n  constructor(private readonly userService: UserService) {}\r\n\r\n  @Permissions(RolePermission.UserCreate)\r\n  @TsRest(c.createUser)\r\n  async createUser(@TsRestRequest() { body }: RequestShapes['createUser']) {\r\n    const post = await this.userService.create(body);\r\n\r\n    return { status: 201 as const, body: post };\r\n  }\r\n\r\n  @Permissions(RolePermission.UserGet)\r\n  @TsRest(c.getUser)\r\n  async getUser(@TsRestRequest() { params }: RequestShapes['getUser']) {\r\n    const post = await this.userService.getById(params.id);\r\n\r\n    if (!post) {\r\n      return { status: 404 as const, body: null };\r\n    }\r\n\r\n    return { status: 200 as const, body: post };\r\n  }\r\n\r\n  @Permissions(RolePermission.UserGetAll)\r\n  @TsRest(c.getUsers)\r\n  async getUsers(@TsRestRequest() { query }: RequestShapes['getUsers']) {\r\n    const users = await this.userService.getAll(query);\r\n\r\n    return { status: 200 as const, body: users };\r\n  }\r\n\r\n  @Permissions(RolePermission.UserUpdate, RolePermission.UserUpdateUnrestricted)\r\n  @TsRest(c.updateUser)\r\n  async updateUser(\r\n    @Request() { user },\r\n    @TsRestRequest() { params, body }: RequestShapes['updateUser']\r\n  ) {\r\n    if (\r\n      user.id !== params.id &&\r\n      !checkUserPermission(user, [RolePermission.UserUpdateUnrestricted])\r\n    ) {\r\n      throw new ForbiddenException();\r\n    }\r\n\r\n    const updatedUser = await this.userService.update(params.id, body);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @Permissions(RolePermission.UserUpdate, RolePermission.UserUpdateUnrestricted)\r\n  @TsRest(c.assignRole)\r\n  async assignRole(\r\n    @TsRestRequest() { params, body }: RequestShapes['assignRole']\r\n  ) {\r\n    const updatedUser = await this.userService.assignRole(\r\n      params.id,\r\n      body.roleId\r\n    );\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @Permissions(RolePermission.UserUpdate, RolePermission.UserUpdateUnrestricted)\r\n  @TsRest(c.unassignRole)\r\n  async unassignRole(\r\n    @TsRestRequest() { params, body }: RequestShapes['unassignRole']\r\n  ) {\r\n    const updatedUser = await this.userService.unassignRole(\r\n      params.id,\r\n      body.roleId\r\n    );\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n\r\n  @Permissions(RolePermission.UserUpdate)\r\n  @TsRest(c.assignAsStoreOwner)\r\n  async assignAsStoreOwner(\r\n    @TsRestRequest() { params }: RequestShapes['assignAsStoreOwner']\r\n  ) {\r\n    const updatedUser = await this.userService.assignAsStoreOwner(params.id);\r\n\r\n    return { status: 201 as const, body: updatedUser };\r\n  }\r\n}\r\n","export * from './user.module';\r\n","export * from './user.service';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { RoleRepository, UserEntity, UserRepository } from '../../../database';\r\nimport { BaseService } from '../../../core';\r\n\r\n@Injectable()\r\nexport class UserService extends BaseService<UserEntity> {\r\n  constructor(\r\n    protected readonly repository: UserRepository,\r\n    private readonly roleRepository: RoleRepository\r\n  ) {\r\n    super(repository);\r\n  }\r\n\r\n  public async assignRole(id: string, roleId: string) {\r\n    const user = await this.repository.getByIdWithRelations(id);\r\n    const role = await this.roleRepository.findOneBy({ id: roleId });\r\n    user.roles.push(role);\r\n\r\n    return this.repository.save(user);\r\n  }\r\n\r\n  public async unassignRole(id: string, roleId: string) {\r\n    const user = await this.repository.getByIdWithRelations(id);\r\n    user.roles = user.roles.filter((role) => role.id !== roleId);\r\n\r\n    return this.repository.save(user);\r\n  }\r\n\r\n  public async assignAsStoreOwner(id: string) {\r\n    const user = await this.repository.getByIdWithRelations(id);\r\n    const role = await this.roleRepository.findOneBy({ title: 'Store Owner' });\r\n    user.roles.push(role);\r\n\r\n    return this.repository.save(user);\r\n  }\r\n}\r\n","import { Global, Module } from '@nestjs/common';\r\nimport { UserController } from './controllers';\r\nimport { UserService } from './services';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [UserController],\r\n  providers: [UserService],\r\n  exports: [UserService],\r\n})\r\nexport class UserModule {}\r\n","module.exports = require(\"@nestjs-modules/mailer\");","module.exports = require(\"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/platform-express\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"@nestjs/websockets\");","module.exports = require(\"@ts-rest/core\");","module.exports = require(\"@ts-rest/nest\");","module.exports = require(\"bcrypt\");","module.exports = require(\"cloudinary\");","module.exports = require(\"express\");","module.exports = require(\"multer\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"streamifier\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"typeorm-extension\");","module.exports = require(\"typeorm-naming-strategies\");","module.exports = require(\"zod\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\nimport configuration from './app/config/configuration';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  // const globalPrefix = 'api/v1';\n  // app.setGlobalPrefix(globalPrefix);\n  app.enableCors();\n\n  const port = configuration().port;\n\n  await app.listen(port);\n  Logger.log(`🚀 Application is running on: http://localhost:${port}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}